{"version":3,"sources":["webpack:///./components/PlaylistManager/Panel/PlaylistEmpty.js","webpack:///./mobile/components/MediaList/Row.js","webpack:///./mobile/components/MediaList/index.js","webpack:///./mobile/components/PlaylistManager/PlaylistPanel.js","webpack:///./mobile/components/PlaylistManager/index.js"],"names":["enhance","Object","react_i18next__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_builtin_jsx__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_icons_PlaylistAdd__WEBPACK_IMPORTED_MODULE_5__","className","PlaylistEmpty","_ref","t","_ref2","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","propTypes","__webpack_exports__","Row_MediaRow","media","jsx_default","ListItem","Avatar","src","thumbnail","style","borderRadius","ListItemText","primary","title","secondary","artist","Row","components_MediaList","withProps_default","listComponent","react_default","a","forwardRef","props","ref","createElement","List","extends_default","list","react_dom_default","findDOMNode","rowComponent","BaseMediaList","PlaylistPanel_PlaylistPanel","items","length","PlaylistManager_PlaylistPanel","PlaylistManager_PlaylistManager","selectedPlaylist","selectedItems","onCloseOverlay","Header","name","Content"],"mappings":"qJAMMA,EAAUC,OAAAC,EAAA,EAAAD,KAIZE,IAACC,EAAA,GAAUC,UAAU,4BAFnBC,EAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAH,OACpBL,IAAA,OAAKE,UAAU,4BAAf,EAAAI,EAEEN,IAACO,EAAA,GAAWL,UAAU,kCAAtB,EAAmDG,EAAE,6BACrDL,IAACO,EAAA,UAAD,EAAaF,EAAE,kCAInBF,EAAcK,aAIdC,EAAA,EAAeZ,EAAQM,sMCdjBO,EAAW,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,MAAH,OACfC,IAACC,EAAA,GAASX,UAAU,uBAApB,EACEU,IAACE,EAAA,GACCC,IAAKJ,EAAMK,UACXC,OAASC,aAAc,KAEzBN,IAACO,EAAA,GACCC,QAAST,EAAMU,MACfC,UAAWX,EAAMY,WAKvBb,EAASF,aAIT,IAAAgB,EAAA,ECJAC,EAZkBC,KAChBC,cAAeC,EAAAC,EAAMC,WAAW,SAACC,EAAOC,GAAR,OAC9BJ,EAAAC,EAAAI,cAACC,EAAA,EAADC,OACMJ,GACJC,IAAK,SAAAI,GAAA,OACHJ,EAAII,GAAQC,EAAAR,EAASS,YAAYF,UAIvCG,aAAcf,GATEE,CAUfc,EAAA,cCJG5B,IAACT,EAAA,MARDsC,EAAgB,SAAArC,GAAA,IAAGsC,EAAHtC,EAAGsC,MAAH,OACpB9B,IAAA,OAAKV,UAAU,sBAAf,EACGwC,EAAMC,OAAS,EACd/B,IAACa,GACCvB,UAAU,sBACVS,MAAO+B,IAHVpC,IAWLmC,EAAcjC,aAId,IAAAoC,EAAA,EChBMC,EAAkB,SAAAzC,GAAA,IACtB0C,EADsB1C,EACtB0C,iBACAC,EAFsB3C,EAEtB2C,cACAC,EAHsB5C,EAGtB4C,eAHsB,OAKtBpC,IAAA,OAAKV,UAAU,wBAAf,EACEU,IAACqC,EAAA,GACC/C,UAAU,iBACVmB,MAAOyB,EAAiBI,KACxBF,eAAgBA,IAElBpC,IAACuC,EAAA,UAAD,EACEvC,IAACgC,GAAcF,MAAOK,OAK5BF,EAAgBrC,aAQhBC,EAAA","file":"playlistsMobile_094cbb4.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/PlaylistAdd';\n\nconst enhance = translate();\n\nconst PlaylistEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.empty')}</Typography>\n    <Typography>{t('playlists.playlist.emptySub')}</Typography>\n  </div>\n);\n\nPlaylistEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistEmpty);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MediaRow = ({ media }) => (\n  <ListItem className=\"MobileMediaRow\">\n    <Avatar\n      src={media.thumbnail}\n      style={{ borderRadius: 0 }}\n    />\n    <ListItemText\n      primary={media.title}\n      secondary={media.artist}\n    />\n  </ListItem>\n);\n\nMediaRow.propTypes = {\n  media: PropTypes.object,\n};\n\nexport default MediaRow;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport withProps from 'recompose/withProps';\nimport List from '@material-ui/core/List';\nimport Base from '../../../components/MediaList/BaseMediaList';\nimport MediaRow from './Row';\n\nconst MediaList = withProps({\n  listComponent: React.forwardRef((props, ref) => (\n    <List\n      {...props}\n      ref={list => (\n        ref(list && ReactDOM.findDOMNode(list)) // eslint-disable-line react/no-find-dom-node\n      )}\n    />\n  )),\n  rowComponent: MediaRow,\n})(Base);\n\nexport default MediaList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../MediaList';\nimport PlaylistEmpty from '../../../components/PlaylistManager/Panel/PlaylistEmpty';\n\nconst PlaylistPanel = ({ items }) => (\n  <div className=\"PlaylistPanel\">\n    {items.length > 0 ? (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        media={items}\n      />\n    ) : (\n      <PlaylistEmpty />\n    )}\n  </div>\n);\n\nPlaylistPanel.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default PlaylistPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayHeader from '../../../components/Overlay/Header';\nimport OverlayContent from '../../../components/Overlay/Content';\nimport PlaylistPanel from './PlaylistPanel';\n\nconst PlaylistManager = ({\n  selectedPlaylist,\n  selectedItems,\n  onCloseOverlay,\n}) => (\n  <div className=\"PlaylistManager\">\n    <OverlayHeader\n      className=\"PlaylistHeader\"\n      title={selectedPlaylist.name}\n      onCloseOverlay={onCloseOverlay}\n    />\n    <OverlayContent>\n      <PlaylistPanel items={selectedItems} />\n    </OverlayContent>\n  </div>\n);\n\nPlaylistManager.propTypes = {\n  selectedPlaylist: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedItems: PropTypes.array.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}