{"version":3,"sources":["webpack:///./mobile/components/MediaList/Row.js","webpack:///./mobile/components/MediaList/index.js","webpack:///./mobile/components/PlaylistManager/PlaylistPanel.js","webpack:///./mobile/components/PlaylistManager/index.js"],"names":["Row_MediaRow","_ref","media","jsx_default","ListItem","className","Avatar","src","thumbnail","style","borderRadius","ListItemText","primary","title","secondary","artist","propTypes","Row","components_MediaList","withProps_default","listComponent","react_default","a","forwardRef","props","ref","createElement","List","extends_default","list","react_dom_default","findDOMNode","rowComponent","BaseMediaList","PlaylistPanel_PlaylistPanel","items","PlaylistManager_PlaylistPanel","PlaylistManager_PlaylistManager","selectedPlaylist","selectedItems","onCloseOverlay","Header","name","Content","__webpack_exports__"],"mappings":"2PAKMA,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACfC,IAACC,EAAA,GAASC,UAAU,uBAApB,EACEF,IAACG,EAAA,GACCC,IAAKL,EAAMM,UACXC,OAASC,aAAc,KAEzBP,IAACQ,EAAA,GACCC,QAASV,EAAMW,MACfC,UAAWZ,EAAMa,WAKvBf,EAASgB,aAIT,IAAAC,EAAA,ECHAC,EAZkBC,KAChBC,cAAeC,EAAAC,EAAMC,WAAW,SAACC,EAAOC,GAAR,OAC9BJ,EAAAC,EAAAI,cAACC,EAAA,EAADC,OACMJ,GACJC,IAAK,SAAAI,GAAA,OACHJ,EAAII,GAAQC,EAAAR,EAASS,YAAYF,UAIvCG,aAAcf,GATEE,CAUfc,EAAA,GCbGC,EAAgB,SAAAjC,GAAA,IAAGkC,EAAHlC,EAAGkC,MAAH,OACpBhC,IAAA,OAAKE,UAAU,sBAAf,EACEF,IAACe,GACCb,UAAU,sBACVH,MAAOiC,MAKbD,EAAclB,aAId,IAAAoB,EAAA,ECXMC,EAAkB,SAAApC,GAAA,IACtBqC,EADsBrC,EACtBqC,iBACAC,EAFsBtC,EAEtBsC,cACAC,EAHsBvC,EAGtBuC,eAHsB,OAKtBrC,IAAA,OAAKE,UAAU,wBAAf,EACEF,IAACsC,EAAA,GACCpC,UAAU,iBACVQ,MAAOyB,EAAiBI,KACxBF,eAAgBA,IAElBrC,IAACwC,EAAA,UAAD,EACExC,IAACiC,GAAcD,MAAOI,OAK5BF,EAAgBrB,aAQhB4B,EAAA","file":"playlistsMobile_4e3f097.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from 'material-ui/Avatar';\nimport { ListItem, ListItemText } from 'material-ui/List';\n\nconst MediaRow = ({ media }) => (\n  <ListItem className=\"MobileMediaRow\">\n    <Avatar\n      src={media.thumbnail}\n      style={{ borderRadius: 0 }}\n    />\n    <ListItemText\n      primary={media.title}\n      secondary={media.artist}\n    />\n  </ListItem>\n);\n\nMediaRow.propTypes = {\n  media: PropTypes.object,\n};\n\nexport default MediaRow;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport withProps from 'recompose/withProps';\nimport List from 'material-ui/List';\nimport Base from '../../../components/MediaList/BaseMediaList';\nimport MediaRow from './Row';\n\nconst MediaList = withProps({\n  listComponent: React.forwardRef((props, ref) => (\n    <List\n      {...props}\n      ref={list =>\n        ref(list && ReactDOM.findDOMNode(list)) // eslint-disable-line react/no-find-dom-node\n      }\n    />\n  )),\n  rowComponent: MediaRow,\n})(Base);\n\nexport default MediaList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../MediaList';\n\nconst PlaylistPanel = ({ items }) => (\n  <div className=\"PlaylistPanel\">\n    <MediaList\n      className=\"PlaylistPanel-media\"\n      media={items}\n    />\n  </div>\n);\n\nPlaylistPanel.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n\nexport default PlaylistPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayHeader from '../../../components/Overlay/Header';\nimport OverlayContent from '../../../components/Overlay/Content';\nimport PlaylistPanel from './PlaylistPanel';\n\nconst PlaylistManager = ({\n  selectedPlaylist,\n  selectedItems,\n  onCloseOverlay,\n}) => (\n  <div className=\"PlaylistManager\">\n    <OverlayHeader\n      className=\"PlaylistHeader\"\n      title={selectedPlaylist.name}\n      onCloseOverlay={onCloseOverlay}\n    />\n    <OverlayContent>\n      <PlaylistPanel items={selectedItems} />\n    </OverlayContent>\n  </div>\n);\n\nPlaylistManager.propTypes = {\n  selectedPlaylist: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedItems: PropTypes.array.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}