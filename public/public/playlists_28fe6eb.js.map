{"version":3,"sources":["webpack:///../node_modules/@material-ui/icons/es/Edit.js","webpack:///./components/Dialogs/ConfirmDialog/index.js","webpack:///../node_modules/lodash/debounce.js","webpack:///../node_modules/lodash/now.js","webpack:///../node_modules/lodash/toNumber.js","webpack:///./components/PlaylistManager/Panel/PlaylistEmpty.js","webpack:///./actions/ImportActionCreators.js","webpack:///./actions/SearchActionCreators.js","webpack:///./components/PlaylistManager/Menu/Row.js","webpack:///./components/PlaylistManager/Menu/NewPlaylist.js","webpack:///../node_modules/@material-ui/icons/es/Search.js","webpack:///./components/PlaylistManager/Menu/SearchResultsRow.js","webpack:///../node_modules/@material-ui/icons/es/Input.js","webpack:///./components/PlaylistManager/Menu/PlaylistImportRow.js","webpack:///./components/PlaylistManager/Menu/index.js","webpack:///./containers/PlaylistManagerMenu.js","webpack:///../node_modules/@material-ui/icons/es/CheckBox.js","webpack:///../node_modules/@material-ui/icons/es/CheckBoxOutlineBlank.js","webpack:///./components/PlaylistManager/Panel/RenamePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Delete.js","webpack:///./components/PlaylistManager/Panel/DeletePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Shuffle.js","webpack:///./components/PlaylistManager/Panel/ShufflePlaylistButton.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilter.js","webpack:///./components/PlaylistManager/Panel/Meta.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilterEmpty.js","webpack:///./components/PlaylistManager/Panel/PlaylistItemRow.js","webpack:///./components/MediaList/Actions/RemoveFromPlaylist.js","webpack:///./components/MediaList/Actions/EditMedia.js","webpack:///./components/MediaList/Actions/MoveToFirst.js","webpack:///./components/MediaList/Actions/MoveToLast.js","webpack:///./components/PlaylistManager/Panel/index.js","webpack:///./containers/PlaylistManagerPanel.js","webpack:///./components/PlaylistManager/Import/index.js","webpack:///./containers/PlaylistImportManager.js","webpack:///./components/PlaylistManager/SearchResults/NoSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/LoadingSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/SearchResultsList.js","webpack:///./components/PlaylistManager/SearchResults/index.js","webpack:///./containers/SearchResultsPanel.js","webpack:///./components/SearchBar/index.js","webpack:///./components/PlaylistManager/Header/SourcePickerElement.js","webpack:///./components/PlaylistManager/Header/SourcePicker.js","webpack:///./components/PlaylistManager/Header/SearchBar.js","webpack:///./containers/MediaSearchBar.js","webpack:///./components/PlaylistManager/Header/index.js","webpack:///./components/PlaylistManager/NoPlaylists.js","webpack:///./components/PlaylistManager/index.js"],"names":["Object","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","d","fill","_babel_runtime_helpers_builtin_jsx__WEBPACK_IMPORTED_MODULE_0___default","className","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7__","size","ConfirmDialog","state","busy","handleSubmit","event","preventDefault","handleConfirm","onConfirm","_this","props","promise","finally","setState","handleClose","onCancel","render","_this$props","this","children","cancelLabel","confirmLabel","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_2___default","onClose","open","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_6__","_Form__WEBPACK_IMPORTED_MODULE_8__","onSubmit","_Form_Group__WEBPACK_IMPORTED_MODULE_9__","_Form_Button__WEBPACK_IMPORTED_MODULE_10__","disabled","onClick","_ref","react__WEBPACK_IMPORTED_MODULE_3___default","Component","defaultProps","propTypes","isObject","__webpack_require__","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","cancel","clearTimeout","flush","root","Date","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","value","other","valueOf","replace","isBinary","test","slice","enhance","react_i18next__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_PlaylistAdd__WEBPACK_IMPORTED_MODULE_5__","PlaylistEmpty","t","_ref2","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","__webpack_exports__","ImportActionCreators_showImportPanel","type","ActionTypes","showImportSourcePanel","sourceType","payload","hideImportSourcePanel","SearchActionCreators_showSearchResults","deleteSearch","lib","DDItemTypes","drop","monitor","onAddToPlaylist","playlist","getItem","media","connect","connectDropTarget","dropTarget","isOver","itemClasses","selected","jsx_default","CircularProgress","Check","Row_PlaylistRow","icon","activeClass","active","droppableClass","creating","Row_ref2","MenuItem","classnames_default","classes","name","react_default","Row","NewPlaylist_enhance","dist_es","Add","nativeColor","NewPlaylist_NewPlaylist","handleOpen","closeDialog","playlistName","Promise","resolve","onCreatePlaylist","then","bind","assertThisInitialized_default","NewPlaylist_ref","PromptDialog","title","NewPlaylist_ref2","submitLabel","Menu_NewPlaylist","createSvgIcon","Search","Close","SearchResultsRow_SearchResultsRow","query","ListItem","role","SearchResultsRow_ref2","IconButton","SearchResultsRow_ref3","Menu_SearchResultsRow","PlaylistImportRow_enhance","Input","PlaylistImportRow_PlaylistImportRow","importing","PlaylistImportRow_ref2","PlaylistImportRow_ref3","Menu_PlaylistImportRow","Menu_PlaylistMenu","playlists","searchQuery","showSearchResults","searchResults","onSelectPlaylist","onSelectSearchResults","onCloseSearchResults","showImportPanel","onShowImportPanel","searchIsSelected","importIsSelected","isSelectingPlaylist","MenuList","disablePadding","map","pl","_id","Menu","mapStateToProps","reselect_es","playlistSelectors","searchSelectors","importSelectors","PlaylistManagerMenu","es","dispatch","redux","PlaylistActionCreators","RenamePlaylistButton_enhance","Edit","RenamePlaylistButton_RenamePlaylistButton","renaming","onRename","initialName","Tooltip","placement","RenamePlaylistButton_ref","RenamePlaylistButton_ref2","Panel_RenamePlaylistButton","DeletePlaylistButton_enhance","Delete","DeletePlaylistButton_DeletePlaylistButton","deleting","onNotDeletable","onDelete","_this$props2","DeletePlaylistButton_ref","Group","Panel_DeletePlaylistButton","ShufflePlaylistButton_enhance","compose_default","withState_default","withHandlers_default","setLoading","onShuffle","Shuffle","ShufflePlaylistButton_ShuffleButton","isLoading","ShufflePlaylistButton_ref2","ShufflePlaylistButton_ref3","ShufflePlaylistButton","PlaylistFilter_enhance","PlaylistFilter_PlaylistFilter","isOpen","onFilter","debounce_default","handleClick","shouldClose","shouldOpen","clearFilter","input","focus","handleChange","target","refInput","_this$state","ref","onChange","Panel_PlaylistFilter","Meta_enhance","ID","CheckBoxOutlineBlank","CheckBox","Meta_PlaylistMeta","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","htmlFor","Checkbox","id","checked","Meta_ref2","checkedIcon","Meta_ref3","Meta","PlaylistFilterEmpty_enhance","PlaylistFilterEmpty_PlaylistFilterEmpty","PlaylistFilterEmpty_ref2","Typography","Panel_PlaylistFilterEmpty","mediaTarget","component","thisID","some","playlistItem","insertBefore","isDraggingNearTopOfRow","onMoveMedia","before","after","hover","insertingAbove","PlaylistItemRow_PlaylistItemRow","objectWithoutPropertiesLoose_default","dropIndicator","PlaylistItemRow_ref","MediaList_Row","Panel_PlaylistItemRow","RemoveFromPlaylist_RemoveFromPlaylist","onRemove","Action","extends_default","onAction","RemoveFromPlaylist_ref2","Actions_RemoveFromPlaylist","EditMedia_EditMedia","onEdit","EditMedia_ref2","Actions_EditMedia","KeyboardArrowUp","MoveToFirst_MoveToFirst","onFirst","MoveToFirst_ref2","Actions_MoveToFirst","KeyboardArrowDown","MoveToLast_MoveToLast","onLast","MoveToLast_ref2","Actions_MoveToLast","Panel_PlaylistPanel","list","isFiltered","onLoadPlaylistPage","onFilterPlaylistItems","onOpenPreviewMediaDialog","loading","Panel_ref2","length","Panel_ref3","MediaList","rowComponent","rowProps","makeActions","onOpenAddMediaMenu","onMoveToFirst","onMoveToLast","onEditMedia","onRemoveFromPlaylist","selection","index","AddToPlaylist","onAdd","position","Panel_makeActions","onRequestPage","PlaylistManager_Panel","PlaylistManagerPanel_mapStateToProps","selectionOrOne","isSelected","get","PlaylistManagerPanel_onOpenAddMediaMenu","PlaylistManagerPanel","DialogActionCreators","at","PlaylistManagerPanel_onMoveToLast","opts","PlaylistManagerPanel_onMoveMedia","PlaylistManagerPanel_onEditMedia","PlaylistManagerPanel_onRemoveFromPlaylist","page","PlaylistManagerPanel_onLoadPlaylistPage","Import_PlaylistImport","getAllMediaSources","selectedSourceType","sourceStates","onHideImportPanel","Panel","getMediaSource","ImportPanel","onClosePanel","forms","sources","keys","forEach","ImportForm","push","Import","injectMediaSources","PlaylistImportManager_mapStateToProps","PlaylistImportManager","NoSearchResults_enhance","NoSearchResults_NoResults","NoSearchResults_ref2","NoSearchResults","SearchResults_LoadingSearchResults","LoadingSearchResults_ref","SearchResultsList_SearchResultsList","results","SearchResultsList_makeActions","SearchResults_SearchResultsList","SearchResults_enhance","SearchResults_SearchResultsPanel","loadingState","LoadingStates","SearchResults_ref2","SearchResults_ref3","SearchResults","SearchResultsPanel_mapStateToProps","SearchResultsPanel_onOpenAddMediaMenu","SearchResultsPanel_selectionOrOne","containers_SearchResultsPanel","SearchBar_enhance","SearchBar_SearchBar","focused","handleFocus","handleBlur","handleKeyDown","e","key","SearchBar_ref","placeholder","onFocus","onBlur","onKeyDown","components_SearchBar","SourcePickerElement_SourcePickerElement","source","style","backgroundImage","logo","Header_SourcePickerElement","SourcePicker_enhance","popoverPosition","anchorOrigin","vertical","horizontal","transformOrigin","ArrowDropDown","SourcePicker_SourcePicker","anchor","container","sourceName","refContainer","_this2","_this3","filter","SourcePicker_ref","Popover","paper","anchorEl","Header_SourcePicker","Header_SearchBar_SearchBar","onSourceChange","Header_SearchBar","MediaSearchBar_mapStateToProps","MediaSearchBar_mapDispatchToProps","RequestActionCreators","qs","onStart","searchStart","onComplete","onError","error","MediaSearchBar","Header_enhance","Header_PlaylistManagerHeader","onCloseOverlay","Header","Header_ref2","PlaylistManager_Header","NoPlaylists_enhance","NoPlaylists_NoPlaylists","PlaylistManager_NoPlaylists","PlaylistManager_PlaylistManager","panel","selectedPlaylist","PlaylistManager_ref2","PlaylistManager_ref3","PlaylistManager_ref4","Content","_ref5"],"mappings":"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","file":"playlists_28fe6eb.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Edit');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\n\nexport default class ConfirmDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    confirmLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cancelLabel: 'Cancel',\n    confirmLabel: 'OK',\n  };\n\n  state = {\n    busy: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleConfirm = (event) => {\n    const { onConfirm } = this.props;\n\n    event.preventDefault();\n    const promise = onConfirm();\n    if (promise && promise.finally) {\n      this.setState({ busy: true });\n      promise.finally(() => {\n        this.setState({ busy: false });\n      });\n    }\n  };\n\n  handleClose = (event) => {\n    const { onCancel } = this.props;\n\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    onCancel();\n  };\n\n  render() {\n    const {\n      children,\n      cancelLabel,\n      confirmLabel,\n      className,\n    } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Dialog\n        className={cx('Dialog', className)}\n        onClose={this.handleClose}\n        open\n      >\n        <DialogContent className=\"Dialog-body\">\n          <Form onSubmit={this.handleSubmit}>\n            {children}\n            <FormGroup className=\"ConfirmDialog-buttons FormGroup--noSpacing\">\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleClose}>\n                  {cancelLabel}\n                </Button>\n              </div>\n              <div className=\"ConfirmDialog-spacer\" />\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleConfirm}>\n                  {busy ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div> : confirmLabel}\n                </Button>\n              </div>\n            </FormGroup>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/PlaylistAdd';\n\nconst enhance = translate();\n\nconst PlaylistEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.empty')}</Typography>\n    <Typography>{t('playlists.playlist.emptySub')}</Typography>\n  </div>\n);\n\nPlaylistEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistEmpty);\n","import {\n  SHOW_IMPORT_PANEL,\n  HIDE_IMPORT_PANEL,\n  SHOW_IMPORT_SOURCE_PANEL,\n  HIDE_IMPORT_SOURCE_PANEL,\n} from '../constants/ActionTypes';\n\nexport function showImportPanel() {\n  return {\n    type: SHOW_IMPORT_PANEL,\n  };\n}\n\nexport function hideImportPanel() {\n  return {\n    type: HIDE_IMPORT_PANEL,\n  };\n}\n\nexport function showImportSourcePanel(sourceType) {\n  return {\n    type: SHOW_IMPORT_SOURCE_PANEL,\n    payload: { sourceType },\n  };\n}\n\nexport function hideImportSourcePanel() {\n  return { type: HIDE_IMPORT_SOURCE_PANEL };\n}\n","import { get } from './RequestActionCreators';\nimport {\n  SET_SEARCH_SOURCE,\n  SHOW_SEARCH_RESULTS,\n  SEARCH_START,\n  SEARCH_COMPLETE,\n  SEARCH_DELETE,\n} from '../constants/ActionTypes';\n\nexport function setSource(source) {\n  return {\n    type: SET_SEARCH_SOURCE,\n    payload: { source },\n  };\n}\n\nexport function showSearchResults() {\n  return { type: SHOW_SEARCH_RESULTS };\n}\n\nfunction searchStart(query) {\n  return {\n    type: SEARCH_START,\n    payload: { query },\n  };\n}\n\nexport function search(query) {\n  return get('/search', {\n    qs: { query },\n    onStart: () => (dispatch) => {\n      dispatch(searchStart(query));\n      dispatch(showSearchResults());\n    },\n    onComplete: results => ({\n      type: SEARCH_COMPLETE,\n      payload: { results },\n    }),\n    onError: error => ({\n      type: SEARCH_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function deleteSearch() {\n  return {\n    type: SEARCH_DELETE,\n  };\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nconst itemClasses = {\n  root: 'PlaylistMenuRow',\n  selected: 'is-selected',\n};\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <div>\n        <MenuItem\n          selected={selected}\n          className={cx(activeClass, droppableClass)}\n          classes={itemClasses}\n          onClick={onClick}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </MenuItem>\n      </div>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CreatePlaylistIcon from '@material-ui/icons/Add';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass NewPlaylist extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    t: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    creating: false,\n  };\n\n  handleOpen = () => {\n    this.setState({ creating: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = (playlistName) => {\n    const { onCreatePlaylist } = this.props;\n\n    return Promise.resolve(onCreatePlaylist(playlistName))\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ creating: false });\n  }\n\n  render() {\n    const { t, className } = this.props;\n    const { creating } = this.state;\n\n    return (\n      <React.Fragment>\n        <MenuItem\n          className={cx('PlaylistMenuRow', 'PlaylistMenuRow--create', className)}\n          onClick={this.handleOpen}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            <div className=\"PlaylistMenuRow-active-icon\">\n              <CreatePlaylistIcon />\n            </div>\n            {t('playlists.new')}\n          </div>\n        </MenuItem>\n        {creating && (\n          <PromptDialog\n            title={t('dialogs.createPlaylist.nameInputTitle')}\n            icon={<CreatePlaylistIcon nativeColor=\"#777\" />}\n            submitLabel={t('dialogs.createPlaylist.action')}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(NewPlaylist);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Search');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst SearchResultsRow = ({\n  className,\n  query,\n  onClick,\n  onClose,\n}) => (\n  <ListItem role=\"menuitem\" className={cx('PlaylistMenuRow', 'PlaylistMenuRow--search', className)}>\n    <button\n      type=\"button\"\n      className=\"PlaylistMenuRow-title\"\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <SearchIcon />\n      </div>\n      &quot;{query}&quot;\n    </button>\n    <div className=\"PlaylistMenuRow-count\">\n      <IconButton className=\"PlaylistMenuRow-closeButton\" onClick={onClose}>\n        <CloseIcon nativeColor=\"#777\" />\n      </IconButton>\n    </div>\n  </ListItem>\n);\n\nSearchResultsRow.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsRow;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n})), 'Input');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ImportIcon from '@material-ui/icons/Input';\n\nconst enhance = translate();\n\nconst PlaylistImportRow = ({\n  t,\n  className,\n  importing,\n  onClick,\n}) => {\n  let icon;\n  if (importing) {\n    icon = (\n      <div className=\"PlaylistMenuRow-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    icon = (\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <ImportIcon />\n      </div>\n    );\n  }\n  return (\n    <MenuItem\n      className={cx('PlaylistMenuRow', 'PlaylistMenuRow--import', className)}\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-title\">\n        {icon}\n        {t('playlists.import.title')}\n      </div>\n    </MenuItem>\n  );\n};\n\nPlaylistImportRow.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  importing: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistImportRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport PlaylistRow from './Row';\nimport PlaylistCreateRow from './NewPlaylist';\nimport SearchResultsRow from './SearchResultsRow';\nimport PlaylistImportRow from './PlaylistImportRow';\n\nconst PlaylistMenu = ({\n  className,\n  playlists,\n  selected,\n  searchQuery,\n  showSearchResults,\n  searchResults,\n  onCreatePlaylist,\n  onSelectPlaylist,\n  onSelectSearchResults,\n  onCloseSearchResults,\n  onAddToPlaylist,\n  showImportPanel,\n  onShowImportPanel,\n}) => {\n  const searchIsSelected = showSearchResults ? 'is-selected' : '';\n  const importIsSelected = showImportPanel ? 'is-selected' : '';\n  const isSelectingPlaylist = selected && !showSearchResults && !showImportPanel;\n  return (\n    <MenuList className={cx('PlaylistMenu', className)} disablePadding>\n      <PlaylistCreateRow\n        className=\"PlaylistMenu-row\"\n        onCreatePlaylist={onCreatePlaylist}\n      />\n      {searchQuery && (\n        <SearchResultsRow\n          className={cx('PlaylistMenu-row', searchIsSelected)}\n          query={searchQuery}\n          size={searchResults}\n          onClick={onSelectSearchResults}\n          onClose={onCloseSearchResults}\n        />\n      )}\n      {playlists.map(pl => (\n        <PlaylistRow\n          key={pl._id}\n          className=\"PlaylistMenu-row\"\n          playlist={pl}\n          selected={isSelectingPlaylist && selected._id === pl._id}\n          onClick={() => onSelectPlaylist(pl._id)}\n          onAddToPlaylist={onAddToPlaylist}\n        />\n      ))}\n      <PlaylistImportRow\n        className={cx('PlaylistMenu-row', importIsSelected)}\n        onClick={onShowImportPanel}\n      />\n    </MenuList>\n  );\n};\n\nPlaylistMenu.propTypes = {\n  className: PropTypes.string,\n  playlists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selected: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.string,\n  searchResults: PropTypes.number,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onSelectPlaylist: PropTypes.func.isRequired,\n  onSelectSearchResults: PropTypes.func.isRequired,\n  onCloseSearchResults: PropTypes.func.isRequired,\n  onAddToPlaylist: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n};\n\nexport default PlaylistMenu;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  addMedia as addToPlaylist,\n  createPlaylist,\n  selectPlaylist,\n} from '../actions/PlaylistActionCreators';\nimport { showImportPanel } from '../actions/ImportActionCreators';\nimport {\n  showSearchResults,\n  deleteSearch,\n} from '../actions/SearchActionCreators';\n\nimport {\n  playlistsSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport {\n  searchQuerySelector,\n  showSearchResultsSelector,\n  searchResultsCountSelector,\n} from '../selectors/searchSelectors';\nimport { showImportPanelSelector } from '../selectors/importSelectors';\nimport PlaylistsMenu from '../components/PlaylistManager/Menu';\n\nconst mapStateToProps = createStructuredSelector({\n  playlists: playlistsSelector,\n  selected: selectedPlaylistSelector,\n  searchQuery: searchQuerySelector,\n  showSearchResults: showSearchResultsSelector,\n  searchResults: searchResultsCountSelector,\n  showImportPanel: showImportPanelSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onAddToPlaylist: addToPlaylist,\n  onCreatePlaylist: createPlaylist,\n  onSelectPlaylist: selectPlaylist,\n  onSelectSearchResults: showSearchResults,\n  onCloseSearchResults: deleteSearch,\n  onShowImportPanel: showImportPanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistsMenu);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n})), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'CheckBoxOutlineBlank');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string,\n  };\n\n  state = {\n    renaming: false,\n  };\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = (name) => {\n    const { onRename } = this.props;\n\n    return onRename(name)\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  render() {\n    const { t, initialName } = this.props;\n    const { renaming } = this.state;\n\n    return (\n      <React.Fragment>\n        <Tooltip title={t('playlists.rename')} placement=\"top\">\n          <IconButton className=\"PlaylistMeta-iconButton\" onClick={this.handleOpen}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        {renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon nativeColor=\"#777\" />}\n            value={initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(RenamePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ConfirmDialog from '../../Dialogs/ConfirmDialog';\nimport FormGroup from '../../Form/Group';\n\nconst enhance = translate();\n\nclass DeletePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onNotDeletable: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n  };\n\n  state = {\n    deleting: false,\n  };\n\n  handleOpen = () => {\n    const { active, onNotDeletable } = this.props;\n\n    if (active) {\n      onNotDeletable();\n    } else {\n      this.setState({ deleting: true });\n    }\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleConfirm = (name) => {\n    const { onDelete } = this.props;\n\n    return onDelete(name)\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ deleting: false });\n  }\n\n  render() {\n    const { t, active } = this.props;\n    const { deleting } = this.state;\n\n    return (\n      <React.Fragment>\n        <Tooltip title={active ? t('playlists.deleteActive') : t('playlists.delete')} placement=\"top\">\n          <IconButton\n            disabled={active}\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleOpen}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        {deleting && (\n          <ConfirmDialog\n            title={t('dialogs.deletePlaylist.title')}\n            confirmLabel={t('dialogs.deletePlaylist.action')}\n            onConfirm={this.handleConfirm}\n            onCancel={this.handleClose}\n          >\n            <FormGroup>{t('dialogs.deletePlaylist.confirm')}</FormGroup>\n          </ConfirmDialog>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(DeletePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), React.createElement(\"path\", {\n  d: \"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"\n})), 'Shuffle');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      const { setLoading, onShuffle } = props;\n\n      setLoading(true);\n      onShuffle().finally(() => {\n        setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isOpen: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    const { onFilter } = this.props;\n\n    onFilter(value);\n  }, 200);\n\n  handleClick = () => {\n    const { isOpen: shouldClose } = this.state;\n    const shouldOpen = !shouldClose;\n\n    if (shouldClose) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      isOpen: shouldOpen,\n      value: '',\n    }, () => {\n      if (shouldOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ value });\n    this.onFilter(value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  clearFilter() {\n    const { onFilter } = this.props;\n    const { value } = this.state;\n\n    if (value !== '') {\n      onFilter('');\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { isOpen, value } = this.state;\n\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ActiveIcon from '@material-ui/icons/CheckBox';\nimport ActivateIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst enhance = translate();\n\nconst ID = 'playlist-meta-active';\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active && 'PlaylistMeta--active')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <label htmlFor={ID} className={cx('PlaylistMeta-active', active && 'is-active')}>\n      <Checkbox\n        id={ID}\n        checked={active}\n        disabled={active}\n        onChange={active ? null : onActivatePlaylist}\n        icon={<ActivateIcon />}\n        checkedIcon={<ActiveIcon nativeColor=\"#fff\" />}\n      />\n      <span>\n        {active ? t('playlists.active') : t('playlists.activate')}\n      </span>\n    </label>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistMeta);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nconst PlaylistFilterEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.filterEmpty')}</Typography>\n    <Typography>{t('playlists.playlist.filterEmptySub')}</Typography>\n  </div>\n);\n\nPlaylistFilterEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistFilterEmpty);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Action from './Action';\n\nconst RemoveFromPlaylist = ({ onRemove, ...props }) => (\n  <Action {...props} onAction={onRemove}>\n    <DeleteIcon />\n  </Action>\n);\n\nRemoveFromPlaylist.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default RemoveFromPlaylist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Action from './Action';\n\nconst EditMedia = ({ onEdit, ...props }) => (\n  <Action {...props} onAction={onEdit}>\n    <EditIcon />\n  </Action>\n);\n\nEditMedia.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default EditMedia;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToFirstIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Action from './Action';\n\nconst MoveToFirst = ({ onFirst, ...props }) => (\n  <Action {...props} onAction={onFirst}>\n    <MoveToFirstIcon />\n  </Action>\n);\n\nMoveToFirst.propTypes = {\n  onFirst: PropTypes.func.isRequired,\n};\n\nexport default MoveToFirst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToLastIcon from '@material-ui/icons/KeyboardArrowDown';\nimport Action from './Action';\n\nconst MoveToLast = ({ onLast, ...props }) => (\n  <Action {...props} onAction={onLast}>\n    <MoveToLastIcon />\n  </Action>\n);\n\nMoveToLast.propTypes = {\n  onLast: PropTypes.func.isRequired,\n};\n\nexport default MoveToLast;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MediaList from '../../MediaList';\nimport PlaylistMeta from './Meta';\nimport PlaylistEmpty from './PlaylistEmpty';\nimport PlaylistFilterEmpty from './PlaylistFilterEmpty';\nimport PlainItemRow from '../../MediaList/Row';\nimport PlaylistItemRow from './PlaylistItemRow';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\nimport RemoveFromPlaylistAction from '../../MediaList/Actions/RemoveFromPlaylist';\nimport EditMediaAction from '../../MediaList/Actions/EditMedia';\nimport MoveToFirstAction from '../../MediaList/Actions/MoveToFirst';\nimport MoveToLastAction from '../../MediaList/Actions/MoveToLast';\n\nconst makeActions = ({\n  onOpenAddMediaMenu,\n  onMoveToFirst,\n  onMoveToLast,\n  onEditMedia,\n  onRemoveFromPlaylist,\n  isFiltered,\n}) => (media, selection, index) => (\n  <React.Fragment>\n    <AddToPlaylistAction onAdd={position => onOpenAddMediaMenu(position, media, selection)} />\n    {/* Don't show the \"move to first\" action on the first item in the playlist.\n      * If the playlist is filtered we don't know if the first item to show is\n      * also the first in the playlist, so just show it always in that case. */}\n    {(index > 0 || isFiltered) && (\n      <MoveToFirstAction onFirst={() => onMoveToFirst(media, selection)} />\n    )}\n    {(index === 0 && !isFiltered) && (\n    <MoveToLastAction onLast={() => onMoveToLast(media, selection)} />\n    )}\n    <EditMediaAction onEdit={() => onEditMedia(media)} />\n    <RemoveFromPlaylistAction onRemove={() => onRemoveFromPlaylist(media, selection)} />\n  </React.Fragment>\n);\n\nconst PlaylistPanel = (props) => {\n  const {\n    className,\n    playlist,\n    media,\n    loading,\n    isFiltered,\n    onShufflePlaylist,\n    onActivatePlaylist,\n    onRenamePlaylist,\n    onDeletePlaylist,\n    onNotDeletable,\n    onLoadPlaylistPage,\n    onFilterPlaylistItems,\n    onMoveMedia,\n    onOpenPreviewMediaDialog,\n  } = props;\n\n  let list;\n  if (loading) {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else if (media.length === 0) {\n    list = isFiltered\n      ? <PlaylistFilterEmpty />\n      : <PlaylistEmpty />;\n  } else {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        size={media.length}\n        media={media}\n        rowComponent={isFiltered ? PlainItemRow : PlaylistItemRow}\n        rowProps={{ onMoveMedia }}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={makeActions(props)}\n        onRequestPage={onLoadPlaylistPage}\n      />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', className)}>\n      <PlaylistMeta\n        className=\"PlaylistPanel-meta\"\n        id={playlist._id}\n        name={playlist.name}\n        active={playlist.active}\n        onShufflePlaylist={onShufflePlaylist}\n        onActivatePlaylist={onActivatePlaylist}\n        onRenamePlaylist={onRenamePlaylist}\n        onDeletePlaylist={onDeletePlaylist}\n        onNotDeletable={onNotDeletable}\n        onFilter={onFilterPlaylistItems}\n      />\n      {list}\n    </div>\n  );\n};\n\nPlaylistPanel.propTypes = {\n  className: PropTypes.string,\n  playlist: PropTypes.object.isRequired,\n  media: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onLoadPlaylistPage: PropTypes.func.isRequired,\n  onFilterPlaylistItems: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onMoveMedia: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default PlaylistPanel;\n","import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport {\n  selectedPlaylistSelector,\n  filteredSelectedPlaylistItemsSelector,\n  isSelectedPlaylistLoadingSelector,\n  isFilteredSelector,\n} from '../selectors/playlistSelectors';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport {\n  addMediaMenu,\n  editMedia,\n  moveMedia,\n  removeMedia,\n  filterPlaylistItems,\n  renamePlaylist,\n  deletePlaylist,\n  cannotDeleteActivePlaylist,\n  shufflePlaylist,\n  activatePlaylist,\n  loadPlaylist,\n  loadFilteredPlaylistItems,\n} from '../actions/PlaylistActionCreators';\n\nimport PlaylistPanel from '../components/PlaylistManager/Panel';\n\nconst mapStateToProps = createStructuredSelector({\n  playlist: selectedPlaylistSelector,\n  media: filteredSelectedPlaylistItemsSelector,\n  loading: isSelectedPlaylistLoadingSelector,\n  isFiltered: isFilteredSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) => (\n  addMediaMenu(selectionOrOne(media, selection), position)\n);\nconst onRemoveFromPlaylist = playlist => (media, selection) => (\n  removeMedia(playlist, selectionOrOne(media, selection))\n);\nconst onMoveMedia = playlist => (media, opts) => (\n  moveMedia(playlist, media, opts)\n);\nconst onMoveToFirst = playlist => (media, selection) => (\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'start' })\n);\nconst onMoveToLast = playlist => (media, selection) => (\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'end' })\n);\nconst onEditMedia = playlist => media => (\n  editMedia(playlist, media)\n);\nconst onLoadPlaylistPage = ({ isFiltered, playlist }) => page => (\n  isFiltered\n    ? loadFilteredPlaylistItems(playlist._id, page)\n    : loadPlaylist(playlist._id, page)\n);\n\n// Most of the playlist-related action creators need to know which playlist to\n// use, i.e. need to have a reference to the selected playlist. The selected\n// playlist is picked out in `mapStateToProps`, but we can't access its result\n// in `mapDispatchToProps` yet. Instead, `mapDispatchToProps` passes the\n// `dispatch` function to the `mergeProps` function below, and then that\n// configures the action creators.\n// TODO Maybe it's better to have versions of these action creators that work on\n// the selected playlist by default? using redux-thunk.\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mergeProps = (state, { dispatch }, props) => ({\n  ...props,\n  ...state,\n  ...bindActionCreators({\n    onShufflePlaylist: shufflePlaylist.bind(null, state.playlist._id),\n    onActivatePlaylist: activatePlaylist.bind(null, state.playlist._id),\n    onRenamePlaylist: renamePlaylist.bind(null, state.playlist._id),\n    onDeletePlaylist: deletePlaylist.bind(null, state.playlist._id),\n    onNotDeletable: cannotDeleteActivePlaylist,\n\n    onOpenAddMediaMenu,\n    onOpenPreviewMediaDialog: openPreviewMediaDialog,\n    onMoveToFirst: onMoveToFirst(state.playlist._id),\n    onMoveToLast: onMoveToLast(state.playlist._id),\n    onMoveMedia: onMoveMedia(state.playlist._id),\n    onEditMedia: onEditMedia(state.playlist._id),\n    onRemoveFromPlaylist: onRemoveFromPlaylist(state.playlist._id),\n    onLoadPlaylistPage: onLoadPlaylistPage(state),\n    onFilterPlaylistItems: filterPlaylistItems.bind(null, state.playlist._id),\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(PlaylistPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectMediaSources from '../../../utils/injectMediaSources';\n\nconst PlaylistImport = ({\n  getMediaSource,\n  getAllMediaSources,\n  selectedSourceType,\n  sourceStates,\n  onShowImportPanel,\n  onHideImportPanel,\n}) => {\n  if (selectedSourceType) {\n    const Panel = getMediaSource(selectedSourceType).ImportPanel;\n    const state = sourceStates[selectedSourceType];\n    return (\n      <Panel\n        onClosePanel={onHideImportPanel}\n        {...state}\n      />\n    );\n  }\n\n  const forms = [];\n  const sources = getAllMediaSources();\n  Object.keys(sources).forEach((sourceType) => {\n    const { ImportForm } = sources[sourceType];\n    if (ImportForm) {\n      forms.push((\n        <ImportForm\n          key={sourceType}\n          onShowImportPanel={() => onShowImportPanel(sourceType)}\n          onHideImportPanel={onHideImportPanel}\n        />\n      ));\n    }\n  });\n\n  return (\n    <div className=\"PlaylistImport\">\n      {forms}\n    </div>\n  );\n};\n\nPlaylistImport.propTypes = {\n  selectedSourceType: PropTypes.string,\n  sourceStates: PropTypes.object,\n\n  getMediaSource: PropTypes.func.isRequired,\n  getAllMediaSources: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n  onHideImportPanel: PropTypes.func.isRequired,\n};\n\nexport default injectMediaSources()(PlaylistImport);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  showImportSourcePanel,\n  hideImportSourcePanel,\n} from '../actions/ImportActionCreators';\nimport { selectedSourceTypeSelector } from '../selectors/importSelectors';\nimport PlaylistImport from '../components/PlaylistManager/Import';\n\nconst mapStateToProps = createStructuredSelector({\n  selectedSourceType: selectedSourceTypeSelector,\n  sourceStates: state => state.sources,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowImportPanel: showImportSourcePanel,\n  onHideImportPanel: hideImportSourcePanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistImport);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport NoResultsIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nconst NoResults = ({ t }) => (\n  <div className=\"SearchResults-none\">\n    <NoResultsIcon className=\"SearchResults-noneIcon\" />\n    <Typography className=\"SearchResults-noneHeader\">{t('playlists.search.noResults')}</Typography>\n    <Typography>{t('playlists.search.noResultsSub')}</Typography>\n  </div>\n);\n\nNoResults.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(NoResults);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingSearchResults = () => (\n  <div className=\"PlaylistPanel-loading\">\n    <CircularProgress size=\"100%\" />\n  </div>\n);\n\nexport default LoadingSearchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst makeActions = onOpenAddMediaMenu => (media, selection) => (\n  <React.Fragment>\n    <AddToPlaylistAction\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />\n  </React.Fragment>\n);\n\nconst SearchResultsList = ({\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => (\n  <MediaList\n    className=\"PlaylistPanel-media\"\n    media={results}\n    onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n    makeActions={makeActions(onOpenAddMediaMenu)}\n  />\n);\n\nSearchResultsList.propTypes = {\n  results: PropTypes.array.isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsList;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport NoSearchResults from './NoSearchResults';\nimport LoadingSearchResults from './LoadingSearchResults';\nimport SearchResultsList from './SearchResultsList';\n\nconst enhance = translate();\n\nconst SearchResultsPanel = ({\n  t,\n  className,\n  query,\n  loadingState,\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = results.length > 0 ? (\n      <SearchResultsList\n        results={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        onOpenAddMediaMenu={onOpenAddMediaMenu}\n      />\n    ) : (\n      <NoSearchResults />\n    );\n  } else {\n    list = (\n      <LoadingSearchResults />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResultsPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default enhance(SearchResultsPanel);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\n\nimport {\n  searchQuerySelector,\n  searchResultsSelector,\n  searchLoadingStateSelector,\n} from '../selectors/searchSelectors';\nimport SearchResults from '../components/PlaylistManager/SearchResults';\n\nconst mapStateToProps = createStructuredSelector({\n  query: searchQuerySelector,\n  results: searchResultsSelector,\n  loadingState: searchLoadingStateSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) => (\n  addMediaMenu(selectionOrOne(media, selection), position)\n);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass SearchBar extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { focused: false };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { onSubmit } = this.props;\n    if (e.key === 'Enter') {\n      onSubmit(this.input.value);\n    }\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t, children, className } = this.props;\n    const { focused } = this.state;\n\n    return (\n      <div className={cx('SearchBar', focused ? 'is-focused' : '', className)}>\n        <div className=\"SearchBar-icon\">\n          <SearchIcon />\n        </div>\n        {children}\n        <div className=\"SearchBar-query\">\n          <input\n            ref={this.refInput}\n            className=\"SearchBar-input\"\n            type=\"text\"\n            placeholder={focused ? '' : t('playlists.search.action')}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SourcePickerElement = ({\n  className,\n  name,\n  source,\n  active,\n}) => (\n  <div\n    className={cx(\n      'SourcePickerElement',\n      `SourcePickerElement--${name}`,\n      active && 'SourcePickerElement--active',\n      className,\n    )}\n    style={{ backgroundImage: `url(${source.logo})` }}\n  />\n);\n\nSourcePickerElement.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  source: PropTypes.shape({\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n  active: PropTypes.bool,\n};\n\nexport default SourcePickerElement;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowIcon from '@material-ui/icons/ArrowDropDown';\nimport injectMediaSources from '../../../utils/injectMediaSources';\nimport SourcePickerElement from './SourcePickerElement';\n\nconst enhance = injectMediaSources();\n\nconst popoverPosition = {\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n  transformOrigin: { vertical: 'top', horizontal: 'left' },\n};\n\nclass SourcePicker extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    selected: PropTypes.string,\n    onChange: PropTypes.func,\n\n    getMediaSource: PropTypes.func.isRequired,\n    getAllMediaSources: PropTypes.func.isRequired,\n  };\n\n  state = { open: false };\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      anchor: this.container,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = (sourceName) => {\n    const { onChange } = this.props;\n\n    this.handleClose();\n    onChange(sourceName);\n  }\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  createElement(sourceName) {\n    const { selected, getMediaSource } = this.props;\n\n    return (\n      <button\n        type=\"button\"\n        className=\"SourcePicker-item\"\n        key={sourceName}\n        onClick={() => this.handleChange(sourceName)}\n      >\n        <SourcePickerElement\n          name={sourceName}\n          source={getMediaSource(sourceName)}\n          active={selected === sourceName}\n        />\n      </button>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      selected,\n      getMediaSource,\n      getAllMediaSources,\n    } = this.props;\n    const { open, anchor } = this.state;\n\n    const sourceNames = Object.keys(getAllMediaSources());\n    const sources = sourceNames\n      .filter(name => name !== selected)\n      .map(name => this.createElement(name));\n\n    return (\n      <div\n        className={cx('SourcePicker', className)}\n        ref={this.refContainer}\n      >\n        <button\n          type=\"button\"\n          className=\"SourcePicker-active\"\n          onClick={this.handleOpen}\n        >\n          <SourcePickerElement\n            name={selected}\n            source={getMediaSource(selected)}\n            active\n          />\n          <ArrowIcon className=\"SourcePicker-arrow\" />\n        </button>\n        <Popover\n          classes={{ paper: 'SourcePicker-list' }}\n          open={open}\n          anchorEl={anchor}\n          onClose={this.handleClose}\n          {...popoverPosition}\n        >\n          {sources}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SourcePicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseSearchBar from '../../SearchBar';\nimport SourcePicker from './SourcePicker';\n\nconst SearchBar = ({\n  className,\n  source,\n  onSubmit,\n  onSourceChange,\n}) => (\n  <BaseSearchBar className={className} onSubmit={onSubmit}>\n    <SourcePicker\n      className=\"SearchBar-source\"\n      selected={source}\n      onChange={onSourceChange}\n    />\n  </BaseSearchBar>\n);\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onSourceChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport SearchBar from '../components/PlaylistManager/Header/SearchBar';\nimport {\n  search,\n  setSource,\n} from '../actions/SearchActionCreators';\nimport { searchSourceTypeSelector } from '../selectors/searchSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  source: searchSourceTypeSelector,\n});\n\nconst mapDispatchToProps = {\n  onSubmit: search,\n  onSourceChange: setSource,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport OverlayHeader from '../../Overlay/Header';\nimport SearchBar from '../../../containers/MediaSearchBar';\n\nconst enhance = translate();\n\nconst PlaylistManagerHeader = ({\n  t,\n  className,\n  onCloseOverlay,\n}) => (\n  <OverlayHeader\n    className={cx('PlaylistHeader', className)}\n    title={t('playlists.title')}\n    onCloseOverlay={onCloseOverlay}\n  >\n    <SearchBar className=\"PlaylistHeader-search\" />\n  </OverlayHeader>\n);\n\nPlaylistManagerHeader.propTypes = {\n  className: PropTypes.string,\n  t: PropTypes.func.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistManagerHeader);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nconst enhance = translate();\n\nconst NoPlaylists = ({ t, className }) => (\n  <div className={cx('PlaylistPanel', 'PlaylistPanel--empty', className)}>\n    {t('playlists.noPlaylists')}\n  </div>\n);\n\nNoPlaylists.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default enhance(NoPlaylists);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayContent from '../Overlay/Content';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport NoPlaylists from './NoPlaylists';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <NoPlaylists />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <OverlayContent>\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </OverlayContent>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}