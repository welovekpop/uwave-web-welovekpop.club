{"version":3,"sources":["webpack:///../node_modules/@material-ui/icons/es/ModeEdit.js","webpack:///./components/Dialogs/ConfirmDialog/index.js","webpack:///../node_modules/lodash/debounce.js","webpack:///../node_modules/lodash/now.js","webpack:///../node_modules/lodash/toNumber.js","webpack:///./components/PlaylistManager/Panel/PlaylistEmpty.js","webpack:///./actions/ImportActionCreators.js","webpack:///./actions/SearchActionCreators.js","webpack:///./components/PlaylistManager/Menu/Row.js","webpack:///./components/PlaylistManager/Menu/NewPlaylist.js","webpack:///../node_modules/@material-ui/icons/es/Search.js","webpack:///./components/PlaylistManager/Menu/SearchResultsRow.js","webpack:///../node_modules/@material-ui/icons/es/Input.js","webpack:///./components/PlaylistManager/Menu/PlaylistImportRow.js","webpack:///./components/PlaylistManager/Menu/index.js","webpack:///./containers/PlaylistManagerMenu.js","webpack:///../node_modules/@material-ui/icons/es/CheckBox.js","webpack:///../node_modules/@material-ui/icons/es/CheckBoxOutlineBlank.js","webpack:///./components/PlaylistManager/Panel/RenamePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Delete.js","webpack:///./components/PlaylistManager/Panel/DeletePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Shuffle.js","webpack:///./components/PlaylistManager/Panel/ShufflePlaylistButton.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilter.js","webpack:///./components/PlaylistManager/Panel/Meta.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilterEmpty.js","webpack:///./components/PlaylistManager/Panel/PlaylistItemRow.js","webpack:///./components/MediaList/Actions/RemoveFromPlaylist.js","webpack:///./components/MediaList/Actions/EditMedia.js","webpack:///./components/MediaList/Actions/MoveToFirst.js","webpack:///./components/MediaList/Actions/MoveToLast.js","webpack:///./components/PlaylistManager/Panel/index.js","webpack:///./containers/PlaylistManagerPanel.js","webpack:///./components/PlaylistManager/Import/index.js","webpack:///./containers/PlaylistImportManager.js","webpack:///./components/PlaylistManager/SearchResults/NoSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/LoadingSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/SearchResultsList.js","webpack:///./components/PlaylistManager/SearchResults/index.js","webpack:///./containers/SearchResultsPanel.js","webpack:///./components/SearchBar/index.js","webpack:///./components/PlaylistManager/Header/SourcePickerElement.js","webpack:///./components/PlaylistManager/Header/SourcePicker.js","webpack:///./components/PlaylistManager/Header/SearchBar.js","webpack:///./containers/MediaSearchBar.js","webpack:///./components/PlaylistManager/Header/index.js","webpack:///./components/PlaylistManager/NoPlaylists.js","webpack:///./components/PlaylistManager/index.js"],"names":["__webpack_exports__","Object","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","d","_babel_runtime_helpers_builtin_jsx__WEBPACK_IMPORTED_MODULE_0___default","className","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7__","size","ConfirmDialog","state","busy","handleSubmit","event","preventDefault","handleConfirm","onConfirm","_this","props","promise","finally","setState","handleClose","onCancel","render","_this$props","this","children","cancelLabel","confirmLabel","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_2___default","onClose","open","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_6__","_Form__WEBPACK_IMPORTED_MODULE_8__","onSubmit","_Form_Group__WEBPACK_IMPORTED_MODULE_9__","_Form_Button__WEBPACK_IMPORTED_MODULE_10__","disabled","onClick","_ref","react__WEBPACK_IMPORTED_MODULE_3___default","Component","defaultProps","propTypes","isObject","__webpack_require__","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","cancel","clearTimeout","flush","root","Date","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","value","other","valueOf","replace","isBinary","test","slice","enhance","react_i18next__WEBPACK_IMPORTED_MODULE_3__","_material_ui_icons_PlaylistAdd__WEBPACK_IMPORTED_MODULE_5__","PlaylistEmpty","t","_ref2","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","ImportActionCreators_showImportPanel","type","ActionTypes","showImportSourcePanel","sourceType","payload","hideImportSourcePanel","SearchActionCreators_showSearchResults","deleteSearch","lib","DDItemTypes","drop","monitor","onAddToPlaylist","playlist","getItem","media","connect","connectDropTarget","dropTarget","isOver","itemClasses","selected","jsx_default","CircularProgress","Check","Row_PlaylistRow","icon","activeClass","active","droppableClass","creating","Row_ref2","MenuItem","classnames_default","classes","name","react_default","Row","NewPlaylist_enhance","dist_es","Add","nativeColor","NewPlaylist_NewPlaylist","handleOpen","closeDialog","playlistName","Promise","resolve","onCreatePlaylist","then","bind","assertThisInitialized_default","Fragment","NewPlaylist_ref","PromptDialog","title","NewPlaylist_ref2","submitLabel","Menu_NewPlaylist","Search","createSvgIcon","Close","SearchResultsRow_SearchResultsRow","query","ListItem","role","SearchResultsRow_ref2","IconButton","SearchResultsRow_ref3","Menu_SearchResultsRow","Input","PlaylistImportRow_enhance","PlaylistImportRow_PlaylistImportRow","importing","PlaylistImportRow_ref2","PlaylistImportRow_ref3","Menu_PlaylistImportRow","Menu_PlaylistMenu","playlists","searchQuery","showSearchResults","searchResults","onSelectPlaylist","onSelectSearchResults","onCloseSearchResults","showImportPanel","onShowImportPanel","searchIsSelected","importIsSelected","isSelectingPlaylist","MenuList","disablePadding","map","pl","_id","Menu","mapStateToProps","reselect_es","playlistSelectors","searchSelectors","importSelectors","PlaylistManagerMenu","es","dispatch","redux","PlaylistActionCreators","CheckBox","CheckBoxOutlineBlank","RenamePlaylistButton_enhance","ModeEdit","RenamePlaylistButton_RenamePlaylistButton","renaming","onRename","initialName","Tooltip","placement","RenamePlaylistButton_ref","RenamePlaylistButton_ref2","Panel_RenamePlaylistButton","Delete","DeletePlaylistButton_enhance","DeletePlaylistButton_DeletePlaylistButton","deleting","onNotDeletable","onDelete","_this$props2","DeletePlaylistButton_ref","Group","Panel_DeletePlaylistButton","Shuffle","ShufflePlaylistButton_enhance","compose_default","withState_default","withHandlers_default","setLoading","onShuffle","ShufflePlaylistButton_ShuffleButton","isLoading","ShufflePlaylistButton_ref2","ShufflePlaylistButton_ref3","ShufflePlaylistButton","PlaylistFilter_enhance","PlaylistFilter_PlaylistFilter","isOpen","onFilter","debounce_default","handleClick","shouldClose","shouldOpen","clearFilter","input","focus","handleChange","target","refInput","_this$state","ref","onChange","Panel_PlaylistFilter","Meta_enhance","ID","Meta_PlaylistMeta","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","htmlFor","Checkbox","id","checked","Meta_ref2","checkedIcon","Meta_ref3","Meta","PlaylistFilterEmpty_enhance","PlaylistAdd","PlaylistFilterEmpty_PlaylistFilterEmpty","PlaylistFilterEmpty_ref2","Typography","Panel_PlaylistFilterEmpty","mediaTarget","component","thisID","some","playlistItem","insertBefore","isDraggingNearTopOfRow","onMoveMedia","before","after","hover","insertingAbove","PlaylistItemRow_PlaylistItemRow","objectWithoutPropertiesLoose_default","dropIndicator","PlaylistItemRow_ref","MediaList_Row","Panel_PlaylistItemRow","RemoveFromPlaylist_RemoveFromPlaylist","onRemove","Action","extends_default","onAction","RemoveFromPlaylist_ref2","Actions_RemoveFromPlaylist","EditMedia_EditMedia","onEdit","EditMedia_ref2","Actions_EditMedia","KeyboardArrowUp","MoveToFirst_MoveToFirst","onFirst","MoveToFirst_ref2","Actions_MoveToFirst","KeyboardArrowDown","MoveToLast_MoveToLast","onLast","MoveToLast_ref2","Actions_MoveToLast","Panel_PlaylistPanel","list","isFiltered","onLoadPlaylistPage","onFilterPlaylistItems","onOpenPreviewMediaDialog","loading","Panel_ref2","length","Panel_ref3","MediaList","rowComponent","rowProps","makeActions","onOpenAddMediaMenu","onMoveToFirst","onMoveToLast","onEditMedia","onRemoveFromPlaylist","selection","index","AddToPlaylist","onAdd","position","Panel_makeActions","onRequestPage","PlaylistManager_Panel","PlaylistManagerPanel_mapStateToProps","selectionOrOne","isSelected","get","PlaylistManagerPanel_onOpenAddMediaMenu","PlaylistManagerPanel","DialogActionCreators","at","PlaylistManagerPanel_onMoveToLast","opts","PlaylistManagerPanel_onMoveMedia","PlaylistManagerPanel_onEditMedia","PlaylistManagerPanel_onRemoveFromPlaylist","page","PlaylistManagerPanel_onLoadPlaylistPage","Import_PlaylistImport","getAllMediaSources","selectedSourceType","sourceStates","onHideImportPanel","Panel","getMediaSource","ImportPanel","onClosePanel","forms","sources","keys","forEach","ImportForm","push","Import","injectMediaSources","PlaylistImportManager_mapStateToProps","PlaylistImportManager","NoSearchResults_enhance","NoSearchResults_NoResults","NoSearchResults_ref2","NoSearchResults","SearchResults_LoadingSearchResults","LoadingSearchResults_ref","SearchResultsList_SearchResultsList","results","SearchResultsList_makeActions","SearchResults_SearchResultsList","SearchResults_enhance","SearchResults_SearchResultsPanel","loadingState","LoadingStates","SearchResults_ref2","SearchResults_ref3","SearchResults","SearchResultsPanel_mapStateToProps","SearchResultsPanel_onOpenAddMediaMenu","SearchResultsPanel_selectionOrOne","containers_SearchResultsPanel","SearchBar_enhance","SearchBar_SearchBar","focused","handleFocus","handleBlur","handleKeyDown","e","key","SearchBar_ref","placeholder","onFocus","onBlur","onKeyDown","components_SearchBar","SourcePickerElement_SourcePickerElement","source","style","backgroundImage","logo","Header_SourcePickerElement","SourcePicker_enhance","popoverPosition","anchorOrigin","vertical","horizontal","transformOrigin","ArrowDropDown","SourcePicker_SourcePicker","anchor","container","sourceName","refContainer","_this2","_this3","filter","SourcePicker_ref","Popover","paper","anchorEl","Header_SourcePicker","Header_SearchBar_SearchBar","onSourceChange","Header_SearchBar","MediaSearchBar_mapStateToProps","MediaSearchBar_mapDispatchToProps","RequestActionCreators","qs","onStart","searchStart","onComplete","onError","error","MediaSearchBar","Header_enhance","Header_PlaylistManagerHeader","onCloseOverlay","Header","Header_ref2","PlaylistManager_Header","NoPlaylists_enhance","NoPlaylists_NoPlaylists","PlaylistManager_NoPlaylists","PlaylistManager_PlaylistManager","panel","selectedPlaylist","PlaylistManager_ref2","PlaylistManager_ref3","PlaylistManager_ref4","Content","_ref5"],"mappings":"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","file":"playlists_cf92c7c.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n})), 'ModeEdit');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\n\nexport default class ConfirmDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    confirmLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cancelLabel: 'Cancel',\n    confirmLabel: 'OK',\n  };\n\n  state = {\n    busy: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleConfirm = (event) => {\n    const { onConfirm } = this.props;\n\n    event.preventDefault();\n    const promise = onConfirm();\n    if (promise && promise.finally) {\n      this.setState({ busy: true });\n      promise.finally(() => {\n        this.setState({ busy: false });\n      });\n    }\n  };\n\n  handleClose = (event) => {\n    const { onCancel } = this.props;\n\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    onCancel();\n  };\n\n  render() {\n    const {\n      children,\n      cancelLabel,\n      confirmLabel,\n      className,\n    } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Dialog\n        className={cx('Dialog', className)}\n        onClose={this.handleClose}\n        open\n      >\n        <DialogContent className=\"Dialog-body\">\n          <Form onSubmit={this.handleSubmit}>\n            {children}\n            <FormGroup className=\"ConfirmDialog-buttons FormGroup--noSpacing\">\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleClose}>\n                  {cancelLabel}\n                </Button>\n              </div>\n              <div className=\"ConfirmDialog-spacer\" />\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleConfirm}>\n                  {busy ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div> : confirmLabel}\n                </Button>\n              </div>\n            </FormGroup>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/PlaylistAdd';\n\nconst enhance = translate();\n\nconst PlaylistEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.empty')}</Typography>\n    <Typography>{t('playlists.playlist.emptySub')}</Typography>\n  </div>\n);\n\nPlaylistEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistEmpty);\n","import {\n  SHOW_IMPORT_PANEL,\n  HIDE_IMPORT_PANEL,\n  SHOW_IMPORT_SOURCE_PANEL,\n  HIDE_IMPORT_SOURCE_PANEL,\n} from '../constants/ActionTypes';\n\nexport function showImportPanel() {\n  return {\n    type: SHOW_IMPORT_PANEL,\n  };\n}\n\nexport function hideImportPanel() {\n  return {\n    type: HIDE_IMPORT_PANEL,\n  };\n}\n\nexport function showImportSourcePanel(sourceType) {\n  return {\n    type: SHOW_IMPORT_SOURCE_PANEL,\n    payload: { sourceType },\n  };\n}\n\nexport function hideImportSourcePanel() {\n  return { type: HIDE_IMPORT_SOURCE_PANEL };\n}\n","import { get } from './RequestActionCreators';\nimport {\n  SET_SEARCH_SOURCE,\n  SHOW_SEARCH_RESULTS,\n  SEARCH_START,\n  SEARCH_COMPLETE,\n  SEARCH_DELETE,\n} from '../constants/ActionTypes';\n\nexport function setSource(source) {\n  return {\n    type: SET_SEARCH_SOURCE,\n    payload: { source },\n  };\n}\n\nexport function showSearchResults() {\n  return { type: SHOW_SEARCH_RESULTS };\n}\n\nfunction searchStart(query) {\n  return {\n    type: SEARCH_START,\n    payload: { query },\n  };\n}\n\nexport function search(query) {\n  return get('/search', {\n    qs: { query },\n    onStart: () => (dispatch) => {\n      dispatch(searchStart(query));\n      dispatch(showSearchResults());\n    },\n    onComplete: results => ({\n      type: SEARCH_COMPLETE,\n      payload: { results },\n    }),\n    onError: error => ({\n      type: SEARCH_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function deleteSearch() {\n  return {\n    type: SEARCH_DELETE,\n  };\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nconst itemClasses = {\n  root: 'PlaylistMenuRow',\n  selected: 'is-selected',\n};\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <div>\n        <MenuItem\n          selected={selected}\n          className={cx(activeClass, droppableClass)}\n          classes={itemClasses}\n          onClick={onClick}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </MenuItem>\n      </div>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CreatePlaylistIcon from '@material-ui/icons/Add';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass NewPlaylist extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    t: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    creating: false,\n  };\n\n  handleOpen = () => {\n    this.setState({ creating: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = (playlistName) => {\n    const { onCreatePlaylist } = this.props;\n\n    return Promise.resolve(onCreatePlaylist(playlistName))\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ creating: false });\n  }\n\n  render() {\n    const { t, className } = this.props;\n    const { creating } = this.state;\n\n    return (\n      <React.Fragment>\n        <MenuItem\n          className={cx('PlaylistMenuRow', 'PlaylistMenuRow--create', className)}\n          onClick={this.handleOpen}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            <div className=\"PlaylistMenuRow-active-icon\">\n              <CreatePlaylistIcon />\n            </div>\n            {t('playlists.new')}\n          </div>\n        </MenuItem>\n        {creating && (\n          <PromptDialog\n            title={t('dialogs.createPlaylist.nameInputTitle')}\n            icon={<CreatePlaylistIcon nativeColor=\"#777\" />}\n            submitLabel={t('dialogs.createPlaylist.action')}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(NewPlaylist);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n})), 'Search');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst SearchResultsRow = ({\n  className,\n  query,\n  onClick,\n  onClose,\n}) => (\n  <ListItem role=\"menuitem\" className={cx('PlaylistMenuRow', 'PlaylistMenuRow--search', className)}>\n    <button\n      type=\"button\"\n      className=\"PlaylistMenuRow-title\"\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <SearchIcon />\n      </div>\n      &quot;{query}&quot;\n    </button>\n    <div className=\"PlaylistMenuRow-count\">\n      <IconButton className=\"PlaylistMenuRow-closeButton\" onClick={onClose}>\n        <CloseIcon nativeColor=\"#777\" />\n      </IconButton>\n    </div>\n  </ListItem>\n);\n\nSearchResultsRow.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsRow;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n})), 'Input');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ImportIcon from '@material-ui/icons/Input';\n\nconst enhance = translate();\n\nconst PlaylistImportRow = ({\n  t,\n  className,\n  importing,\n  onClick,\n}) => {\n  let icon;\n  if (importing) {\n    icon = (\n      <div className=\"PlaylistMenuRow-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    icon = (\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <ImportIcon />\n      </div>\n    );\n  }\n  return (\n    <MenuItem\n      className={cx('PlaylistMenuRow', 'PlaylistMenuRow--import', className)}\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-title\">\n        {icon}\n        {t('playlists.import.title')}\n      </div>\n    </MenuItem>\n  );\n};\n\nPlaylistImportRow.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  importing: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistImportRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport PlaylistRow from './Row';\nimport PlaylistCreateRow from './NewPlaylist';\nimport SearchResultsRow from './SearchResultsRow';\nimport PlaylistImportRow from './PlaylistImportRow';\n\nconst PlaylistMenu = ({\n  className,\n  playlists,\n  selected,\n  searchQuery,\n  showSearchResults,\n  searchResults,\n  onCreatePlaylist,\n  onSelectPlaylist,\n  onSelectSearchResults,\n  onCloseSearchResults,\n  onAddToPlaylist,\n  showImportPanel,\n  onShowImportPanel,\n}) => {\n  const searchIsSelected = showSearchResults ? 'is-selected' : '';\n  const importIsSelected = showImportPanel ? 'is-selected' : '';\n  const isSelectingPlaylist = selected && !showSearchResults && !showImportPanel;\n  return (\n    <MenuList className={cx('PlaylistMenu', className)} disablePadding>\n      <PlaylistCreateRow\n        className=\"PlaylistMenu-row\"\n        onCreatePlaylist={onCreatePlaylist}\n      />\n      {searchQuery && (\n        <SearchResultsRow\n          className={cx('PlaylistMenu-row', searchIsSelected)}\n          query={searchQuery}\n          size={searchResults}\n          onClick={onSelectSearchResults}\n          onClose={onCloseSearchResults}\n        />\n      )}\n      {playlists.map(pl => (\n        <PlaylistRow\n          key={pl._id}\n          className=\"PlaylistMenu-row\"\n          playlist={pl}\n          selected={isSelectingPlaylist && selected._id === pl._id}\n          onClick={() => onSelectPlaylist(pl._id)}\n          onAddToPlaylist={onAddToPlaylist}\n        />\n      ))}\n      <PlaylistImportRow\n        className={cx('PlaylistMenu-row', importIsSelected)}\n        onClick={onShowImportPanel}\n      />\n    </MenuList>\n  );\n};\n\nPlaylistMenu.propTypes = {\n  className: PropTypes.string,\n  playlists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selected: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.string,\n  searchResults: PropTypes.number,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onSelectPlaylist: PropTypes.func.isRequired,\n  onSelectSearchResults: PropTypes.func.isRequired,\n  onCloseSearchResults: PropTypes.func.isRequired,\n  onAddToPlaylist: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n};\n\nexport default PlaylistMenu;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  addMedia as addToPlaylist,\n  createPlaylist,\n  selectPlaylist,\n} from '../actions/PlaylistActionCreators';\nimport { showImportPanel } from '../actions/ImportActionCreators';\nimport {\n  showSearchResults,\n  deleteSearch,\n} from '../actions/SearchActionCreators';\n\nimport {\n  playlistsSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport {\n  searchQuerySelector,\n  showSearchResultsSelector,\n  searchResultsCountSelector,\n} from '../selectors/searchSelectors';\nimport { showImportPanelSelector } from '../selectors/importSelectors';\nimport PlaylistsMenu from '../components/PlaylistManager/Menu';\n\nconst mapStateToProps = createStructuredSelector({\n  playlists: playlistsSelector,\n  selected: selectedPlaylistSelector,\n  searchQuery: searchQuerySelector,\n  showSearchResults: showSearchResultsSelector,\n  searchResults: searchResultsCountSelector,\n  showImportPanel: showImportPanelSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onAddToPlaylist: addToPlaylist,\n  onCreatePlaylist: createPlaylist,\n  onSelectPlaylist: selectPlaylist,\n  onSelectSearchResults: showSearchResults,\n  onCloseSearchResults: deleteSearch,\n  onShowImportPanel: showImportPanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistsMenu);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n})), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n})), 'CheckBoxOutlineBlank');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string,\n  };\n\n  state = {\n    renaming: false,\n  };\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = (name) => {\n    const { onRename } = this.props;\n\n    return onRename(name)\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  render() {\n    const { t, initialName } = this.props;\n    const { renaming } = this.state;\n\n    return (\n      <React.Fragment>\n        <Tooltip title={t('playlists.rename')} placement=\"top\">\n          <IconButton className=\"PlaylistMeta-iconButton\" onClick={this.handleOpen}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        {renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon nativeColor=\"#777\" />}\n            value={initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(RenamePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n})), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ConfirmDialog from '../../Dialogs/ConfirmDialog';\nimport FormGroup from '../../Form/Group';\n\nconst enhance = translate();\n\nclass DeletePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onNotDeletable: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n  };\n\n  state = {\n    deleting: false,\n  };\n\n  handleOpen = () => {\n    const { active, onNotDeletable } = this.props;\n\n    if (active) {\n      onNotDeletable();\n    } else {\n      this.setState({ deleting: true });\n    }\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleConfirm = (name) => {\n    const { onDelete } = this.props;\n\n    return onDelete(name)\n      .then(this.closeDialog.bind(this));\n  };\n\n  closeDialog() {\n    this.setState({ deleting: false });\n  }\n\n  render() {\n    const { t, active } = this.props;\n    const { deleting } = this.state;\n\n    return (\n      <React.Fragment>\n        <Tooltip title={active ? t('playlists.deleteActive') : t('playlists.delete')} placement=\"top\">\n          <IconButton\n            disabled={active}\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleOpen}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        {deleting && (\n          <ConfirmDialog\n            title={t('dialogs.deletePlaylist.title')}\n            confirmLabel={t('dialogs.deletePlaylist.action')}\n            onConfirm={this.handleConfirm}\n            onCancel={this.handleClose}\n          >\n            <FormGroup>{t('dialogs.deletePlaylist.confirm')}</FormGroup>\n          </ConfirmDialog>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(DeletePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"\n})), 'Shuffle');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      const { setLoading, onShuffle } = props;\n\n      setLoading(true);\n      onShuffle().finally(() => {\n        setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isOpen: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    const { onFilter } = this.props;\n\n    onFilter(value);\n  }, 200);\n\n  handleClick = () => {\n    const { isOpen: shouldClose } = this.state;\n    const shouldOpen = !shouldClose;\n\n    if (shouldClose) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      isOpen: shouldOpen,\n      value: '',\n    }, () => {\n      if (shouldOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({ value });\n    this.onFilter(value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  clearFilter() {\n    const { onFilter } = this.props;\n    const { value } = this.state;\n\n    if (value !== '') {\n      onFilter('');\n    }\n  }\n\n  render() {\n    const { t } = this.props;\n    const { isOpen, value } = this.state;\n\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ActiveIcon from '@material-ui/icons/CheckBox';\nimport ActivateIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst enhance = translate();\n\nconst ID = 'playlist-meta-active';\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active && 'PlaylistMeta--active')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <label htmlFor={ID} className={cx('PlaylistMeta-active', active && 'is-active')}>\n      <Checkbox\n        id={ID}\n        checked={active}\n        disabled={active}\n        onChange={active ? null : onActivatePlaylist}\n        icon={<ActivateIcon />}\n        checkedIcon={<ActiveIcon nativeColor=\"#fff\" />}\n      />\n      <span>\n        {active ? t('playlists.active') : t('playlists.activate')}\n      </span>\n    </label>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistMeta);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/PlaylistAdd';\n\nconst enhance = translate();\n\nconst PlaylistFilterEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.filterEmpty')}</Typography>\n    <Typography>{t('playlists.playlist.filterEmptySub')}</Typography>\n  </div>\n);\n\nPlaylistFilterEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistFilterEmpty);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Action from './Action';\n\nconst RemoveFromPlaylist = ({ onRemove, ...props }) => (\n  <Action {...props} onAction={onRemove}>\n    <DeleteIcon />\n  </Action>\n);\n\nRemoveFromPlaylist.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default RemoveFromPlaylist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport Action from './Action';\n\nconst EditMedia = ({ onEdit, ...props }) => (\n  <Action {...props} onAction={onEdit}>\n    <EditIcon />\n  </Action>\n);\n\nEditMedia.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default EditMedia;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToFirstIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Action from './Action';\n\nconst MoveToFirst = ({ onFirst, ...props }) => (\n  <Action {...props} onAction={onFirst}>\n    <MoveToFirstIcon />\n  </Action>\n);\n\nMoveToFirst.propTypes = {\n  onFirst: PropTypes.func.isRequired,\n};\n\nexport default MoveToFirst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToLastIcon from '@material-ui/icons/KeyboardArrowDown';\nimport Action from './Action';\n\nconst MoveToLast = ({ onLast, ...props }) => (\n  <Action {...props} onAction={onLast}>\n    <MoveToLastIcon />\n  </Action>\n);\n\nMoveToLast.propTypes = {\n  onLast: PropTypes.func.isRequired,\n};\n\nexport default MoveToLast;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MediaList from '../../MediaList';\nimport PlaylistMeta from './Meta';\nimport PlaylistEmpty from './PlaylistEmpty';\nimport PlaylistFilterEmpty from './PlaylistFilterEmpty';\nimport PlainItemRow from '../../MediaList/Row';\nimport PlaylistItemRow from './PlaylistItemRow';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\nimport RemoveFromPlaylistAction from '../../MediaList/Actions/RemoveFromPlaylist';\nimport EditMediaAction from '../../MediaList/Actions/EditMedia';\nimport MoveToFirstAction from '../../MediaList/Actions/MoveToFirst';\nimport MoveToLastAction from '../../MediaList/Actions/MoveToLast';\n\nconst makeActions = ({\n  onOpenAddMediaMenu,\n  onMoveToFirst,\n  onMoveToLast,\n  onEditMedia,\n  onRemoveFromPlaylist,\n  isFiltered,\n}) => (media, selection, index) => (\n  <React.Fragment>\n    <AddToPlaylistAction onAdd={position => onOpenAddMediaMenu(position, media, selection)} />\n    {/* Don't show the \"move to first\" action on the first item in the playlist.\n      * If the playlist is filtered we don't know if the first item to show is\n      * also the first in the playlist, so just show it always in that case. */}\n    {(index > 0 || isFiltered) && (\n      <MoveToFirstAction onFirst={() => onMoveToFirst(media, selection)} />\n    )}\n    {(index === 0 && !isFiltered) && (\n    <MoveToLastAction onLast={() => onMoveToLast(media, selection)} />\n    )}\n    <EditMediaAction onEdit={() => onEditMedia(media)} />\n    <RemoveFromPlaylistAction onRemove={() => onRemoveFromPlaylist(media, selection)} />\n  </React.Fragment>\n);\n\nconst PlaylistPanel = (props) => {\n  const {\n    className,\n    playlist,\n    media,\n    loading,\n    isFiltered,\n    onShufflePlaylist,\n    onActivatePlaylist,\n    onRenamePlaylist,\n    onDeletePlaylist,\n    onNotDeletable,\n    onLoadPlaylistPage,\n    onFilterPlaylistItems,\n    onMoveMedia,\n    onOpenPreviewMediaDialog,\n  } = props;\n\n  let list;\n  if (loading) {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else if (media.length === 0) {\n    list = isFiltered\n      ? <PlaylistFilterEmpty />\n      : <PlaylistEmpty />;\n  } else {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        size={media.length}\n        media={media}\n        rowComponent={isFiltered ? PlainItemRow : PlaylistItemRow}\n        rowProps={{ onMoveMedia }}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={makeActions(props)}\n        onRequestPage={onLoadPlaylistPage}\n      />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', className)}>\n      <PlaylistMeta\n        className=\"PlaylistPanel-meta\"\n        id={playlist._id}\n        name={playlist.name}\n        active={playlist.active}\n        onShufflePlaylist={onShufflePlaylist}\n        onActivatePlaylist={onActivatePlaylist}\n        onRenamePlaylist={onRenamePlaylist}\n        onDeletePlaylist={onDeletePlaylist}\n        onNotDeletable={onNotDeletable}\n        onFilter={onFilterPlaylistItems}\n      />\n      {list}\n    </div>\n  );\n};\n\nPlaylistPanel.propTypes = {\n  className: PropTypes.string,\n  playlist: PropTypes.object.isRequired,\n  media: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onLoadPlaylistPage: PropTypes.func.isRequired,\n  onFilterPlaylistItems: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onMoveMedia: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default PlaylistPanel;\n","import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport {\n  selectedPlaylistSelector,\n  filteredSelectedPlaylistItemsSelector,\n  isSelectedPlaylistLoadingSelector,\n  isFilteredSelector,\n} from '../selectors/playlistSelectors';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport {\n  addMediaMenu,\n  editMedia,\n  moveMedia,\n  removeMedia,\n  filterPlaylistItems,\n  renamePlaylist,\n  deletePlaylist,\n  cannotDeleteActivePlaylist,\n  shufflePlaylist,\n  activatePlaylist,\n  loadPlaylist,\n  loadFilteredPlaylistItems,\n} from '../actions/PlaylistActionCreators';\n\nimport PlaylistPanel from '../components/PlaylistManager/Panel';\n\nconst mapStateToProps = createStructuredSelector({\n  playlist: selectedPlaylistSelector,\n  media: filteredSelectedPlaylistItemsSelector,\n  loading: isSelectedPlaylistLoadingSelector,\n  isFiltered: isFilteredSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) => (\n  addMediaMenu(selectionOrOne(media, selection), position)\n);\nconst onRemoveFromPlaylist = playlist => (media, selection) => (\n  removeMedia(playlist, selectionOrOne(media, selection))\n);\nconst onMoveMedia = playlist => (media, opts) => (\n  moveMedia(playlist, media, opts)\n);\nconst onMoveToFirst = playlist => (media, selection) => (\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'start' })\n);\nconst onMoveToLast = playlist => (media, selection) => (\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'end' })\n);\nconst onEditMedia = playlist => media => (\n  editMedia(playlist, media)\n);\nconst onLoadPlaylistPage = ({ isFiltered, playlist }) => page => (\n  isFiltered\n    ? loadFilteredPlaylistItems(playlist._id, page)\n    : loadPlaylist(playlist._id, page)\n);\n\n// Most of the playlist-related action creators need to know which playlist to\n// use, i.e. need to have a reference to the selected playlist. The selected\n// playlist is picked out in `mapStateToProps`, but we can't access its result\n// in `mapDispatchToProps` yet. Instead, `mapDispatchToProps` passes the\n// `dispatch` function to the `mergeProps` function below, and then that\n// configures the action creators.\n// TODO Maybe it's better to have versions of these action creators that work on\n// the selected playlist by default? using redux-thunk.\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mergeProps = (state, { dispatch }, props) => ({\n  ...props,\n  ...state,\n  ...bindActionCreators({\n    onShufflePlaylist: shufflePlaylist.bind(null, state.playlist._id),\n    onActivatePlaylist: activatePlaylist.bind(null, state.playlist._id),\n    onRenamePlaylist: renamePlaylist.bind(null, state.playlist._id),\n    onDeletePlaylist: deletePlaylist.bind(null, state.playlist._id),\n    onNotDeletable: cannotDeleteActivePlaylist,\n\n    onOpenAddMediaMenu,\n    onOpenPreviewMediaDialog: openPreviewMediaDialog,\n    onMoveToFirst: onMoveToFirst(state.playlist._id),\n    onMoveToLast: onMoveToLast(state.playlist._id),\n    onMoveMedia: onMoveMedia(state.playlist._id),\n    onEditMedia: onEditMedia(state.playlist._id),\n    onRemoveFromPlaylist: onRemoveFromPlaylist(state.playlist._id),\n    onLoadPlaylistPage: onLoadPlaylistPage(state),\n    onFilterPlaylistItems: filterPlaylistItems.bind(null, state.playlist._id),\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(PlaylistPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectMediaSources from '../../../utils/injectMediaSources';\n\nconst PlaylistImport = ({\n  getMediaSource,\n  getAllMediaSources,\n  selectedSourceType,\n  sourceStates,\n  onShowImportPanel,\n  onHideImportPanel,\n}) => {\n  if (selectedSourceType) {\n    const Panel = getMediaSource(selectedSourceType).ImportPanel;\n    const state = sourceStates[selectedSourceType];\n    return (\n      <Panel\n        onClosePanel={onHideImportPanel}\n        {...state}\n      />\n    );\n  }\n\n  const forms = [];\n  const sources = getAllMediaSources();\n  Object.keys(sources).forEach((sourceType) => {\n    const { ImportForm } = sources[sourceType];\n    if (ImportForm) {\n      forms.push((\n        <ImportForm\n          key={sourceType}\n          onShowImportPanel={() => onShowImportPanel(sourceType)}\n          onHideImportPanel={onHideImportPanel}\n        />\n      ));\n    }\n  });\n\n  return (\n    <div className=\"PlaylistImport\">\n      {forms}\n    </div>\n  );\n};\n\nPlaylistImport.propTypes = {\n  selectedSourceType: PropTypes.string,\n  sourceStates: PropTypes.object,\n\n  getMediaSource: PropTypes.func.isRequired,\n  getAllMediaSources: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n  onHideImportPanel: PropTypes.func.isRequired,\n};\n\nexport default injectMediaSources()(PlaylistImport);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  showImportSourcePanel,\n  hideImportSourcePanel,\n} from '../actions/ImportActionCreators';\nimport { selectedSourceTypeSelector } from '../selectors/importSelectors';\nimport PlaylistImport from '../components/PlaylistManager/Import';\n\nconst mapStateToProps = createStructuredSelector({\n  selectedSourceType: selectedSourceTypeSelector,\n  sourceStates: state => state.sources,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowImportPanel: showImportSourcePanel,\n  onHideImportPanel: hideImportSourcePanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistImport);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport NoResultsIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nconst NoResults = ({ t }) => (\n  <div className=\"SearchResults-none\">\n    <NoResultsIcon className=\"SearchResults-noneIcon\" />\n    <Typography className=\"SearchResults-noneHeader\">{t('playlists.search.noResults')}</Typography>\n    <Typography>{t('playlists.search.noResultsSub')}</Typography>\n  </div>\n);\n\nNoResults.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(NoResults);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingSearchResults = () => (\n  <div className=\"PlaylistPanel-loading\">\n    <CircularProgress size=\"100%\" />\n  </div>\n);\n\nexport default LoadingSearchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst makeActions = onOpenAddMediaMenu => (media, selection) => (\n  <React.Fragment>\n    <AddToPlaylistAction\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />\n  </React.Fragment>\n);\n\nconst SearchResultsList = ({\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => (\n  <MediaList\n    className=\"PlaylistPanel-media\"\n    media={results}\n    onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n    makeActions={makeActions(onOpenAddMediaMenu)}\n  />\n);\n\nSearchResultsList.propTypes = {\n  results: PropTypes.array.isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsList;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport NoSearchResults from './NoSearchResults';\nimport LoadingSearchResults from './LoadingSearchResults';\nimport SearchResultsList from './SearchResultsList';\n\nconst enhance = translate();\n\nconst SearchResultsPanel = ({\n  t,\n  className,\n  query,\n  loadingState,\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = results.length > 0 ? (\n      <SearchResultsList\n        results={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        onOpenAddMediaMenu={onOpenAddMediaMenu}\n      />\n    ) : (\n      <NoSearchResults />\n    );\n  } else {\n    list = (\n      <LoadingSearchResults />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResultsPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default enhance(SearchResultsPanel);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\n\nimport {\n  searchQuerySelector,\n  searchResultsSelector,\n  searchLoadingStateSelector,\n} from '../selectors/searchSelectors';\nimport SearchResults from '../components/PlaylistManager/SearchResults';\n\nconst mapStateToProps = createStructuredSelector({\n  query: searchQuerySelector,\n  results: searchResultsSelector,\n  loadingState: searchLoadingStateSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) => (\n  addMediaMenu(selectionOrOne(media, selection), position)\n);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass SearchBar extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { focused: false };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { onSubmit } = this.props;\n    if (e.key === 'Enter') {\n      onSubmit(this.input.value);\n    }\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t, children, className } = this.props;\n    const { focused } = this.state;\n\n    return (\n      <div className={cx('SearchBar', focused ? 'is-focused' : '', className)}>\n        <div className=\"SearchBar-icon\">\n          <SearchIcon />\n        </div>\n        {children}\n        <div className=\"SearchBar-query\">\n          <input\n            ref={this.refInput}\n            className=\"SearchBar-input\"\n            type=\"text\"\n            placeholder={focused ? '' : t('playlists.search.action')}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SourcePickerElement = ({\n  className,\n  name,\n  source,\n  active,\n}) => (\n  <div\n    className={cx(\n      'SourcePickerElement',\n      `SourcePickerElement--${name}`,\n      active && 'SourcePickerElement--active',\n      className,\n    )}\n    style={{ backgroundImage: `url(${source.logo})` }}\n  />\n);\n\nSourcePickerElement.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  source: PropTypes.shape({\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n  active: PropTypes.bool,\n};\n\nexport default SourcePickerElement;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowIcon from '@material-ui/icons/ArrowDropDown';\nimport injectMediaSources from '../../../utils/injectMediaSources';\nimport SourcePickerElement from './SourcePickerElement';\n\nconst enhance = injectMediaSources();\n\nconst popoverPosition = {\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n  transformOrigin: { vertical: 'top', horizontal: 'left' },\n};\n\nclass SourcePicker extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    selected: PropTypes.string,\n    onChange: PropTypes.func,\n\n    getMediaSource: PropTypes.func.isRequired,\n    getAllMediaSources: PropTypes.func.isRequired,\n  };\n\n  state = { open: false };\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      anchor: this.container,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = (sourceName) => {\n    const { onChange } = this.props;\n\n    this.handleClose();\n    onChange(sourceName);\n  }\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  createElement(sourceName) {\n    const { selected, getMediaSource } = this.props;\n\n    return (\n      <button\n        type=\"button\"\n        className=\"SourcePicker-item\"\n        key={sourceName}\n        onClick={() => this.handleChange(sourceName)}\n      >\n        <SourcePickerElement\n          name={sourceName}\n          source={getMediaSource(sourceName)}\n          active={selected === sourceName}\n        />\n      </button>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      selected,\n      getMediaSource,\n      getAllMediaSources,\n    } = this.props;\n    const { open, anchor } = this.state;\n\n    const sourceNames = Object.keys(getAllMediaSources());\n    const sources = sourceNames\n      .filter(name => name !== selected)\n      .map(name => this.createElement(name));\n\n    return (\n      <div\n        className={cx('SourcePicker', className)}\n        ref={this.refContainer}\n      >\n        <button\n          type=\"button\"\n          className=\"SourcePicker-active\"\n          onClick={this.handleOpen}\n        >\n          <SourcePickerElement\n            name={selected}\n            source={getMediaSource(selected)}\n            active\n          />\n          <ArrowIcon className=\"SourcePicker-arrow\" />\n        </button>\n        <Popover\n          classes={{ paper: 'SourcePicker-list' }}\n          open={open}\n          anchorEl={anchor}\n          onClose={this.handleClose}\n          {...popoverPosition}\n        >\n          {sources}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SourcePicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseSearchBar from '../../SearchBar';\nimport SourcePicker from './SourcePicker';\n\nconst SearchBar = ({\n  className,\n  source,\n  onSubmit,\n  onSourceChange,\n}) => (\n  <BaseSearchBar className={className} onSubmit={onSubmit}>\n    <SourcePicker\n      className=\"SearchBar-source\"\n      selected={source}\n      onChange={onSourceChange}\n    />\n  </BaseSearchBar>\n);\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onSourceChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport SearchBar from '../components/PlaylistManager/Header/SearchBar';\nimport {\n  search,\n  setSource,\n} from '../actions/SearchActionCreators';\nimport { searchSourceTypeSelector } from '../selectors/searchSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  source: searchSourceTypeSelector,\n});\n\nconst mapDispatchToProps = {\n  onSubmit: search,\n  onSourceChange: setSource,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport OverlayHeader from '../../Overlay/Header';\nimport SearchBar from '../../../containers/MediaSearchBar';\n\nconst enhance = translate();\n\nconst PlaylistManagerHeader = ({\n  t,\n  className,\n  onCloseOverlay,\n}) => (\n  <OverlayHeader\n    className={cx('PlaylistHeader', className)}\n    title={t('playlists.title')}\n    onCloseOverlay={onCloseOverlay}\n  >\n    <SearchBar className=\"PlaylistHeader-search\" />\n  </OverlayHeader>\n);\n\nPlaylistManagerHeader.propTypes = {\n  className: PropTypes.string,\n  t: PropTypes.func.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistManagerHeader);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nconst enhance = translate();\n\nconst NoPlaylists = ({ t, className }) => (\n  <div className={cx('PlaylistPanel', 'PlaylistPanel--empty', className)}>\n    {t('playlists.noPlaylists')}\n  </div>\n);\n\nNoPlaylists.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default enhance(NoPlaylists);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayContent from '../Overlay/Content';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport NoPlaylists from './NoPlaylists';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <NoPlaylists />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <OverlayContent>\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </OverlayContent>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}