{"version":3,"sources":["webpack:///../node_modules/@material-ui/icons/es/ModeEdit.js","webpack:///../node_modules/lodash/toNumber.js","webpack:///../node_modules/lodash/now.js","webpack:///../node_modules/lodash/debounce.js","webpack:///./components/Dialogs/ConfirmDialog/index.js","webpack:///./actions/ImportActionCreators.js","webpack:///./actions/SearchActionCreators.js","webpack:///./components/PlaylistManager/Menu/Row.js","webpack:///./components/PlaylistManager/Menu/NewPlaylist.js","webpack:///../node_modules/@material-ui/icons/es/Search.js","webpack:///./components/PlaylistManager/Menu/SearchResultsRow.js","webpack:///../node_modules/@material-ui/icons/es/Input.js","webpack:///./components/PlaylistManager/Menu/PlaylistImportRow.js","webpack:///./components/PlaylistManager/Menu/index.js","webpack:///./containers/PlaylistManagerMenu.js","webpack:///../node_modules/@material-ui/icons/es/CheckBox.js","webpack:///../node_modules/@material-ui/icons/es/CheckBoxOutlineBlank.js","webpack:///./components/PlaylistManager/Panel/RenamePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Delete.js","webpack:///./components/PlaylistManager/Panel/DeletePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Shuffle.js","webpack:///./components/PlaylistManager/Panel/ShufflePlaylistButton.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilter.js","webpack:///./components/PlaylistManager/Panel/Meta.js","webpack:///./components/PlaylistManager/Panel/PlaylistItemRow.js","webpack:///./components/MediaList/Actions/RemoveFromPlaylist.js","webpack:///./components/MediaList/Actions/EditMedia.js","webpack:///./components/MediaList/Actions/MoveToFirst.js","webpack:///./components/MediaList/Actions/MoveToLast.js","webpack:///./components/PlaylistManager/Panel/index.js","webpack:///./containers/PlaylistManagerPanel.js","webpack:///./components/PlaylistManager/Import/index.js","webpack:///./containers/PlaylistImportManager.js","webpack:///./components/PlaylistManager/SearchResults/NoSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/LoadingSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/SearchResultsList.js","webpack:///./components/PlaylistManager/SearchResults/index.js","webpack:///./containers/SearchResultsPanel.js","webpack:///./components/SearchBar/index.js","webpack:///./components/PlaylistManager/Header/SourcePickerElement.js","webpack:///./components/PlaylistManager/Header/SourcePicker.js","webpack:///./components/PlaylistManager/Header/SearchBar.js","webpack:///./containers/MediaSearchBar.js","webpack:///./components/PlaylistManager/Header/index.js","webpack:///./components/PlaylistManager/Panel/Empty.js","webpack:///./components/PlaylistManager/index.js"],"names":["__webpack_exports__","Object","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","d","isObject","__webpack_require__","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","module","exports","value","other","valueOf","replace","isBinary","test","slice","root","Date","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","_babel_runtime_helpers_builtin_jsx__WEBPACK_IMPORTED_MODULE_0___default","className","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_8__","size","ConfirmDialog","state","busy","handleSubmit","event","preventDefault","handleConfirm","promise","_this","props","onConfirm","then","setState","onDone","handleClose","onCancel","render","_this$props","children","cancelLabel","confirmLabel","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_3___default","onClose","open","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_7__","_Form__WEBPACK_IMPORTED_MODULE_9__","onSubmit","_Form_Group__WEBPACK_IMPORTED_MODULE_10__","_Form_Button__WEBPACK_IMPORTED_MODULE_11__","disabled","onClick","_ref","react__WEBPACK_IMPORTED_MODULE_4___default","Component","defaultProps","propTypes","ImportActionCreators_showImportPanel","type","ActionTypes","showImportSourcePanel","sourceType","payload","hideImportSourcePanel","SearchActionCreators_showSearchResults","deleteSearch","enhance","lib","DDItemTypes","drop","monitor","onAddToPlaylist","playlist","getItem","media","connect","connectDropTarget","dropTarget","isOver","itemClasses","selected","jsx_default","CircularProgress","Check","Row_PlaylistRow","icon","activeClass","active","droppableClass","creating","Row_ref2","MenuItem","classnames_default","classes","name","react_default","Row","NewPlaylist_enhance","dist_es","Add","nativeColor","NewPlaylist_NewPlaylist","handleOpen","closeDialog","playlistName","Promise","resolve","onCreatePlaylist","bind","assertThisInitialized_default","t","Fragment","NewPlaylist_ref","PromptDialog","title","NewPlaylist_ref2","submitLabel","Menu_NewPlaylist","Search","createSvgIcon","Close","SearchResultsRow_SearchResultsRow","query","ListItem","role","SearchResultsRow_ref2","IconButton","SearchResultsRow_ref3","Menu_SearchResultsRow","Input","PlaylistImportRow_enhance","PlaylistImportRow_PlaylistImportRow","importing","PlaylistImportRow_ref2","PlaylistImportRow_ref3","Menu_PlaylistImportRow","Menu_PlaylistMenu","playlists","searchQuery","showSearchResults","searchResults","onSelectPlaylist","onSelectSearchResults","onCloseSearchResults","showImportPanel","onShowImportPanel","searchIsSelected","importIsSelected","isSelectingPlaylist","MenuList","disablePadding","map","pl","_id","Menu","mapStateToProps","reselect_es","playlistSelectors","searchSelectors","importSelectors","PlaylistManagerMenu","es","dispatch","redux","PlaylistActionCreators","CheckBox","CheckBoxOutlineBlank","RenamePlaylistButton_enhance","ModeEdit","RenamePlaylistButton_RenamePlaylistButton","renaming","onRename","Tooltip","placement","RenamePlaylistButton_ref","RenamePlaylistButton_ref2","initialName","Panel_RenamePlaylistButton","Delete","DeletePlaylistButton_enhance","DeletePlaylistButton_DeletePlaylistButton","deleting","onNotDeletable","onDelete","DeletePlaylistButton_ref","Group","Panel_DeletePlaylistButton","Shuffle","ShufflePlaylistButton_enhance","compose_default","withState_default","withHandlers_default","setLoading","onShuffle","ShufflePlaylistButton_ShuffleButton","isLoading","ShufflePlaylistButton_ref2","ShufflePlaylistButton_ref3","ShufflePlaylistButton","PlaylistFilter_enhance","PlaylistFilter_PlaylistFilter","onFilter","debounce_default","handleClick","isOpen","clearFilter","input","focus","handleChange","target","refInput","ref","onChange","Panel_PlaylistFilter","Meta_enhance","ID","Meta_PlaylistMeta","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","htmlFor","Checkbox","id","checked","Meta_ref2","checkedIcon","Meta_ref3","Meta","mediaTarget","component","thisID","some","playlistItem","insertBefore","isDraggingNearTopOfRow","onMoveMedia","before","after","hover","insertingAbove","PlaylistItemRow_PlaylistItemRow","objectWithoutProperties_default","dropIndicator","PlaylistItemRow_ref","MediaList_Row","Panel_PlaylistItemRow","RemoveFromPlaylist_RemoveFromPlaylist","onRemove","Action","extends_default","onAction","RemoveFromPlaylist_ref2","Actions_RemoveFromPlaylist","EditMedia_EditMedia","onEdit","EditMedia_ref2","Actions_EditMedia","KeyboardArrowUp","MoveToFirst_MoveToFirst","onFirst","MoveToFirst_ref2","Actions_MoveToFirst","KeyboardArrowDown","MoveToLast_MoveToLast","onLast","MoveToLast_ref2","Actions_MoveToLast","Panel_PlaylistPanel","list","isFiltered","onLoadPlaylistPage","onFilterPlaylistItems","onOpenPreviewMediaDialog","loading","Panel_ref2","MediaList","length","rowComponent","rowProps","makeActions","onOpenAddMediaMenu","onMoveToFirst","onMoveToLast","onEditMedia","onRemoveFromPlaylist","selection","index","AddToPlaylist","onAdd","position","Panel_makeActions","onRequestPage","PlaylistManager_Panel","PlaylistManagerPanel_mapStateToProps","selectionOrOne","isSelected","get","PlaylistManagerPanel_onOpenAddMediaMenu","PlaylistManagerPanel","_ref2","DialogActionCreators","at","PlaylistManagerPanel_onMoveToLast","opts","PlaylistManagerPanel_onMoveMedia","PlaylistManagerPanel_onEditMedia","PlaylistManagerPanel_onRemoveFromPlaylist","page","PlaylistManagerPanel_onLoadPlaylistPage","Import_PlaylistImport","getAllMediaSources","selectedSourceType","sourceStates","onHideImportPanel","Panel","getMediaSource","ImportPanel","onClosePanel","forms","sources","keys","forEach","ImportForm","push","Import","injectMediaSources","PlaylistImportManager_mapStateToProps","PlaylistImportManager","NoSearchResults_enhance","NoSearchResults_NoResults","NoSearchResults_ref2","Typography","NoSearchResults","SearchResults_LoadingSearchResults","LoadingSearchResults_ref","SearchResultsList_SearchResultsList","results","SearchResultsList_makeActions","SearchResults_SearchResultsList","SearchResults_enhance","SearchResults_SearchResultsPanel","loadingState","LoadingStates","SearchResults_ref2","SearchResults_ref3","SearchResults","SearchResultsPanel_mapStateToProps","SearchResultsPanel_onOpenAddMediaMenu","SearchResultsPanel_selectionOrOne","containers_SearchResultsPanel","SearchBar_enhance","SearchBar_SearchBar","focused","handleFocus","handleBlur","handleKeyDown","e","key","SearchBar_ref","placeholder","onFocus","onBlur","onKeyDown","components_SearchBar","SourcePickerElement_SourcePickerElement","source","style","backgroundImage","logo","Header_SourcePickerElement","SourcePicker_enhance","popoverPosition","anchorOrigin","vertical","horizontal","transformOrigin","ArrowDropDown","SourcePicker_SourcePicker","anchor","container","refContainer","sourceName","_this2","_this3","_this$props2","filter","SourcePicker_ref","Popover","paper","anchorEl","Header_SourcePicker","Header_SearchBar_SearchBar","onSourceChange","Header_SearchBar","MediaSearchBar_mapStateToProps","MediaSearchBar_mapDispatchToProps","RequestActionCreators","qs","onStart","searchStart","onComplete","onError","error","MediaSearchBar","Header_enhance","Header_PlaylistManagerHeader","onCloseOverlay","Header","Header_ref2","PlaylistManager_Header","Empty_EmptyPanel","Empty","PlaylistManager_PlaylistManager","panel","selectedPlaylist","PlaylistManager_ref2","PlaylistManager_ref3","Content","_ref5"],"mappings":"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","file":"playlists_00378a8.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n})), 'ModeEdit');","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\n\nexport default class ConfirmDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    confirmLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cancelLabel: 'Cancel',\n    confirmLabel: 'OK',\n  };\n\n  state = {\n    busy: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleConfirm = (event) => {\n    event.preventDefault();\n    const promise = this.props.onConfirm();\n    if (promise && promise.then) {\n      this.setState({ busy: true });\n      const onDone = () => {\n        this.setState({ busy: false });\n      };\n      promise.then(onDone, onDone);\n    }\n  };\n\n  handleClose = (event) => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.props.onCancel();\n  };\n\n  render() {\n    const {\n      children,\n      cancelLabel,\n      confirmLabel,\n      className,\n    } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Dialog\n        className={cx('Dialog', className)}\n        onClose={this.handleClose}\n        open\n      >\n        <DialogContent className=\"Dialog-body\">\n          <Form onSubmit={this.handleSubmit}>\n            {children}\n            <FormGroup className=\"ConfirmDialog-buttons FormGroup--noSpacing\">\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleClose}>\n                  {cancelLabel}\n                </Button>\n              </div>\n              <div className=\"ConfirmDialog-spacer\" />\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleConfirm}>\n                  {busy ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div> : confirmLabel}\n                </Button>\n              </div>\n            </FormGroup>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import {\n  SHOW_IMPORT_PANEL,\n  HIDE_IMPORT_PANEL,\n  SHOW_IMPORT_SOURCE_PANEL,\n  HIDE_IMPORT_SOURCE_PANEL,\n} from '../constants/ActionTypes';\n\nexport function showImportPanel() {\n  return {\n    type: SHOW_IMPORT_PANEL,\n  };\n}\n\nexport function hideImportPanel() {\n  return {\n    type: HIDE_IMPORT_PANEL,\n  };\n}\n\nexport function showImportSourcePanel(sourceType) {\n  return {\n    type: SHOW_IMPORT_SOURCE_PANEL,\n    payload: { sourceType },\n  };\n}\n\nexport function hideImportSourcePanel() {\n  return { type: HIDE_IMPORT_SOURCE_PANEL };\n}\n","import { get } from './RequestActionCreators';\nimport {\n  SET_SEARCH_SOURCE,\n  SHOW_SEARCH_RESULTS,\n  SEARCH_START,\n  SEARCH_COMPLETE,\n  SEARCH_DELETE,\n} from '../constants/ActionTypes';\n\nexport function setSource(source) {\n  return {\n    type: SET_SEARCH_SOURCE,\n    payload: { source },\n  };\n}\n\nexport function showSearchResults() {\n  return { type: SHOW_SEARCH_RESULTS };\n}\n\nfunction searchStart(query) {\n  return {\n    type: SEARCH_START,\n    payload: { query },\n  };\n}\n\nexport function search(query) {\n  return get('/search', {\n    qs: { query },\n    onStart: () => (dispatch) => {\n      dispatch(searchStart(query));\n      dispatch(showSearchResults());\n    },\n    onComplete: results => ({\n      type: SEARCH_COMPLETE,\n      payload: { results },\n    }),\n    onError: error => ({\n      type: SEARCH_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function deleteSearch() {\n  return {\n    type: SEARCH_DELETE,\n  };\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nconst itemClasses = {\n  root: 'PlaylistMenuRow',\n  selected: 'is-selected',\n};\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <div>\n        <MenuItem\n          selected={selected}\n          className={cx(activeClass, droppableClass)}\n          classes={itemClasses}\n          onClick={onClick}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </MenuItem>\n      </div>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CreatePlaylistIcon from '@material-ui/icons/Add';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass NewPlaylist extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    t: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    creating: false,\n  };\n\n  closeDialog() {\n    this.setState({ creating: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ creating: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = playlistName =>\n    Promise.resolve(this.props.onCreatePlaylist(playlistName))\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t, className } = this.props;\n    return (\n      <React.Fragment>\n        <MenuItem\n          className={cx('PlaylistMenuRow', 'PlaylistMenuRow--create', className)}\n          onClick={this.handleOpen}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            <div className=\"PlaylistMenuRow-active-icon\">\n              <CreatePlaylistIcon />\n            </div>\n            {t('playlists.new')}\n          </div>\n        </MenuItem>\n        {this.state.creating && (\n          <PromptDialog\n            title={t('dialogs.createPlaylist.nameInputTitle')}\n            icon={<CreatePlaylistIcon nativeColor=\"#777\" />}\n            submitLabel={t('dialogs.createPlaylist.action')}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(NewPlaylist);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n})), 'Search');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst SearchResultsRow = ({\n  className,\n  query,\n  onClick,\n  onClose,\n}) => (\n  <ListItem role=\"menuitem\" className={cx('PlaylistMenuRow', 'PlaylistMenuRow--search', className)}>\n    <button\n      className=\"PlaylistMenuRow-title\"\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <SearchIcon />\n      </div>\n      &quot;{query}&quot;\n    </button>\n    <div className=\"PlaylistMenuRow-count\">\n      <IconButton className=\"PlaylistMenuRow-closeButton\" onClick={onClose}>\n        <CloseIcon nativeColor=\"#777\" />\n      </IconButton>\n    </div>\n  </ListItem>\n);\n\nSearchResultsRow.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsRow;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n})), 'Input');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ImportIcon from '@material-ui/icons/Input';\n\nconst enhance = translate();\n\nconst PlaylistImportRow = ({\n  t,\n  className,\n  importing,\n  onClick,\n}) => {\n  let icon;\n  if (importing) {\n    icon = (\n      <div className=\"PlaylistMenuRow-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    icon = (\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <ImportIcon />\n      </div>\n    );\n  }\n  return (\n    <MenuItem\n      className={cx('PlaylistMenuRow', 'PlaylistMenuRow--import', className)}\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-title\">\n        {icon}\n        {t('playlists.import.title')}\n      </div>\n    </MenuItem>\n  );\n};\n\nPlaylistImportRow.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  importing: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistImportRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport PlaylistRow from './Row';\nimport PlaylistCreateRow from './NewPlaylist';\nimport SearchResultsRow from './SearchResultsRow';\nimport PlaylistImportRow from './PlaylistImportRow';\n\nconst PlaylistMenu = ({\n  className,\n  playlists,\n  selected,\n  searchQuery,\n  showSearchResults,\n  searchResults,\n  onCreatePlaylist,\n  onSelectPlaylist,\n  onSelectSearchResults,\n  onCloseSearchResults,\n  onAddToPlaylist,\n  showImportPanel,\n  onShowImportPanel,\n}) => {\n  const searchIsSelected = showSearchResults ? 'is-selected' : '';\n  const importIsSelected = showImportPanel ? 'is-selected' : '';\n  const isSelectingPlaylist = selected && !showSearchResults && !showImportPanel;\n  return (\n    <MenuList className={cx('PlaylistMenu', className)} disablePadding>\n      <PlaylistCreateRow\n        className=\"PlaylistMenu-row\"\n        onCreatePlaylist={onCreatePlaylist}\n      />\n      {searchQuery && (\n        <SearchResultsRow\n          className={cx('PlaylistMenu-row', searchIsSelected)}\n          query={searchQuery}\n          size={searchResults}\n          onClick={onSelectSearchResults}\n          onClose={onCloseSearchResults}\n        />\n      )}\n      {playlists.map(pl => (\n        <PlaylistRow\n          key={pl._id}\n          className=\"PlaylistMenu-row\"\n          playlist={pl}\n          selected={isSelectingPlaylist && selected._id === pl._id}\n          onClick={() => onSelectPlaylist(pl._id)}\n          onAddToPlaylist={onAddToPlaylist}\n        />\n      ))}\n      <PlaylistImportRow\n        className={cx('PlaylistMenu-row', importIsSelected)}\n        onClick={onShowImportPanel}\n      />\n    </MenuList>\n  );\n};\n\nPlaylistMenu.propTypes = {\n  className: PropTypes.string,\n  playlists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selected: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.string,\n  searchResults: PropTypes.number,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onSelectPlaylist: PropTypes.func.isRequired,\n  onSelectSearchResults: PropTypes.func.isRequired,\n  onCloseSearchResults: PropTypes.func.isRequired,\n  onAddToPlaylist: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n};\n\nexport default PlaylistMenu;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  addMedia as addToPlaylist,\n  createPlaylist,\n  selectPlaylist,\n} from '../actions/PlaylistActionCreators';\nimport { showImportPanel } from '../actions/ImportActionCreators';\nimport {\n  showSearchResults,\n  deleteSearch,\n} from '../actions/SearchActionCreators';\n\nimport {\n  playlistsSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport {\n  searchQuerySelector,\n  showSearchResultsSelector,\n  searchResultsCountSelector,\n} from '../selectors/searchSelectors';\nimport { showImportPanelSelector } from '../selectors/importSelectors';\nimport PlaylistsMenu from '../components/PlaylistManager/Menu';\n\nconst mapStateToProps = createStructuredSelector({\n  playlists: playlistsSelector,\n  selected: selectedPlaylistSelector,\n  searchQuery: searchQuerySelector,\n  showSearchResults: showSearchResultsSelector,\n  searchResults: searchResultsCountSelector,\n  showImportPanel: showImportPanelSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onAddToPlaylist: addToPlaylist,\n  onCreatePlaylist: createPlaylist,\n  onSelectPlaylist: selectPlaylist,\n  onSelectSearchResults: showSearchResults,\n  onCloseSearchResults: deleteSearch,\n  onShowImportPanel: showImportPanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistsMenu);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n})), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n})), 'CheckBoxOutlineBlank');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string,\n  };\n\n  state = {\n    renaming: false,\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = name =>\n    this.props.onRename(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={t('playlists.rename')} placement=\"top\">\n          <IconButton className=\"PlaylistMeta-iconButton\" onClick={this.handleOpen}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon nativeColor=\"#777\" />}\n            value={this.props.initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(RenamePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n})), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport ConfirmDialog from '../../Dialogs/ConfirmDialog';\nimport FormGroup from '../../Form/Group';\n\nconst enhance = translate();\n\nclass DeletePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onNotDeletable: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n  };\n\n  state = {\n    deleting: false,\n  };\n\n  closeDialog() {\n    this.setState({ deleting: false });\n  }\n\n  handleOpen = () => {\n    if (this.props.active) {\n      this.props.onNotDeletable();\n    } else {\n      this.setState({ deleting: true });\n    }\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleConfirm = name =>\n    this.props.onDelete(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t, active } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={active ? t('playlists.deleteActive') : t('playlists.delete')} placement=\"top\">\n          <IconButton\n            disabled={active}\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleOpen}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.deleting && (\n          <ConfirmDialog\n            title={t('dialogs.deletePlaylist.title')}\n            confirmLabel={t('dialogs.deletePlaylist.action')}\n            onConfirm={this.handleConfirm}\n            onCancel={this.handleClose}\n          >\n            <FormGroup>{t('dialogs.deletePlaylist.confirm')}</FormGroup>\n          </ConfirmDialog>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(DeletePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"\n})), 'Shuffle');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    this.props.onFilter(value);\n  }, 200);\n\n  clearFilter() {\n    if (this.state.value !== '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleClick = () => {\n    const isOpen = !this.state.open;\n\n    if (!isOpen) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      open: isOpen,\n      value: '',\n    }, () => {\n      if (isOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.onFilter(event.target.value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t } = this.props;\n    const isOpen = this.state.open;\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ActiveIcon from '@material-ui/icons/CheckBox';\nimport ActivateIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst enhance = translate();\n\nconst ID = 'playlist-meta-active';\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active && 'PlaylistMeta--active')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <label htmlFor={ID} className={cx('PlaylistMeta-active', active && 'is-active')}>\n      <Checkbox\n        id={ID}\n        checked={active}\n        disabled={active}\n        onChange={active ? null : onActivatePlaylist}\n        icon={<ActivateIcon />}\n        checkedIcon={<ActiveIcon nativeColor=\"#fff\" />}\n      />\n      <span>\n        {active ? t('playlists.active') : t('playlists.activate')}\n      </span>\n    </label>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistMeta);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Action from './Action';\n\nconst RemoveFromPlaylist = ({ onRemove, ...props }) => (\n  <Action {...props} onAction={onRemove}>\n    <DeleteIcon />\n  </Action>\n);\n\nRemoveFromPlaylist.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default RemoveFromPlaylist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport Action from './Action';\n\nconst EditMedia = ({ onEdit, ...props }) => (\n  <Action {...props} onAction={onEdit}>\n    <EditIcon />\n  </Action>\n);\n\nEditMedia.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default EditMedia;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToFirstIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Action from './Action';\n\nconst MoveToFirst = ({ onFirst, ...props }) => (\n  <Action {...props} onAction={onFirst}>\n    <MoveToFirstIcon />\n  </Action>\n);\n\nMoveToFirst.propTypes = {\n  onFirst: PropTypes.func.isRequired,\n};\n\nexport default MoveToFirst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToLastIcon from '@material-ui/icons/KeyboardArrowDown';\nimport Action from './Action';\n\nconst MoveToLast = ({ onLast, ...props }) => (\n  <Action {...props} onAction={onLast}>\n    <MoveToLastIcon />\n  </Action>\n);\n\nMoveToLast.propTypes = {\n  onLast: PropTypes.func.isRequired,\n};\n\nexport default MoveToLast;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MediaList from '../../MediaList';\nimport PlaylistMeta from './Meta';\nimport PlainItemRow from '../../MediaList/Row';\nimport PlaylistItemRow from './PlaylistItemRow';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\nimport RemoveFromPlaylistAction from '../../MediaList/Actions/RemoveFromPlaylist';\nimport EditMediaAction from '../../MediaList/Actions/EditMedia';\nimport MoveToFirstAction from '../../MediaList/Actions/MoveToFirst';\nimport MoveToLastAction from '../../MediaList/Actions/MoveToLast';\n\nconst makeActions = ({\n  onOpenAddMediaMenu,\n  onMoveToFirst,\n  onMoveToLast,\n  onEditMedia,\n  onRemoveFromPlaylist,\n  isFiltered,\n}) =>\n  (media, selection, index) => [\n    <AddToPlaylistAction\n      key=\"add\"\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />,\n    // Don't show the \"move to first\" action on the first item in the playlist.\n    // If the playlist is filtered we don't know if the first item to show is\n    // also the first in the playlist, so just show it always in that case.\n    (index > 0 || isFiltered) && (\n      <MoveToFirstAction\n        key=\"first\"\n        onFirst={() => onMoveToFirst(media, selection)}\n      />\n    ),\n    (index === 0 && !isFiltered) && (\n      <MoveToLastAction\n        key=\"last\"\n        onLast={() => onMoveToLast(media, selection)}\n      />\n    ),\n    <EditMediaAction\n      key=\"edit\"\n      onEdit={() => onEditMedia(media)}\n    />,\n    <RemoveFromPlaylistAction\n      key=\"remove\"\n      onRemove={() => onRemoveFromPlaylist(media, selection)}\n    />,\n  ];\n\nconst PlaylistPanel = (props) => {\n  const {\n    className,\n    playlist,\n    media,\n    loading,\n    isFiltered,\n    onShufflePlaylist,\n    onActivatePlaylist,\n    onRenamePlaylist,\n    onDeletePlaylist,\n    onNotDeletable,\n    onLoadPlaylistPage,\n    onFilterPlaylistItems,\n    onMoveMedia,\n    onOpenPreviewMediaDialog,\n  } = props;\n\n  let list;\n  if (loading) {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        size={media.length}\n        media={media}\n        rowComponent={isFiltered ? PlainItemRow : PlaylistItemRow}\n        rowProps={{ onMoveMedia }}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={makeActions(props)}\n        onRequestPage={onLoadPlaylistPage}\n      />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', className)}>\n      <PlaylistMeta\n        className=\"PlaylistPanel-meta\"\n        id={playlist._id}\n        name={playlist.name}\n        active={playlist.active}\n        onShufflePlaylist={onShufflePlaylist}\n        onActivatePlaylist={onActivatePlaylist}\n        onRenamePlaylist={onRenamePlaylist}\n        onDeletePlaylist={onDeletePlaylist}\n        onNotDeletable={onNotDeletable}\n        onFilter={onFilterPlaylistItems}\n      />\n      {list}\n    </div>\n  );\n};\n\nPlaylistPanel.propTypes = {\n  className: PropTypes.string,\n  playlist: PropTypes.object.isRequired,\n  media: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onLoadPlaylistPage: PropTypes.func.isRequired,\n  onFilterPlaylistItems: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onMoveMedia: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default PlaylistPanel;\n","import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport {\n  selectedPlaylistSelector,\n  filteredSelectedPlaylistItemsSelector,\n  isSelectedPlaylistLoadingSelector,\n  isFilteredSelector,\n} from '../selectors/playlistSelectors';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport {\n  addMediaMenu,\n  editMedia,\n  moveMedia,\n  removeMedia,\n  filterPlaylistItems,\n  renamePlaylist,\n  deletePlaylist,\n  cannotDeleteActivePlaylist,\n  shufflePlaylist,\n  activatePlaylist,\n  loadPlaylist,\n  loadFilteredPlaylistItems,\n} from '../actions/PlaylistActionCreators';\n\nimport PlaylistPanel from '../components/PlaylistManager/Panel';\n\nconst mapStateToProps = createStructuredSelector({\n  playlist: selectedPlaylistSelector,\n  media: filteredSelectedPlaylistItemsSelector,\n  loading: isSelectedPlaylistLoadingSelector,\n  isFiltered: isFilteredSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\nconst onRemoveFromPlaylist = playlist => (media, selection) =>\n  removeMedia(playlist, selectionOrOne(media, selection));\nconst onMoveMedia = playlist => (media, opts) =>\n  moveMedia(playlist, media, opts);\nconst onMoveToFirst = playlist => (media, selection) =>\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'start' });\nconst onMoveToLast = playlist => (media, selection) =>\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'end' });\nconst onEditMedia = playlist => media =>\n  editMedia(playlist, media);\nconst onLoadPlaylistPage = ({ isFiltered, playlist }) => page => (\n  isFiltered ? loadFilteredPlaylistItems(playlist._id, page) :\n    loadPlaylist(playlist._id, page)\n);\n\n// Most of the playlist-related action creators need to know which playlist to\n// use, i.e. need to have a reference to the selected playlist. The selected\n// playlist is picked out in `mapStateToProps`, but we can't access its result\n// in `mapDispatchToProps` yet. Instead, `mapDispatchToProps` passes the\n// `dispatch` function to the `mergeProps` function below, and then that\n// configures the action creators.\n// TODO Maybe it's better to have versions of these action creators that work on\n// the selected playlist by default? using redux-thunk.\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mergeProps = (state, { dispatch }, props) => ({\n  ...props,\n  ...state,\n  ...bindActionCreators({\n    onShufflePlaylist: shufflePlaylist.bind(null, state.playlist._id),\n    onActivatePlaylist: activatePlaylist.bind(null, state.playlist._id),\n    onRenamePlaylist: renamePlaylist.bind(null, state.playlist._id),\n    onDeletePlaylist: deletePlaylist.bind(null, state.playlist._id),\n    onNotDeletable: cannotDeleteActivePlaylist,\n\n    onOpenAddMediaMenu,\n    onOpenPreviewMediaDialog: openPreviewMediaDialog,\n    onMoveToFirst: onMoveToFirst(state.playlist._id),\n    onMoveToLast: onMoveToLast(state.playlist._id),\n    onMoveMedia: onMoveMedia(state.playlist._id),\n    onEditMedia: onEditMedia(state.playlist._id),\n    onRemoveFromPlaylist: onRemoveFromPlaylist(state.playlist._id),\n    onLoadPlaylistPage: onLoadPlaylistPage(state),\n    onFilterPlaylistItems: filterPlaylistItems.bind(null, state.playlist._id),\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(PlaylistPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectMediaSources from '../../../utils/injectMediaSources';\n\nconst PlaylistImport = ({\n  getMediaSource,\n  getAllMediaSources,\n  selectedSourceType,\n  sourceStates,\n  onShowImportPanel,\n  onHideImportPanel,\n}) => {\n  if (selectedSourceType) {\n    const Panel = getMediaSource(selectedSourceType).ImportPanel;\n    const state = sourceStates[selectedSourceType];\n    return (\n      <Panel\n        onClosePanel={onHideImportPanel}\n        {...state}\n      />\n    );\n  }\n\n  const forms = [];\n  const sources = getAllMediaSources();\n  Object.keys(sources).forEach((sourceType) => {\n    const { ImportForm } = sources[sourceType];\n    if (ImportForm) {\n      forms.push((\n        <ImportForm\n          key={sourceType}\n          onShowImportPanel={() => onShowImportPanel(sourceType)}\n          onHideImportPanel={onHideImportPanel}\n        />\n      ));\n    }\n  });\n\n  return (\n    <div className=\"PlaylistImport\">\n      {forms}\n    </div>\n  );\n};\n\nPlaylistImport.propTypes = {\n  selectedSourceType: PropTypes.string,\n  sourceStates: PropTypes.object,\n\n  getMediaSource: PropTypes.func.isRequired,\n  getAllMediaSources: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n  onHideImportPanel: PropTypes.func.isRequired,\n};\n\nexport default injectMediaSources()(PlaylistImport);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  showImportSourcePanel,\n  hideImportSourcePanel,\n} from '../actions/ImportActionCreators';\nimport { selectedSourceTypeSelector } from '../selectors/importSelectors';\nimport PlaylistImport from '../components/PlaylistManager/Import';\n\nconst mapStateToProps = createStructuredSelector({\n  selectedSourceType: selectedSourceTypeSelector,\n  sourceStates: state => state.sources,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowImportPanel: showImportSourcePanel,\n  onHideImportPanel: hideImportSourcePanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistImport);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport NoResultsIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nconst NoResults = ({ t }) => (\n  <div className=\"SearchResults-none\">\n    <NoResultsIcon className=\"SearchResults-noneIcon\" />\n    <Typography className=\"SearchResults-noneHeader\">{t('playlists.search.noResults')}</Typography>\n    <Typography>{t('playlists.search.noResultsSub')}</Typography>\n  </div>\n);\n\nNoResults.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(NoResults);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingSearchResults = () => (\n  <div className=\"PlaylistPanel-loading\">\n    <CircularProgress size=\"100%\" />\n  </div>\n);\n\nexport default LoadingSearchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst makeActions = onOpenAddMediaMenu => (media, selection) => (\n  <React.Fragment>\n    <AddToPlaylistAction\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />\n  </React.Fragment>\n);\n\nconst SearchResultsList = ({\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => (\n  <MediaList\n    className=\"PlaylistPanel-media\"\n    media={results}\n    onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n    makeActions={makeActions(onOpenAddMediaMenu)}\n  />\n);\n\nSearchResultsList.propTypes = {\n  results: PropTypes.array.isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsList;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport NoSearchResults from './NoSearchResults';\nimport LoadingSearchResults from './LoadingSearchResults';\nimport SearchResultsList from './SearchResultsList';\n\nconst enhance = translate();\n\nconst SearchResultsPanel = ({\n  t,\n  className,\n  query,\n  loadingState,\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = results.length > 0 ? (\n      <SearchResultsList\n        results={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        onOpenAddMediaMenu={onOpenAddMediaMenu}\n      />\n    ) : (\n      <NoSearchResults />\n    );\n  } else {\n    list = (\n      <LoadingSearchResults />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResultsPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default enhance(SearchResultsPanel);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\n\nimport {\n  searchQuerySelector,\n  searchResultsSelector,\n  searchLoadingStateSelector,\n} from '../selectors/searchSelectors';\nimport SearchResults from '../components/PlaylistManager/SearchResults';\n\nconst mapStateToProps = createStructuredSelector({\n  query: searchQuerySelector,\n  results: searchResultsSelector,\n  loadingState: searchLoadingStateSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass SearchBar extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { focused: false };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { onSubmit } = this.props;\n    if (e.key === 'Enter') {\n      onSubmit(this.input.value);\n    }\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t, children } = this.props;\n    const { focused } = this.state;\n    return (\n      <div className={cx('SearchBar', focused ? 'is-focused' : '', this.props.className)}>\n        <div className=\"SearchBar-icon\">\n          <SearchIcon />\n        </div>\n        {children}\n        <div className=\"SearchBar-query\">\n          <input\n            ref={this.refInput}\n            className=\"SearchBar-input\"\n            type=\"text\"\n            placeholder={focused ? '' : t('playlists.search.action')}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SourcePickerElement = ({\n  className,\n  name,\n  source,\n  active,\n}) => (\n  <div\n    className={cx(\n      'SourcePickerElement',\n      `SourcePickerElement--${name}`,\n      active && 'SourcePickerElement--active',\n      className,\n    )}\n    style={{ backgroundImage: `url(${source.logo})` }}\n  />\n);\n\nSourcePickerElement.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  source: PropTypes.shape({\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n  active: PropTypes.bool,\n};\n\nexport default SourcePickerElement;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowIcon from '@material-ui/icons/ArrowDropDown';\nimport injectMediaSources from '../../../utils/injectMediaSources';\nimport SourcePickerElement from './SourcePickerElement';\n\nconst enhance = injectMediaSources();\n\nconst popoverPosition = {\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n  transformOrigin: { vertical: 'top', horizontal: 'left' },\n};\n\nclass SourcePicker extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    selected: PropTypes.string,\n    onChange: PropTypes.func,\n\n    getMediaSource: PropTypes.func.isRequired,\n    getAllMediaSources: PropTypes.func.isRequired,\n  };\n\n  state = { open: false };\n\n  createElement(sourceName) {\n    const { selected, getMediaSource } = this.props;\n    return (\n      <button\n        className=\"SourcePicker-item\"\n        key={sourceName}\n        onClick={() => this.handleChange(sourceName)}\n      >\n        <SourcePickerElement\n          name={sourceName}\n          source={getMediaSource(sourceName)}\n          active={selected === sourceName}\n        />\n      </button>\n    );\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      anchor: this.container,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange(sourceName) {\n    this.handleClose();\n    this.props.onChange(sourceName);\n  }\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  render() {\n    const {\n      className,\n      selected,\n      getMediaSource,\n      getAllMediaSources,\n    } = this.props;\n\n    const sourceNames = Object.keys(getAllMediaSources());\n    const sources = sourceNames\n      .filter(name => name !== selected)\n      .map(name => this.createElement(name));\n\n    return (\n      <div\n        className={cx('SourcePicker', className)}\n        ref={this.refContainer}\n      >\n        <button\n          className=\"SourcePicker-active\"\n          onClick={this.handleOpen}\n        >\n          <SourcePickerElement\n            name={selected}\n            source={getMediaSource(selected)}\n            active\n          />\n          <ArrowIcon className=\"SourcePicker-arrow\" />\n        </button>\n        <Popover\n          classes={{ paper: 'SourcePicker-list' }}\n          open={this.state.open}\n          anchorEl={this.state.anchor}\n          onClose={this.handleClose}\n          {...popoverPosition}\n        >\n          {sources}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SourcePicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseSearchBar from '../../SearchBar';\nimport SourcePicker from './SourcePicker';\n\nconst SearchBar = ({\n  className,\n  source,\n  onSubmit,\n  onSourceChange,\n}) => (\n  <BaseSearchBar className={className} onSubmit={onSubmit}>\n    <SourcePicker\n      className=\"SearchBar-source\"\n      selected={source}\n      onChange={onSourceChange}\n    />\n  </BaseSearchBar>\n);\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onSourceChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport SearchBar from '../components/PlaylistManager/Header/SearchBar';\nimport {\n  search,\n  setSource,\n} from '../actions/SearchActionCreators';\nimport { searchSourceTypeSelector } from '../selectors/searchSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  source: searchSourceTypeSelector,\n});\n\nconst mapDispatchToProps = {\n  onSubmit: search,\n  onSourceChange: setSource,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport OverlayHeader from '../../Overlay/Header';\nimport SearchBar from '../../../containers/MediaSearchBar';\n\nconst enhance = translate();\n\nconst PlaylistManagerHeader = ({\n  t,\n  className,\n  onCloseOverlay,\n}) => (\n  <OverlayHeader\n    className={cx('PlaylistHeader', className)}\n    title={t('playlists.title')}\n    onCloseOverlay={onCloseOverlay}\n  >\n    <SearchBar className=\"PlaylistHeader-search\" />\n  </OverlayHeader>\n);\n\nPlaylistManagerHeader.propTypes = {\n  className: PropTypes.string,\n  t: PropTypes.func.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistManagerHeader);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nconst EmptyPanel = ({ t, className }) => (\n  <div className={cx('PlaylistPanel', 'PlaylistPanel--empty', className)}>\n    {t('playlists.noPlaylists')}\n  </div>\n);\n\nEmptyPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default translate()(EmptyPanel);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayContent from '../Overlay/Content';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport PlaylistPanelEmpty from './Panel/Empty';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <PlaylistPanelEmpty />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <OverlayContent>\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </OverlayContent>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}