{"version":3,"sources":["webpack:///../node_modules/@material-ui/icons/es/ModeEdit.js","webpack:///./components/PlaylistManager/Panel/PlaylistEmpty.js","webpack:///../node_modules/lodash/toNumber.js","webpack:///../node_modules/lodash/now.js","webpack:///../node_modules/lodash/debounce.js","webpack:///./components/Dialogs/ConfirmDialog/index.js","webpack:///./actions/ImportActionCreators.js","webpack:///./actions/SearchActionCreators.js","webpack:///./components/PlaylistManager/Menu/Row.js","webpack:///./components/PlaylistManager/Menu/NewPlaylist.js","webpack:///../node_modules/@material-ui/icons/es/Search.js","webpack:///./components/PlaylistManager/Menu/SearchResultsRow.js","webpack:///../node_modules/@material-ui/icons/es/Input.js","webpack:///./components/PlaylistManager/Menu/PlaylistImportRow.js","webpack:///./components/PlaylistManager/Menu/index.js","webpack:///./containers/PlaylistManagerMenu.js","webpack:///../node_modules/@material-ui/icons/es/CheckBox.js","webpack:///../node_modules/@material-ui/icons/es/CheckBoxOutlineBlank.js","webpack:///./components/PlaylistManager/Panel/RenamePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Delete.js","webpack:///./components/PlaylistManager/Panel/DeletePlaylistButton.js","webpack:///../node_modules/@material-ui/icons/es/Shuffle.js","webpack:///./components/PlaylistManager/Panel/ShufflePlaylistButton.js","webpack:///./components/PlaylistManager/Panel/PlaylistFilter.js","webpack:///./components/PlaylistManager/Panel/Meta.js","webpack:///./components/PlaylistManager/Panel/PlaylistItemRow.js","webpack:///./components/MediaList/Actions/RemoveFromPlaylist.js","webpack:///./components/MediaList/Actions/EditMedia.js","webpack:///./components/MediaList/Actions/MoveToFirst.js","webpack:///./components/MediaList/Actions/MoveToLast.js","webpack:///./components/PlaylistManager/Panel/index.js","webpack:///./containers/PlaylistManagerPanel.js","webpack:///./components/PlaylistManager/Import/index.js","webpack:///./containers/PlaylistImportManager.js","webpack:///./components/PlaylistManager/SearchResults/NoSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/LoadingSearchResults.js","webpack:///./components/PlaylistManager/SearchResults/SearchResultsList.js","webpack:///./components/PlaylistManager/SearchResults/index.js","webpack:///./containers/SearchResultsPanel.js","webpack:///./components/SearchBar/index.js","webpack:///./components/PlaylistManager/Header/SourcePickerElement.js","webpack:///./components/PlaylistManager/Header/SourcePicker.js","webpack:///./components/PlaylistManager/Header/SearchBar.js","webpack:///./containers/MediaSearchBar.js","webpack:///./components/PlaylistManager/Header/index.js","webpack:///./components/PlaylistManager/NoPlaylists.js","webpack:///./components/PlaylistManager/index.js"],"names":["__webpack_exports__","Object","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","d","enhance","react_i18next__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_builtin_jsx__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_icons_PlaylistAdd__WEBPACK_IMPORTED_MODULE_5__","className","PlaylistEmpty","_ref","t","_ref2","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","propTypes","isObject","__webpack_require__","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","module","exports","value","other","valueOf","replace","isBinary","test","slice","root","Date","now","toNumber","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","cancel","clearTimeout","flush","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7__","size","ConfirmDialog","state","busy","handleSubmit","event","preventDefault","handleConfirm","promise","_this","props","onConfirm","then","setState","onDone","handleClose","onCancel","render","_this$props","children","cancelLabel","confirmLabel","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_5__","classnames__WEBPACK_IMPORTED_MODULE_2___default","onClose","open","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_6__","_Form__WEBPACK_IMPORTED_MODULE_8__","onSubmit","_Form_Group__WEBPACK_IMPORTED_MODULE_9__","_Form_Button__WEBPACK_IMPORTED_MODULE_10__","disabled","onClick","react__WEBPACK_IMPORTED_MODULE_3___default","Component","defaultProps","ImportActionCreators_showImportPanel","type","ActionTypes","showImportSourcePanel","sourceType","payload","hideImportSourcePanel","SearchActionCreators_showSearchResults","deleteSearch","lib","DDItemTypes","drop","monitor","onAddToPlaylist","playlist","getItem","media","connect","connectDropTarget","dropTarget","isOver","itemClasses","selected","jsx_default","CircularProgress","Check","Row_PlaylistRow","icon","activeClass","active","droppableClass","creating","Row_ref2","MenuItem","classnames_default","classes","name","react_default","Row","NewPlaylist_enhance","dist_es","Add","nativeColor","NewPlaylist_NewPlaylist","handleOpen","closeDialog","playlistName","Promise","resolve","onCreatePlaylist","bind","assertThisInitialized_default","Fragment","NewPlaylist_ref","PromptDialog","title","NewPlaylist_ref2","submitLabel","Menu_NewPlaylist","Search","createSvgIcon","Close","SearchResultsRow_SearchResultsRow","query","ListItem","role","SearchResultsRow_ref2","IconButton","SearchResultsRow_ref3","Menu_SearchResultsRow","Input","PlaylistImportRow_enhance","PlaylistImportRow_PlaylistImportRow","importing","PlaylistImportRow_ref2","PlaylistImportRow_ref3","Menu_PlaylistImportRow","Menu_PlaylistMenu","playlists","searchQuery","showSearchResults","searchResults","onSelectPlaylist","onSelectSearchResults","onCloseSearchResults","showImportPanel","onShowImportPanel","searchIsSelected","importIsSelected","isSelectingPlaylist","MenuList","disablePadding","map","pl","_id","Menu","mapStateToProps","reselect_es","playlistSelectors","searchSelectors","importSelectors","PlaylistManagerMenu","es","dispatch","redux","PlaylistActionCreators","CheckBox","CheckBoxOutlineBlank","RenamePlaylistButton_enhance","ModeEdit","RenamePlaylistButton_RenamePlaylistButton","renaming","onRename","Tooltip","placement","RenamePlaylistButton_ref","RenamePlaylistButton_ref2","initialName","Panel_RenamePlaylistButton","Delete","DeletePlaylistButton_enhance","DeletePlaylistButton_DeletePlaylistButton","deleting","onNotDeletable","onDelete","DeletePlaylistButton_ref","Group","Panel_DeletePlaylistButton","Shuffle","ShufflePlaylistButton_enhance","compose_default","withState_default","withHandlers_default","setLoading","onShuffle","ShufflePlaylistButton_ShuffleButton","isLoading","ShufflePlaylistButton_ref2","ShufflePlaylistButton_ref3","ShufflePlaylistButton","PlaylistFilter_enhance","PlaylistFilter_PlaylistFilter","onFilter","debounce_default","handleClick","isOpen","clearFilter","input","focus","handleChange","target","refInput","ref","onChange","Panel_PlaylistFilter","Meta_enhance","ID","Meta_PlaylistMeta","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","htmlFor","Checkbox","id","checked","Meta_ref2","checkedIcon","Meta_ref3","Meta","mediaTarget","component","thisID","some","playlistItem","insertBefore","isDraggingNearTopOfRow","onMoveMedia","before","after","hover","insertingAbove","PlaylistItemRow_PlaylistItemRow","objectWithoutProperties_default","dropIndicator","PlaylistItemRow_ref","MediaList_Row","Panel_PlaylistItemRow","RemoveFromPlaylist_RemoveFromPlaylist","onRemove","Action","extends_default","onAction","RemoveFromPlaylist_ref2","Actions_RemoveFromPlaylist","EditMedia_EditMedia","onEdit","EditMedia_ref2","Actions_EditMedia","KeyboardArrowUp","MoveToFirst_MoveToFirst","onFirst","MoveToFirst_ref2","Actions_MoveToFirst","KeyboardArrowDown","MoveToLast_MoveToLast","onLast","MoveToLast_ref2","Actions_MoveToLast","Panel_PlaylistPanel","list","isFiltered","onLoadPlaylistPage","onFilterPlaylistItems","onOpenPreviewMediaDialog","loading","Panel_ref2","length","Panel_ref3","MediaList","rowComponent","rowProps","makeActions","onOpenAddMediaMenu","onMoveToFirst","onMoveToLast","onEditMedia","onRemoveFromPlaylist","selection","index","AddToPlaylist","onAdd","position","Panel_makeActions","onRequestPage","PlaylistManager_Panel","PlaylistManagerPanel_mapStateToProps","selectionOrOne","isSelected","get","PlaylistManagerPanel_onOpenAddMediaMenu","PlaylistManagerPanel","DialogActionCreators","at","PlaylistManagerPanel_onMoveToLast","opts","PlaylistManagerPanel_onMoveMedia","PlaylistManagerPanel_onEditMedia","PlaylistManagerPanel_onRemoveFromPlaylist","page","PlaylistManagerPanel_onLoadPlaylistPage","Import_PlaylistImport","getAllMediaSources","selectedSourceType","sourceStates","onHideImportPanel","Panel","getMediaSource","ImportPanel","onClosePanel","forms","sources","keys","forEach","ImportForm","push","Import","injectMediaSources","PlaylistImportManager_mapStateToProps","PlaylistImportManager","NoSearchResults_enhance","NoSearchResults_NoResults","NoSearchResults_ref2","Typography","NoSearchResults","SearchResults_LoadingSearchResults","LoadingSearchResults_ref","SearchResultsList_SearchResultsList","results","SearchResultsList_makeActions","SearchResults_SearchResultsList","SearchResults_enhance","SearchResults_SearchResultsPanel","loadingState","LoadingStates","SearchResults_ref2","SearchResults_ref3","SearchResults","SearchResultsPanel_mapStateToProps","SearchResultsPanel_onOpenAddMediaMenu","SearchResultsPanel_selectionOrOne","containers_SearchResultsPanel","SearchBar_enhance","SearchBar_SearchBar","focused","handleFocus","handleBlur","handleKeyDown","e","key","SearchBar_ref","placeholder","onFocus","onBlur","onKeyDown","components_SearchBar","SourcePickerElement_SourcePickerElement","source","style","backgroundImage","logo","Header_SourcePickerElement","SourcePicker_enhance","popoverPosition","anchorOrigin","vertical","horizontal","transformOrigin","ArrowDropDown","SourcePicker_SourcePicker","anchor","container","refContainer","sourceName","_this2","_this3","_this$props2","filter","SourcePicker_ref","Popover","paper","anchorEl","Header_SourcePicker","Header_SearchBar_SearchBar","onSourceChange","Header_SearchBar","MediaSearchBar_mapStateToProps","MediaSearchBar_mapDispatchToProps","RequestActionCreators","qs","onStart","searchStart","onComplete","onError","error","MediaSearchBar","Header_enhance","Header_PlaylistManagerHeader","onCloseOverlay","Header","Header_ref2","PlaylistManager_Header","NoPlaylists_enhance","NoPlaylists_NoPlaylists","PlaylistManager_NoPlaylists","PlaylistManager_PlaylistManager","panel","selectedPlaylist","PlaylistManager_ref2","PlaylistManager_ref3","Content","_ref5"],"mappings":"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","file":"playlists_2b91382.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n})), 'ModeEdit');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport EmptyIcon from '@material-ui/icons/PlaylistAdd';\n\nconst enhance = translate();\n\nconst PlaylistEmpty = ({ t }) => (\n  <div className=\"PlaylistPanel-empty\">\n    <EmptyIcon className=\"PlaylistPanel-emptyIcon\" />\n    <Typography className=\"PlaylistPanel-emptyHeader\">{t('playlists.playlist.empty')}</Typography>\n    <Typography>{t('playlists.playlist.emptySub')}</Typography>\n  </div>\n);\n\nPlaylistEmpty.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistEmpty);\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\n\nexport default class ConfirmDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    confirmLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    cancelLabel: 'Cancel',\n    confirmLabel: 'OK',\n  };\n\n  state = {\n    busy: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleConfirm = (event) => {\n    event.preventDefault();\n    const promise = this.props.onConfirm();\n    if (promise && promise.then) {\n      this.setState({ busy: true });\n      const onDone = () => {\n        this.setState({ busy: false });\n      };\n      promise.then(onDone, onDone);\n    }\n  };\n\n  handleClose = (event) => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.props.onCancel();\n  };\n\n  render() {\n    const {\n      children,\n      cancelLabel,\n      confirmLabel,\n      className,\n    } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Dialog\n        className={cx('Dialog', className)}\n        onClose={this.handleClose}\n        open\n      >\n        <DialogContent className=\"Dialog-body\">\n          <Form onSubmit={this.handleSubmit}>\n            {children}\n            <FormGroup className=\"ConfirmDialog-buttons FormGroup--noSpacing\">\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleClose}>\n                  {cancelLabel}\n                </Button>\n              </div>\n              <div className=\"ConfirmDialog-spacer\" />\n              <div className=\"ConfirmDialog-button\">\n                <Button disabled={busy} onClick={this.handleConfirm}>\n                  {busy ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div> : confirmLabel}\n                </Button>\n              </div>\n            </FormGroup>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import {\n  SHOW_IMPORT_PANEL,\n  HIDE_IMPORT_PANEL,\n  SHOW_IMPORT_SOURCE_PANEL,\n  HIDE_IMPORT_SOURCE_PANEL,\n} from '../constants/ActionTypes';\n\nexport function showImportPanel() {\n  return {\n    type: SHOW_IMPORT_PANEL,\n  };\n}\n\nexport function hideImportPanel() {\n  return {\n    type: HIDE_IMPORT_PANEL,\n  };\n}\n\nexport function showImportSourcePanel(sourceType) {\n  return {\n    type: SHOW_IMPORT_SOURCE_PANEL,\n    payload: { sourceType },\n  };\n}\n\nexport function hideImportSourcePanel() {\n  return { type: HIDE_IMPORT_SOURCE_PANEL };\n}\n","import { get } from './RequestActionCreators';\nimport {\n  SET_SEARCH_SOURCE,\n  SHOW_SEARCH_RESULTS,\n  SEARCH_START,\n  SEARCH_COMPLETE,\n  SEARCH_DELETE,\n} from '../constants/ActionTypes';\n\nexport function setSource(source) {\n  return {\n    type: SET_SEARCH_SOURCE,\n    payload: { source },\n  };\n}\n\nexport function showSearchResults() {\n  return { type: SHOW_SEARCH_RESULTS };\n}\n\nfunction searchStart(query) {\n  return {\n    type: SEARCH_START,\n    payload: { query },\n  };\n}\n\nexport function search(query) {\n  return get('/search', {\n    qs: { query },\n    onStart: () => (dispatch) => {\n      dispatch(searchStart(query));\n      dispatch(showSearchResults());\n    },\n    onComplete: results => ({\n      type: SEARCH_COMPLETE,\n      payload: { results },\n    }),\n    onError: error => ({\n      type: SEARCH_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function deleteSearch() {\n  return {\n    type: SEARCH_DELETE,\n  };\n}\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nconst itemClasses = {\n  root: 'PlaylistMenuRow',\n  selected: 'is-selected',\n};\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <div>\n        <MenuItem\n          selected={selected}\n          className={cx(activeClass, droppableClass)}\n          classes={itemClasses}\n          onClick={onClick}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </MenuItem>\n      </div>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CreatePlaylistIcon from '@material-ui/icons/Add';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass NewPlaylist extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    t: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    creating: false,\n  };\n\n  closeDialog() {\n    this.setState({ creating: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ creating: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = playlistName =>\n    Promise.resolve(this.props.onCreatePlaylist(playlistName))\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t, className } = this.props;\n    return (\n      <React.Fragment>\n        <MenuItem\n          className={cx('PlaylistMenuRow', 'PlaylistMenuRow--create', className)}\n          onClick={this.handleOpen}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            <div className=\"PlaylistMenuRow-active-icon\">\n              <CreatePlaylistIcon />\n            </div>\n            {t('playlists.new')}\n          </div>\n        </MenuItem>\n        {this.state.creating && (\n          <PromptDialog\n            title={t('dialogs.createPlaylist.nameInputTitle')}\n            icon={<CreatePlaylistIcon nativeColor=\"#777\" />}\n            submitLabel={t('dialogs.createPlaylist.action')}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(NewPlaylist);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n})), 'Search');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst SearchResultsRow = ({\n  className,\n  query,\n  onClick,\n  onClose,\n}) => (\n  <ListItem role=\"menuitem\" className={cx('PlaylistMenuRow', 'PlaylistMenuRow--search', className)}>\n    <button\n      className=\"PlaylistMenuRow-title\"\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <SearchIcon />\n      </div>\n      &quot;{query}&quot;\n    </button>\n    <div className=\"PlaylistMenuRow-count\">\n      <IconButton className=\"PlaylistMenuRow-closeButton\" onClick={onClose}>\n        <CloseIcon nativeColor=\"#777\" />\n      </IconButton>\n    </div>\n  </ListItem>\n);\n\nSearchResultsRow.propTypes = {\n  className: PropTypes.string,\n  query: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsRow;\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n})), 'Input');","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ImportIcon from '@material-ui/icons/Input';\n\nconst enhance = translate();\n\nconst PlaylistImportRow = ({\n  t,\n  className,\n  importing,\n  onClick,\n}) => {\n  let icon;\n  if (importing) {\n    icon = (\n      <div className=\"PlaylistMenuRow-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    icon = (\n      <div className=\"PlaylistMenuRow-active-icon\">\n        <ImportIcon />\n      </div>\n    );\n  }\n  return (\n    <MenuItem\n      className={cx('PlaylistMenuRow', 'PlaylistMenuRow--import', className)}\n      onClick={onClick}\n    >\n      <div className=\"PlaylistMenuRow-title\">\n        {icon}\n        {t('playlists.import.title')}\n      </div>\n    </MenuItem>\n  );\n};\n\nPlaylistImportRow.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  importing: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistImportRow);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@material-ui/core/MenuList';\nimport PlaylistRow from './Row';\nimport PlaylistCreateRow from './NewPlaylist';\nimport SearchResultsRow from './SearchResultsRow';\nimport PlaylistImportRow from './PlaylistImportRow';\n\nconst PlaylistMenu = ({\n  className,\n  playlists,\n  selected,\n  searchQuery,\n  showSearchResults,\n  searchResults,\n  onCreatePlaylist,\n  onSelectPlaylist,\n  onSelectSearchResults,\n  onCloseSearchResults,\n  onAddToPlaylist,\n  showImportPanel,\n  onShowImportPanel,\n}) => {\n  const searchIsSelected = showSearchResults ? 'is-selected' : '';\n  const importIsSelected = showImportPanel ? 'is-selected' : '';\n  const isSelectingPlaylist = selected && !showSearchResults && !showImportPanel;\n  return (\n    <MenuList className={cx('PlaylistMenu', className)} disablePadding>\n      <PlaylistCreateRow\n        className=\"PlaylistMenu-row\"\n        onCreatePlaylist={onCreatePlaylist}\n      />\n      {searchQuery && (\n        <SearchResultsRow\n          className={cx('PlaylistMenu-row', searchIsSelected)}\n          query={searchQuery}\n          size={searchResults}\n          onClick={onSelectSearchResults}\n          onClose={onCloseSearchResults}\n        />\n      )}\n      {playlists.map(pl => (\n        <PlaylistRow\n          key={pl._id}\n          className=\"PlaylistMenu-row\"\n          playlist={pl}\n          selected={isSelectingPlaylist && selected._id === pl._id}\n          onClick={() => onSelectPlaylist(pl._id)}\n          onAddToPlaylist={onAddToPlaylist}\n        />\n      ))}\n      <PlaylistImportRow\n        className={cx('PlaylistMenu-row', importIsSelected)}\n        onClick={onShowImportPanel}\n      />\n    </MenuList>\n  );\n};\n\nPlaylistMenu.propTypes = {\n  className: PropTypes.string,\n  playlists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selected: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.string,\n  searchResults: PropTypes.number,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onSelectPlaylist: PropTypes.func.isRequired,\n  onSelectSearchResults: PropTypes.func.isRequired,\n  onCloseSearchResults: PropTypes.func.isRequired,\n  onAddToPlaylist: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n};\n\nexport default PlaylistMenu;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  addMedia as addToPlaylist,\n  createPlaylist,\n  selectPlaylist,\n} from '../actions/PlaylistActionCreators';\nimport { showImportPanel } from '../actions/ImportActionCreators';\nimport {\n  showSearchResults,\n  deleteSearch,\n} from '../actions/SearchActionCreators';\n\nimport {\n  playlistsSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport {\n  searchQuerySelector,\n  showSearchResultsSelector,\n  searchResultsCountSelector,\n} from '../selectors/searchSelectors';\nimport { showImportPanelSelector } from '../selectors/importSelectors';\nimport PlaylistsMenu from '../components/PlaylistManager/Menu';\n\nconst mapStateToProps = createStructuredSelector({\n  playlists: playlistsSelector,\n  selected: selectedPlaylistSelector,\n  searchQuery: searchQuerySelector,\n  showSearchResults: showSearchResultsSelector,\n  searchResults: searchResultsCountSelector,\n  showImportPanel: showImportPanelSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onAddToPlaylist: addToPlaylist,\n  onCreatePlaylist: createPlaylist,\n  onSelectPlaylist: selectPlaylist,\n  onSelectSearchResults: showSearchResults,\n  onCloseSearchResults: deleteSearch,\n  onShowImportPanel: showImportPanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistsMenu);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n})), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n})), 'CheckBoxOutlineBlank');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string,\n  };\n\n  state = {\n    renaming: false,\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = name =>\n    this.props.onRename(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={t('playlists.rename')} placement=\"top\">\n          <IconButton className=\"PlaylistMeta-iconButton\" onClick={this.handleOpen}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon nativeColor=\"#777\" />}\n            value={this.props.initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(RenamePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n})), 'Delete');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport ConfirmDialog from '../../Dialogs/ConfirmDialog';\nimport FormGroup from '../../Form/Group';\n\nconst enhance = translate();\n\nclass DeletePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onNotDeletable: PropTypes.func.isRequired,\n    active: PropTypes.bool,\n  };\n\n  state = {\n    deleting: false,\n  };\n\n  closeDialog() {\n    this.setState({ deleting: false });\n  }\n\n  handleOpen = () => {\n    if (this.props.active) {\n      this.props.onNotDeletable();\n    } else {\n      this.setState({ deleting: true });\n    }\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleConfirm = name =>\n    this.props.onDelete(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t, active } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={active ? t('playlists.deleteActive') : t('playlists.delete')} placement=\"top\">\n          <IconButton\n            disabled={active}\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleOpen}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.deleting && (\n          <ConfirmDialog\n            title={t('dialogs.deletePlaylist.title')}\n            confirmLabel={t('dialogs.deletePlaylist.action')}\n            onConfirm={this.handleConfirm}\n            onCancel={this.handleClose}\n          >\n            <FormGroup>{t('dialogs.deletePlaylist.confirm')}</FormGroup>\n          </ConfirmDialog>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(DeletePlaylistButton);\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"\n})), 'Shuffle');","import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport FilterIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    this.props.onFilter(value);\n  }, 200);\n\n  clearFilter() {\n    if (this.state.value !== '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleClick = () => {\n    const isOpen = !this.state.open;\n\n    if (!isOpen) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      open: isOpen,\n      value: '',\n    }, () => {\n      if (isOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.onFilter(event.target.value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t } = this.props;\n    const isOpen = this.state.open;\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ActiveIcon from '@material-ui/icons/CheckBox';\nimport ActivateIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst enhance = translate();\n\nconst ID = 'playlist-meta-active';\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active && 'PlaylistMeta--active')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <label htmlFor={ID} className={cx('PlaylistMeta-active', active && 'is-active')}>\n      <Checkbox\n        id={ID}\n        checked={active}\n        disabled={active}\n        onChange={active ? null : onActivatePlaylist}\n        icon={<ActivateIcon />}\n        checkedIcon={<ActiveIcon nativeColor=\"#fff\" />}\n      />\n      <span>\n        {active ? t('playlists.active') : t('playlists.activate')}\n      </span>\n    </label>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistMeta);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above 👆\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Action from './Action';\n\nconst RemoveFromPlaylist = ({ onRemove, ...props }) => (\n  <Action {...props} onAction={onRemove}>\n    <DeleteIcon />\n  </Action>\n);\n\nRemoveFromPlaylist.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default RemoveFromPlaylist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/ModeEdit';\nimport Action from './Action';\n\nconst EditMedia = ({ onEdit, ...props }) => (\n  <Action {...props} onAction={onEdit}>\n    <EditIcon />\n  </Action>\n);\n\nEditMedia.propTypes = {\n  onEdit: PropTypes.func.isRequired,\n};\n\nexport default EditMedia;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToFirstIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Action from './Action';\n\nconst MoveToFirst = ({ onFirst, ...props }) => (\n  <Action {...props} onAction={onFirst}>\n    <MoveToFirstIcon />\n  </Action>\n);\n\nMoveToFirst.propTypes = {\n  onFirst: PropTypes.func.isRequired,\n};\n\nexport default MoveToFirst;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MoveToLastIcon from '@material-ui/icons/KeyboardArrowDown';\nimport Action from './Action';\n\nconst MoveToLast = ({ onLast, ...props }) => (\n  <Action {...props} onAction={onLast}>\n    <MoveToLastIcon />\n  </Action>\n);\n\nMoveToLast.propTypes = {\n  onLast: PropTypes.func.isRequired,\n};\n\nexport default MoveToLast;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MediaList from '../../MediaList';\nimport PlaylistMeta from './Meta';\nimport PlaylistEmpty from './PlaylistEmpty';\nimport PlainItemRow from '../../MediaList/Row';\nimport PlaylistItemRow from './PlaylistItemRow';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\nimport RemoveFromPlaylistAction from '../../MediaList/Actions/RemoveFromPlaylist';\nimport EditMediaAction from '../../MediaList/Actions/EditMedia';\nimport MoveToFirstAction from '../../MediaList/Actions/MoveToFirst';\nimport MoveToLastAction from '../../MediaList/Actions/MoveToLast';\n\nconst makeActions = ({\n  onOpenAddMediaMenu,\n  onMoveToFirst,\n  onMoveToLast,\n  onEditMedia,\n  onRemoveFromPlaylist,\n  isFiltered,\n}) =>\n  (media, selection, index) => [\n    <AddToPlaylistAction\n      key=\"add\"\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />,\n    // Don't show the \"move to first\" action on the first item in the playlist.\n    // If the playlist is filtered we don't know if the first item to show is\n    // also the first in the playlist, so just show it always in that case.\n    (index > 0 || isFiltered) && (\n      <MoveToFirstAction\n        key=\"first\"\n        onFirst={() => onMoveToFirst(media, selection)}\n      />\n    ),\n    (index === 0 && !isFiltered) && (\n      <MoveToLastAction\n        key=\"last\"\n        onLast={() => onMoveToLast(media, selection)}\n      />\n    ),\n    <EditMediaAction\n      key=\"edit\"\n      onEdit={() => onEditMedia(media)}\n    />,\n    <RemoveFromPlaylistAction\n      key=\"remove\"\n      onRemove={() => onRemoveFromPlaylist(media, selection)}\n    />,\n  ];\n\nconst PlaylistPanel = (props) => {\n  const {\n    className,\n    playlist,\n    media,\n    loading,\n    isFiltered,\n    onShufflePlaylist,\n    onActivatePlaylist,\n    onRenamePlaylist,\n    onDeletePlaylist,\n    onNotDeletable,\n    onLoadPlaylistPage,\n    onFilterPlaylistItems,\n    onMoveMedia,\n    onOpenPreviewMediaDialog,\n  } = props;\n\n  let list;\n  if (loading) {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else if (media.length === 0) {\n    list = <PlaylistEmpty />;\n  } else {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        size={media.length}\n        media={media}\n        rowComponent={isFiltered ? PlainItemRow : PlaylistItemRow}\n        rowProps={{ onMoveMedia }}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={makeActions(props)}\n        onRequestPage={onLoadPlaylistPage}\n      />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', className)}>\n      <PlaylistMeta\n        className=\"PlaylistPanel-meta\"\n        id={playlist._id}\n        name={playlist.name}\n        active={playlist.active}\n        onShufflePlaylist={onShufflePlaylist}\n        onActivatePlaylist={onActivatePlaylist}\n        onRenamePlaylist={onRenamePlaylist}\n        onDeletePlaylist={onDeletePlaylist}\n        onNotDeletable={onNotDeletable}\n        onFilter={onFilterPlaylistItems}\n      />\n      {list}\n    </div>\n  );\n};\n\nPlaylistPanel.propTypes = {\n  className: PropTypes.string,\n  playlist: PropTypes.object.isRequired,\n  media: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onLoadPlaylistPage: PropTypes.func.isRequired,\n  onFilterPlaylistItems: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onMoveMedia: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default PlaylistPanel;\n","import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport {\n  selectedPlaylistSelector,\n  filteredSelectedPlaylistItemsSelector,\n  isSelectedPlaylistLoadingSelector,\n  isFilteredSelector,\n} from '../selectors/playlistSelectors';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport {\n  addMediaMenu,\n  editMedia,\n  moveMedia,\n  removeMedia,\n  filterPlaylistItems,\n  renamePlaylist,\n  deletePlaylist,\n  cannotDeleteActivePlaylist,\n  shufflePlaylist,\n  activatePlaylist,\n  loadPlaylist,\n  loadFilteredPlaylistItems,\n} from '../actions/PlaylistActionCreators';\n\nimport PlaylistPanel from '../components/PlaylistManager/Panel';\n\nconst mapStateToProps = createStructuredSelector({\n  playlist: selectedPlaylistSelector,\n  media: filteredSelectedPlaylistItemsSelector,\n  loading: isSelectedPlaylistLoadingSelector,\n  isFiltered: isFilteredSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\nconst onRemoveFromPlaylist = playlist => (media, selection) =>\n  removeMedia(playlist, selectionOrOne(media, selection));\nconst onMoveMedia = playlist => (media, opts) =>\n  moveMedia(playlist, media, opts);\nconst onMoveToFirst = playlist => (media, selection) =>\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'start' });\nconst onMoveToLast = playlist => (media, selection) =>\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'end' });\nconst onEditMedia = playlist => media =>\n  editMedia(playlist, media);\nconst onLoadPlaylistPage = ({ isFiltered, playlist }) => page => (\n  isFiltered ? loadFilteredPlaylistItems(playlist._id, page) :\n    loadPlaylist(playlist._id, page)\n);\n\n// Most of the playlist-related action creators need to know which playlist to\n// use, i.e. need to have a reference to the selected playlist. The selected\n// playlist is picked out in `mapStateToProps`, but we can't access its result\n// in `mapDispatchToProps` yet. Instead, `mapDispatchToProps` passes the\n// `dispatch` function to the `mergeProps` function below, and then that\n// configures the action creators.\n// TODO Maybe it's better to have versions of these action creators that work on\n// the selected playlist by default? using redux-thunk.\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mergeProps = (state, { dispatch }, props) => ({\n  ...props,\n  ...state,\n  ...bindActionCreators({\n    onShufflePlaylist: shufflePlaylist.bind(null, state.playlist._id),\n    onActivatePlaylist: activatePlaylist.bind(null, state.playlist._id),\n    onRenamePlaylist: renamePlaylist.bind(null, state.playlist._id),\n    onDeletePlaylist: deletePlaylist.bind(null, state.playlist._id),\n    onNotDeletable: cannotDeleteActivePlaylist,\n\n    onOpenAddMediaMenu,\n    onOpenPreviewMediaDialog: openPreviewMediaDialog,\n    onMoveToFirst: onMoveToFirst(state.playlist._id),\n    onMoveToLast: onMoveToLast(state.playlist._id),\n    onMoveMedia: onMoveMedia(state.playlist._id),\n    onEditMedia: onEditMedia(state.playlist._id),\n    onRemoveFromPlaylist: onRemoveFromPlaylist(state.playlist._id),\n    onLoadPlaylistPage: onLoadPlaylistPage(state),\n    onFilterPlaylistItems: filterPlaylistItems.bind(null, state.playlist._id),\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(PlaylistPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport injectMediaSources from '../../../utils/injectMediaSources';\n\nconst PlaylistImport = ({\n  getMediaSource,\n  getAllMediaSources,\n  selectedSourceType,\n  sourceStates,\n  onShowImportPanel,\n  onHideImportPanel,\n}) => {\n  if (selectedSourceType) {\n    const Panel = getMediaSource(selectedSourceType).ImportPanel;\n    const state = sourceStates[selectedSourceType];\n    return (\n      <Panel\n        onClosePanel={onHideImportPanel}\n        {...state}\n      />\n    );\n  }\n\n  const forms = [];\n  const sources = getAllMediaSources();\n  Object.keys(sources).forEach((sourceType) => {\n    const { ImportForm } = sources[sourceType];\n    if (ImportForm) {\n      forms.push((\n        <ImportForm\n          key={sourceType}\n          onShowImportPanel={() => onShowImportPanel(sourceType)}\n          onHideImportPanel={onHideImportPanel}\n        />\n      ));\n    }\n  });\n\n  return (\n    <div className=\"PlaylistImport\">\n      {forms}\n    </div>\n  );\n};\n\nPlaylistImport.propTypes = {\n  selectedSourceType: PropTypes.string,\n  sourceStates: PropTypes.object,\n\n  getMediaSource: PropTypes.func.isRequired,\n  getAllMediaSources: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n  onHideImportPanel: PropTypes.func.isRequired,\n};\n\nexport default injectMediaSources()(PlaylistImport);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport {\n  showImportSourcePanel,\n  hideImportSourcePanel,\n} from '../actions/ImportActionCreators';\nimport { selectedSourceTypeSelector } from '../selectors/importSelectors';\nimport PlaylistImport from '../components/PlaylistManager/Import';\n\nconst mapStateToProps = createStructuredSelector({\n  selectedSourceType: selectedSourceTypeSelector,\n  sourceStates: state => state.sources,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowImportPanel: showImportSourcePanel,\n  onHideImportPanel: hideImportSourcePanel,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistImport);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Typography from '@material-ui/core/Typography';\nimport NoResultsIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nconst NoResults = ({ t }) => (\n  <div className=\"SearchResults-none\">\n    <NoResultsIcon className=\"SearchResults-noneIcon\" />\n    <Typography className=\"SearchResults-noneHeader\">{t('playlists.search.noResults')}</Typography>\n    <Typography>{t('playlists.search.noResultsSub')}</Typography>\n  </div>\n);\n\nNoResults.propTypes = {\n  t: PropTypes.func.isRequired,\n};\n\nexport default enhance(NoResults);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst LoadingSearchResults = () => (\n  <div className=\"PlaylistPanel-loading\">\n    <CircularProgress size=\"100%\" />\n  </div>\n);\n\nexport default LoadingSearchResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst makeActions = onOpenAddMediaMenu => (media, selection) => (\n  <React.Fragment>\n    <AddToPlaylistAction\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />\n  </React.Fragment>\n);\n\nconst SearchResultsList = ({\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => (\n  <MediaList\n    className=\"PlaylistPanel-media\"\n    media={results}\n    onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n    makeActions={makeActions(onOpenAddMediaMenu)}\n  />\n);\n\nSearchResultsList.propTypes = {\n  results: PropTypes.array.isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default SearchResultsList;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport NoSearchResults from './NoSearchResults';\nimport LoadingSearchResults from './LoadingSearchResults';\nimport SearchResultsList from './SearchResultsList';\n\nconst enhance = translate();\n\nconst SearchResultsPanel = ({\n  t,\n  className,\n  query,\n  loadingState,\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = results.length > 0 ? (\n      <SearchResultsList\n        results={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        onOpenAddMediaMenu={onOpenAddMediaMenu}\n      />\n    ) : (\n      <NoSearchResults />\n    );\n  } else {\n    list = (\n      <LoadingSearchResults />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResultsPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default enhance(SearchResultsPanel);\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\n\nimport {\n  searchQuerySelector,\n  searchResultsSelector,\n  searchLoadingStateSelector,\n} from '../selectors/searchSelectors';\nimport SearchResults from '../components/PlaylistManager/SearchResults';\n\nconst mapStateToProps = createStructuredSelector({\n  query: searchQuerySelector,\n  results: searchResultsSelector,\n  loadingState: searchLoadingStateSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass SearchBar extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { focused: false };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { onSubmit } = this.props;\n    if (e.key === 'Enter') {\n      onSubmit(this.input.value);\n    }\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t, children } = this.props;\n    const { focused } = this.state;\n    return (\n      <div className={cx('SearchBar', focused ? 'is-focused' : '', this.props.className)}>\n        <div className=\"SearchBar-icon\">\n          <SearchIcon />\n        </div>\n        {children}\n        <div className=\"SearchBar-query\">\n          <input\n            ref={this.refInput}\n            className=\"SearchBar-input\"\n            type=\"text\"\n            placeholder={focused ? '' : t('playlists.search.action')}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SourcePickerElement = ({\n  className,\n  name,\n  source,\n  active,\n}) => (\n  <div\n    className={cx(\n      'SourcePickerElement',\n      `SourcePickerElement--${name}`,\n      active && 'SourcePickerElement--active',\n      className,\n    )}\n    style={{ backgroundImage: `url(${source.logo})` }}\n  />\n);\n\nSourcePickerElement.propTypes = {\n  className: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  source: PropTypes.shape({\n    logo: PropTypes.string.isRequired,\n  }).isRequired,\n  active: PropTypes.bool,\n};\n\nexport default SourcePickerElement;\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowIcon from '@material-ui/icons/ArrowDropDown';\nimport injectMediaSources from '../../../utils/injectMediaSources';\nimport SourcePickerElement from './SourcePickerElement';\n\nconst enhance = injectMediaSources();\n\nconst popoverPosition = {\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n  transformOrigin: { vertical: 'top', horizontal: 'left' },\n};\n\nclass SourcePicker extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    selected: PropTypes.string,\n    onChange: PropTypes.func,\n\n    getMediaSource: PropTypes.func.isRequired,\n    getAllMediaSources: PropTypes.func.isRequired,\n  };\n\n  state = { open: false };\n\n  createElement(sourceName) {\n    const { selected, getMediaSource } = this.props;\n    return (\n      <button\n        className=\"SourcePicker-item\"\n        key={sourceName}\n        onClick={() => this.handleChange(sourceName)}\n      >\n        <SourcePickerElement\n          name={sourceName}\n          source={getMediaSource(sourceName)}\n          active={selected === sourceName}\n        />\n      </button>\n    );\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      anchor: this.container,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange(sourceName) {\n    this.handleClose();\n    this.props.onChange(sourceName);\n  }\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  render() {\n    const {\n      className,\n      selected,\n      getMediaSource,\n      getAllMediaSources,\n    } = this.props;\n\n    const sourceNames = Object.keys(getAllMediaSources());\n    const sources = sourceNames\n      .filter(name => name !== selected)\n      .map(name => this.createElement(name));\n\n    return (\n      <div\n        className={cx('SourcePicker', className)}\n        ref={this.refContainer}\n      >\n        <button\n          className=\"SourcePicker-active\"\n          onClick={this.handleOpen}\n        >\n          <SourcePickerElement\n            name={selected}\n            source={getMediaSource(selected)}\n            active\n          />\n          <ArrowIcon className=\"SourcePicker-arrow\" />\n        </button>\n        <Popover\n          classes={{ paper: 'SourcePicker-list' }}\n          open={this.state.open}\n          anchorEl={this.state.anchor}\n          onClose={this.handleClose}\n          {...popoverPosition}\n        >\n          {sources}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SourcePicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseSearchBar from '../../SearchBar';\nimport SourcePicker from './SourcePicker';\n\nconst SearchBar = ({\n  className,\n  source,\n  onSubmit,\n  onSourceChange,\n}) => (\n  <BaseSearchBar className={className} onSubmit={onSubmit}>\n    <SourcePicker\n      className=\"SearchBar-source\"\n      selected={source}\n      onChange={onSourceChange}\n    />\n  </BaseSearchBar>\n);\n\nSearchBar.propTypes = {\n  className: PropTypes.string,\n  source: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onSourceChange: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport SearchBar from '../components/PlaylistManager/Header/SearchBar';\nimport {\n  search,\n  setSource,\n} from '../actions/SearchActionCreators';\nimport { searchSourceTypeSelector } from '../selectors/searchSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  source: searchSourceTypeSelector,\n});\n\nconst mapDispatchToProps = {\n  onSubmit: search,\n  onSourceChange: setSource,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport OverlayHeader from '../../Overlay/Header';\nimport SearchBar from '../../../containers/MediaSearchBar';\n\nconst enhance = translate();\n\nconst PlaylistManagerHeader = ({\n  t,\n  className,\n  onCloseOverlay,\n}) => (\n  <OverlayHeader\n    className={cx('PlaylistHeader', className)}\n    title={t('playlists.title')}\n    onCloseOverlay={onCloseOverlay}\n  >\n    <SearchBar className=\"PlaylistHeader-search\" />\n  </OverlayHeader>\n);\n\nPlaylistManagerHeader.propTypes = {\n  className: PropTypes.string,\n  t: PropTypes.func.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistManagerHeader);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nconst enhance = translate();\n\nconst NoPlaylists = ({ t, className }) => (\n  <div className={cx('PlaylistPanel', 'PlaylistPanel--empty', className)}>\n    {t('playlists.noPlaylists')}\n  </div>\n);\n\nNoPlaylists.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default enhance(NoPlaylists);\n","import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayContent from '../Overlay/Content';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport NoPlaylists from './NoPlaylists';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <NoPlaylists />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <OverlayContent>\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </OverlayContent>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"],"sourceRoot":""}