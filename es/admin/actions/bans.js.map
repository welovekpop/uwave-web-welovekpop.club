{"version":3,"sources":["admin/actions/bans.js"],"names":["get","del","mergeIncludedModels","LOAD_BANS_START","LOAD_BANS_COMPLETE","loadBansStart","type","loadBansComplete","response","meta","payload","bans","page","Math","floor","offset","pageSize","size","loadBans","onStart","onComplete","unbanUser","user","_id","unbanUserAndReload","dispatch","then"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,0BAApD;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,SAAO;AAAEC,UAAMH;AAAR,GAAP;AACD;AAED,OAAO,SAASI,gBAAT,CAA0BC,QAA1B,EAAoC;AAAA,MACjCC,IADiC,GACxBD,QADwB,CACjCC,IADiC;AAGzC,SAAO;AACLH,UAAMF,kBADD;AAELM,aAAS;AACPC,YAAMT,oBAAoBM,QAApB;AADC,KAFJ;AAKLC,UAAM;AACJG,YAAMC,KAAKC,KAAL,CAAWL,KAAKM,MAAL,GAAcN,KAAKO,QAA9B,CADF;AAEJC,YAAMR,KAAKO;AAFP;AALD,GAAP;AAUD;AAED,OAAO,SAASE,QAAT,GAAoB;AACzB,SAAOlB,IAAI,OAAJ,EAAa;AAClBmB,aAASd,aADS;AAElBe,gBAAYb;AAFM,GAAb,CAAP;AAID;AAED,OAAO,SAASc,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,SAAOrB,eAAaqB,KAAKC,GAAlB,EAAyB,EAAzB,CAAP;AACD;AAED,OAAO,SAASC,kBAAT,CAA4BF,IAA5B,EAAkC;AACvC,SAAO;AAAA,WACLG,SAASJ,UAAUC,IAAV,CAAT,EACGI,IADH,CACQ;AAAA,aAAMD,SAASP,UAAT,CAAN;AAAA,KADR,CADK;AAAA,GAAP;AAGD","sourcesContent":["import { get, del } from '../../actions/RequestActionCreators';\nimport mergeIncludedModels from '../../utils/mergeIncludedModels';\nimport { LOAD_BANS_START, LOAD_BANS_COMPLETE } from '../constants/ActionTypes';\n\nexport function loadBansStart() {\n  return { type: LOAD_BANS_START };\n}\n\nexport function loadBansComplete(response) {\n  const { meta } = response;\n\n  return {\n    type: LOAD_BANS_COMPLETE,\n    payload: {\n      bans: mergeIncludedModels(response),\n    },\n    meta: {\n      page: Math.floor(meta.offset / meta.pageSize),\n      size: meta.pageSize,\n    },\n  };\n}\n\nexport function loadBans() {\n  return get('/bans', {\n    onStart: loadBansStart,\n    onComplete: loadBansComplete,\n  });\n}\n\nexport function unbanUser(user) {\n  return del(`/bans/${user._id}`, {});\n}\n\nexport function unbanUserAndReload(user) {\n  return dispatch =>\n    dispatch(unbanUser(user))\n      .then(() => dispatch(loadBans()));\n}\n"],"file":"bans.js"}