{"version":3,"sources":["store/request.js"],"names":["assign","qsStringify","REQUEST_START","requestComplete","requestCompleteError","requestOptionsSelector","tokenSelector","isEmpty","object","Object","keys","length","makeUrl","path","params","uri","indexOf","rejectNonOK","response","status","json","then","res","Error","errors","error","map","err","title","join","defaultOptions","apiUrl","middleware","middlewareOptions","dispatch","getState","action","type","next","opts","token","payload","method","url","qs","data","meta","id","onStart","onComplete","onError","completedMeta","requestUrl","requestOptions","headers","Accept","credentials","Authorization","body","JSON","stringify","fetch","responseValue","catch"],"mappings":"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","sourcesContent":["import assign from 'object-assign';\nimport qsStringify from 'qs-stringify';\nimport { REQUEST_START } from '../constants/ActionTypes';\nimport {\n  requestComplete,\n  requestCompleteError,\n} from '../actions/RequestActionCreators';\nimport { requestOptionsSelector } from '../selectors/configSelectors';\nimport { tokenSelector } from '../selectors/userSelectors';\n\nfunction isEmpty(object) {\n  return !object || Object.keys(object).length === 0;\n}\n\nfunction makeUrl(path, params = {}) {\n  let uri = path;\n\n  if (!isEmpty(params)) {\n    // hehâ€¦\n    uri += (uri.indexOf('?') !== -1 ? '&' : '?') + qsStringify(params);\n  }\n\n  return uri;\n}\n\nfunction rejectNonOK(response) {\n  if (response.status !== 200) {\n    return response.json().then((res) => {\n      if (!('errors' in res)) {\n        throw new Error('An unknown error occurred.');\n      }\n      const { errors } = res;\n      const error = assign(new Error(errors.map(err => err.title).join(', ')), {\n        response,\n        errors,\n      });\n      throw error;\n    });\n  }\n  return response;\n}\n\nconst defaultOptions = {\n  apiUrl: '/api',\n};\n\nexport default function middleware(middlewareOptions = {}) {\n  return ({ dispatch, getState }) => next => (action) => {\n    if (action.type !== REQUEST_START) {\n      return next(action);\n    }\n\n    const opts = {\n      ...defaultOptions,\n      ...middlewareOptions,\n      ...requestOptionsSelector(getState()),\n    };\n\n    const token = tokenSelector(getState());\n    const {\n      method,\n      url,\n      qs,\n      data,\n    } = action.payload;\n    const {\n      id,\n      onStart,\n      onComplete,\n      onError,\n    } = action.meta;\n\n    const completedMeta = {\n      id,\n      method,\n      url,\n      qs,\n      data,\n    };\n\n    const requestUrl = makeUrl(opts.apiUrl + url, qs);\n\n    const requestOptions = {\n      method,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    };\n\n    if (token && token !== 'cookie') {\n      requestOptions.headers.Authorization = `JWT ${token}`;\n    }\n\n    if (method !== 'get') {\n      requestOptions.body = JSON.stringify(data);\n    }\n\n    if (onStart) {\n      dispatch(onStart());\n    }\n\n    return fetch(requestUrl, requestOptions)\n      .then(rejectNonOK)\n      .then(res => res.json())\n      .then((res) => {\n        let responseValue = res;\n        if (onComplete) {\n          responseValue = dispatch(onComplete(responseValue));\n        }\n        dispatch(requestComplete(res, completedMeta));\n        return responseValue;\n      })\n      .catch((error) => {\n        if (onError) {\n          dispatch(onError(error));\n        }\n        dispatch(requestCompleteError(error, completedMeta));\n        throw error;\n      });\n  };\n}\n"],"file":"request.js"}