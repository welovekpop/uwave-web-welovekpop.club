{"version":3,"sources":["store/socket.js"],"names":["createDebug","WebSocket","LOGIN_COMPLETE","SOCKET_CONNECT","SOCKET_RECONNECT","SOCKET_DISCONNECTED","SOCKET_CONNECTED","SEND_MESSAGE","DO_UPVOTE","DO_DOWNVOTE","SHOULD_RANDOMIZE","advance","receive","chatReceive","removeMessage","removeMessagesByUser","removeAllMessages","muteUser","chatMute","unmuteUser","chatUnmute","cyclePlaylist","join","userJoin","leave","userLeave","changeUsername","changeUserRole","receiveGuestCount","clearWaitlist","joinedWaitlist","leftWaitlist","updatedWaitlist","movedInWaitlist","setLocked","setWaitlistLocked","favorited","receiveVote","debug","defaultUrl","port","location","protocol","hostname","actions","chatMessage","id","userID","message","timestamp","_id","text","chatDelete","chatDeleteByID","chatDeleteByUser","expiresAt","moderatorID","booth","favorite","historyID","vote","value","waitlistJoin","waitlist","waitlistLeave","waitlistUpdate","waitlistLock","locked","waitlistMove","position","waitlistAdd","waitlistRemove","waitlistClear","playlistCycle","playlistID","user","nameChange","username","roleChange","role","guests","type","payload","middleware","url","dispatch","getState","socket","queue","sentJWT","opened","isOpen","sendJWT","jwt","send","maybeAuthenticateOnConnect","state","auth","command","data","JSON","stringify","push","drainQueuedMessages","messages","forEach","msg","onOpen","onClose","onMessage","pack","parse","action","close","undefined","keepClosed","addEventListener","next"],"mappings":"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","file":"socket.js","sourcesContent":["import createDebug from 'debug';\nimport WebSocket from 'reconnecting-websocket';\n\nimport {\n  LOGIN_COMPLETE,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n  SOCKET_DISCONNECTED,\n  SOCKET_CONNECTED\n} from '../constants/actionTypes/auth';\nimport {\n  SEND_MESSAGE\n} from '../constants/actionTypes/chat';\nimport {\n  DO_UPVOTE,\n  DO_DOWNVOTE\n} from '../constants/actionTypes/votes';\nimport {\n  SHOULD_RANDOMIZE\n} from '../_wlk/constants';\n\nimport { advance } from '../actions/BoothActionCreators';\nimport {\n  receive as chatReceive,\n  removeMessage,\n  removeMessagesByUser,\n  removeAllMessages,\n  muteUser as chatMute,\n  unmuteUser as chatUnmute\n} from '../actions/ChatActionCreators';\nimport { cyclePlaylist } from '../actions/PlaylistActionCreators';\nimport {\n  join as userJoin,\n  leave as userLeave,\n  changeUsername,\n  changeUserRole,\n  receiveGuestCount\n} from '../actions/UserActionCreators';\nimport {\n  clearWaitlist,\n  joinedWaitlist,\n  leftWaitlist,\n  updatedWaitlist,\n  movedInWaitlist,\n  setLocked as setWaitlistLocked\n} from '../actions/WaitlistActionCreators';\nimport { favorited, receiveVote } from '../actions/VoteActionCreators';\n\nconst debug = createDebug('uwave:websocket');\n\nfunction defaultUrl() {\n  const port = location.port || (location.protocol === 'https:' ? 443 : 80);\n  const protocol = location.protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${protocol}//${location.hostname}:${port}`;\n}\n\nconst actions = {\n  chatMessage({ id, userID, message, timestamp }) {\n    return chatReceive({\n      _id: id,\n      userID,\n      text: message,\n      timestamp\n    });\n  },\n  chatDelete() {\n    return removeAllMessages();\n  },\n  chatDeleteByID({ _id }) {\n    return removeMessage(_id);\n  },\n  chatDeleteByUser({ userID }) {\n    return removeMessagesByUser(userID);\n  },\n  chatMute({ userID, expiresAt, moderatorID }) {\n    return chatMute(userID, { moderatorID, expiresAt });\n  },\n  chatUnmute({ userID, moderatorID }) {\n    return chatUnmute(userID, { moderatorID });\n  },\n  advance(booth) {\n    return advance(booth);\n  },\n  favorite({ userID, historyID }) {\n    return favorited({ userID, historyID });\n  },\n  vote({ _id, value }) {\n    return receiveVote({ userID: _id, vote: value });\n  },\n  waitlistJoin({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistLeave({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistUpdate(waitlist) {\n    return updatedWaitlist(waitlist);\n  },\n  waitlistLock({ locked }) {\n    return setWaitlistLocked(locked);\n  },\n  waitlistMove({ userID, moderatorID, position, waitlist }) {\n    return movedInWaitlist({ userID, moderatorID, position, waitlist });\n  },\n  // TODO Treat moderator force-add and force-remove differently from voluntary\n  // joins and leaves.\n  waitlistAdd({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistRemove({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistClear() {\n    return clearWaitlist();\n  },\n  playlistCycle({ playlistID }) {\n    return cyclePlaylist(playlistID);\n  },\n  join(user) {\n    return userJoin(user);\n  },\n  leave(userID) {\n    return userLeave(userID);\n  },\n  nameChange({ userID, username }) {\n    return changeUsername(userID, username);\n  },\n  roleChange({ userID, role }) {\n    return changeUserRole(userID, role);\n  },\n  guests: receiveGuestCount,\n\n  'wlk:shouldRandomize': ({ value }) => ({\n    type: SHOULD_RANDOMIZE,\n    payload: value\n  })\n};\n\nexport default function middleware({ url = defaultUrl() } = {}) {\n  return ({ dispatch, getState }) => {\n    let socket;\n    let queue = [];\n    let sentJWT = false;\n    let opened = false;\n\n    function isOpen() {\n      return socket && opened;\n    }\n\n    function sendJWT(jwt) {\n      socket.send(jwt);\n      sentJWT = true;\n    }\n\n    function maybeAuthenticateOnConnect(state) {\n      const jwt = state.auth.jwt;\n      debug('open', jwt);\n      if (jwt) {\n        sendJWT(jwt);\n      } else {\n        sentJWT = false;\n      }\n    }\n\n    function send(command, data) {\n      if (isOpen()) {\n        socket.send(JSON.stringify({ command, data }));\n      } else {\n        queue.push({ command, data });\n      }\n    }\n\n    function drainQueuedMessages() {\n      const messages = queue;\n      queue = [];\n      messages.forEach((msg) => {\n        send(msg.command, msg.data);\n      });\n    }\n\n    function onOpen() {\n      opened = true;\n      dispatch({ type: SOCKET_CONNECTED });\n      maybeAuthenticateOnConnect(getState());\n    }\n\n    function onClose() {\n      opened = false;\n      dispatch({ type: SOCKET_DISCONNECTED });\n    }\n\n    function onMessage(pack) {\n      // Ignore keepalive messages.\n      if (pack.data === '-') return;\n\n      const { command, data } = JSON.parse(pack.data);\n      debug(command, data);\n\n      if (command === 'authenticated') {\n        drainQueuedMessages();\n        return;\n      }\n\n      if (typeof actions[command] === 'function') {\n        const action = actions[command](data);\n        if (action) {\n          dispatch(action);\n          return;\n        }\n      }\n      debug('!unknown socket message type');\n    }\n\n    return next => (action) => {\n      const { type, payload } = action;\n      switch (type) {\n      case SOCKET_RECONNECT:\n        if (socket) {\n          socket.close(undefined, undefined, { keepClosed: true });\n        }\n        // fall through\n      case SOCKET_CONNECT:\n        socket = new WebSocket(url);\n        socket.addEventListener('message', onMessage);\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('connecting', onClose);\n        break;\n      case SEND_MESSAGE:\n        send('sendChat', payload.message);\n        break;\n      case DO_UPVOTE:\n        send('vote', 1);\n        break;\n      case DO_DOWNVOTE:\n        send('vote', -1);\n        break;\n      case LOGIN_COMPLETE:\n        if (!sentJWT && isOpen()) {\n          sendJWT(payload.jwt);\n        }\n        break;\n      default:\n        break;\n      }\n      next(action);\n    };\n  };\n}\n"]}