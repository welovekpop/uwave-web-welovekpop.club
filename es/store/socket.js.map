{"version":3,"sources":["store/socket.js"],"names":["createDebug","WebSocket","LOGIN_COMPLETE","LOGOUT_START","SOCKET_CONNECT","SOCKET_RECONNECT","SOCKET_DISCONNECTED","SOCKET_CONNECTED","SEND_MESSAGE","DO_UPVOTE","DO_DOWNVOTE","SHOULD_RANDOMIZE","getSocketAuthToken","advance","skipped","receive","chatReceive","removeMessage","removeMessagesByUser","removeAllMessages","muteUser","chatMute","unmuteUser","chatUnmute","cyclePlaylist","join","userJoin","leave","userLeave","changeUsername","addUserRoles","removeUserRoles","receiveGuestCount","clearWaitlist","joinedWaitlist","leftWaitlist","updatedWaitlist","movedInWaitlist","setLocked","setWaitlistLocked","favorited","receiveVote","debug","defaultUrl","loc","window","location","port","protocol","hostname","actions","chatMessage","id","userID","message","timestamp","_id","text","chatDelete","chatDeleteByID","chatDeleteByUser","expiresAt","moderatorID","booth","skip","reason","favorite","historyID","vote","value","waitlistJoin","waitlist","waitlistLeave","waitlistUpdate","waitlistLock","locked","waitlistMove","position","waitlistAdd","waitlistRemove","waitlistClear","playlistCycle","playlistID","user","nameChange","username","guests","roles","type","payload","middleware","url","dispatch","getState","socket","queue","sentAuthToken","opened","isOpen","sendAuthToken","tokne","send","maybeAuthenticateOnConnect","state","auth","then","socketToken","command","data","JSON","stringify","push","drainQueuedMessages","messages","forEach","msg","onOpen","onClose","onMessage","pack","parse","action","error","next","close","undefined","keepClosed","addEventListener"],"mappings":"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","sourcesContent":["import createDebug from 'debug';\nimport WebSocket from 'reconnecting-websocket';\nimport {\n  LOGIN_COMPLETE,\n  LOGOUT_START,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n  SOCKET_DISCONNECTED,\n  SOCKET_CONNECTED,\n  SEND_MESSAGE,\n  DO_UPVOTE,\n  DO_DOWNVOTE,\n} from '../constants/ActionTypes';\nimport { SHOULD_RANDOMIZE } from '../_wlk/constants';\nimport { getSocketAuthToken } from '../actions/LoginActionCreators';\nimport {\n  advance,\n  skipped,\n} from '../actions/BoothActionCreators';\nimport {\n  receive as chatReceive,\n  removeMessage,\n  removeMessagesByUser,\n  removeAllMessages,\n  muteUser as chatMute,\n  unmuteUser as chatUnmute,\n} from '../actions/ChatActionCreators';\nimport { cyclePlaylist } from '../actions/PlaylistActionCreators';\nimport {\n  join as userJoin,\n  leave as userLeave,\n  changeUsername,\n  addUserRoles,\n  removeUserRoles,\n  receiveGuestCount,\n} from '../actions/UserActionCreators';\nimport {\n  clearWaitlist,\n  joinedWaitlist,\n  leftWaitlist,\n  updatedWaitlist,\n  movedInWaitlist,\n  setLocked as setWaitlistLocked,\n} from '../actions/WaitlistActionCreators';\nimport { favorited, receiveVote } from '../actions/VoteActionCreators';\n\nconst debug = createDebug('uwave:websocket');\n\nfunction defaultUrl() {\n  const loc = window.location;\n  const port = loc.port || (loc.protocol === 'https:' ? 443 : 80);\n  const protocol = loc.protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${protocol}//${loc.hostname}:${port}`;\n}\n\nconst actions = {\n  chatMessage({\n    id, userID, message, timestamp,\n  }) {\n    return chatReceive({\n      _id: id,\n      userID,\n      text: message,\n      timestamp,\n    });\n  },\n  chatDelete() {\n    return removeAllMessages();\n  },\n  chatDeleteByID({ _id }) {\n    return removeMessage(_id);\n  },\n  chatDeleteByUser({ userID }) {\n    return removeMessagesByUser(userID);\n  },\n  chatMute({ userID, expiresAt, moderatorID }) {\n    return chatMute(userID, { moderatorID, expiresAt });\n  },\n  chatUnmute({ userID, moderatorID }) {\n    return chatUnmute(userID, { moderatorID });\n  },\n  advance(booth) {\n    return advance(booth);\n  },\n  skip({ userID, moderatorID, reason }) {\n    return skipped({ userID, moderatorID, reason });\n  },\n  favorite({ userID, historyID }) {\n    return favorited({ userID, historyID });\n  },\n  vote({ _id, value }) {\n    return receiveVote({ userID: _id, vote: value });\n  },\n  waitlistJoin({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistLeave({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistUpdate(waitlist) {\n    return updatedWaitlist(waitlist);\n  },\n  waitlistLock({ locked }) {\n    return setWaitlistLocked(locked);\n  },\n  waitlistMove({\n    userID, moderatorID, position, waitlist,\n  }) {\n    return movedInWaitlist({\n      userID, moderatorID, position, waitlist,\n    });\n  },\n  // TODO Treat moderator force-add and force-remove differently from voluntary\n  // joins and leaves.\n  waitlistAdd({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistRemove({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistClear() {\n    return clearWaitlist();\n  },\n  playlistCycle({ playlistID }) {\n    return cyclePlaylist(playlistID);\n  },\n  join(user) {\n    return userJoin(user);\n  },\n  leave(userID) {\n    return userLeave(userID);\n  },\n  nameChange({ userID, username }) {\n    return changeUsername(userID, username);\n  },\n  guests: receiveGuestCount,\n  'acl:allow': ({ userID, roles }) =>\n    addUserRoles(userID, roles),\n  'acl:disallow': ({ userID, roles }) =>\n    removeUserRoles(userID, roles),\n  'wlk:shouldRandomize': ({ value }) => ({\n    type: SHOULD_RANDOMIZE,\n    payload: value,\n  }),\n};\n\nexport default function middleware({ url = defaultUrl() } = {}) {\n  return ({ dispatch, getState }) => {\n    let socket;\n    let queue = [];\n    let sentAuthToken = false;\n    let opened = false;\n\n    function isOpen() {\n      return socket && opened;\n    }\n\n    function sendAuthToken(tokne) {\n      socket.send(tokne);\n      sentAuthToken = true;\n    }\n\n    function maybeAuthenticateOnConnect(state) {\n      const { user } = state.auth;\n      if (!user) return;\n      debug('open', user.id);\n\n      dispatch(getSocketAuthToken()).then(({ socketToken }) => {\n        if (socketToken) {\n          sendAuthToken(socketToken);\n        } else {\n          sentAuthToken = false;\n        }\n      });\n    }\n\n    function send(command, data) {\n      if (isOpen()) {\n        socket.send(JSON.stringify({ command, data }));\n      } else {\n        queue.push({ command, data });\n      }\n    }\n\n    function drainQueuedMessages() {\n      const messages = queue;\n      queue = [];\n      messages.forEach((msg) => {\n        send(msg.command, msg.data);\n      });\n    }\n\n    function onOpen() {\n      opened = true;\n      dispatch({ type: SOCKET_CONNECTED });\n      maybeAuthenticateOnConnect(getState());\n    }\n\n    function onClose() {\n      opened = false;\n      dispatch({ type: SOCKET_DISCONNECTED });\n    }\n\n    function onMessage(pack) {\n      // Ignore keepalive messages.\n      if (pack.data === '-') return;\n\n      const { command, data } = JSON.parse(pack.data);\n      debug(command, data);\n\n      if (command === 'authenticated') {\n        drainQueuedMessages();\n        return;\n      }\n\n      if (typeof actions[command] === 'function') {\n        const action = actions[command](data);\n        if (action) {\n          dispatch(action);\n          return;\n        }\n      }\n      debug('!unknown socket message type');\n    }\n\n    return next => (action) => {\n      const { type, payload, error } = action;\n\n      if (error) {\n        next(action);\n        return;\n      }\n\n      switch (type) {\n        case SOCKET_RECONNECT:\n          if (socket) {\n            socket.close(undefined, undefined, { keepClosed: true });\n          }\n        // fall through\n        case SOCKET_CONNECT:\n          socket = new WebSocket(url);\n          socket.addEventListener('message', onMessage);\n          socket.addEventListener('open', onOpen);\n          socket.addEventListener('close', onClose);\n          socket.addEventListener('connecting', onClose);\n          break;\n        case SEND_MESSAGE:\n          send('sendChat', payload.message);\n          break;\n        case DO_UPVOTE:\n          send('vote', 1);\n          break;\n        case DO_DOWNVOTE:\n          send('vote', -1);\n          break;\n        case LOGIN_COMPLETE:\n          if (!sentAuthToken && isOpen()) {\n            sendAuthToken(payload.socketToken);\n          }\n          break;\n        case LOGOUT_START:\n          sentAuthToken = false;\n          send('logout', null);\n          break;\n        default:\n          break;\n      }\n      next(action);\n    };\n  };\n}\n"],"file":"socket.js"}