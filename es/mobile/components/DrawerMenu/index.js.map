{"version":3,"sources":["mobile/components/DrawerMenu/index.js"],"names":["React","PropTypes","withHandlers","Drawer","MenuList","MenuItem","ListItemIcon","ListSubheader","ListItemText","Divider","ActiveIcon","UserCard","enhance","onShowAbout","event","preventDefault","props","onDrawerClose","onShowSettings","DrawerMenu","user","playlists","open","onShowPlaylist","map","playlist","_id","active","name","propTypes","object","arrayOf","shape","string","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,qBAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,QAA0D,qBAA1D;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uCAArB;;AAEA,IAAMC,UAAUV,aAAa;AAC3B;AACA;AACAW,eAAa;AAAA,WAAS,UAACC,KAAD,EAAW;AAC/BA,YAAMC,cAAN;AACAC,YAAMH,WAAN;AACAG,YAAMC,aAAN;AACD,KAJY;AAAA,GAHc;AAQ3BC,kBAAgB;AAAA,WAAS,UAACJ,KAAD,EAAW;AAClCA,YAAMC,cAAN;AACAC,YAAME,cAAN;AACAF,YAAMC,aAAN;AACD,KAJe;AAAA;AARW,CAAb,CAAhB;;iBA8BK,O;;iBAEa,a;;iBAYL,Y,mBACE,U;;AA9Bf,IAAME,aAAa,SAAbA,UAAa;AAAA,MACjBC,IADiB,QACjBA,IADiB;AAAA,MAEjBC,SAFiB,QAEjBA,SAFiB;AAAA,MAGjBC,IAHiB,QAGjBA,IAHiB;AAAA,MAIjBT,WAJiB,QAIjBA,WAJiB;AAAA,MAKjBK,cALiB,QAKjBA,cALiB;AAAA,MAMjBK,cANiB,QAMjBA,cANiB;AAAA,MAOjBN,aAPiB,QAOjBA,aAPiB;AAAA,cAShB,MATgB;AAAA,UASHK,IATG;AAAA,aASYL;AATZ,aAUdG,aAAS,QAAT;AAAA,UAAwBA;AAAxB,IAVc,OAWd,QAXc,mBAYZ,QAZY;AAAA,aAYMP;AAZN,4BAaZ,QAbY;AAAA,aAaMK;AAbN,uCAgBd,QAhBc;AAAA;AAAA,aAmBZG,UAAUG,GAAV,CAAc;AAAA,gBACZ,QADY;AAAA,eAGF,iBAACV,KAAD,EAAW;AAClBA,cAAMC,cAAN;AACAQ,uBAAeE,SAASC,GAAxB;AACAT;AACD;AAPU,OAENQ,SAASC,GAFH,EASVD,SAASE,MAAT,SATU,OAcV,YAdU;AAAA,eAcYF,SAASG;AAdrB;AAAA,GAAd,CAnBY;AAAA,CAAnB;;AAwCAT,WAAWU,SAAX,2CAAuB;AACrBT,QAAMnB,UAAU6B,MADK;AAErBT,aAAWpB,UAAU8B,OAAV,CAAkB9B,UAAU+B,KAAV,CAAgB,EAAEJ,MAAM3B,UAAUgC,MAAV,CAAiBC,UAAzB,EAAhB,CAAlB,CAFU;AAGrBZ,QAAMrB,UAAUkC,IAAV,CAAeD,UAHA;AAIrBrB,eAAaZ,UAAUmC,IAAV,CAAeF,UAJP;AAKrBhB,kBAAgBjB,UAAUmC,IAAV,CAAeF,UALV;AAMrBX,kBAAgBtB,UAAUmC,IAAV,CAAeF,UANV;AAOrBjB,iBAAehB,UAAUmC,IAAV,CAAeF;AAPT,CAAvB;;AAUA,eAAetB,QAAQO,UAAR,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withHandlers from 'recompose/withHandlers';\nimport Drawer from 'material-ui/Drawer';\nimport { MenuList, MenuItem } from 'material-ui/Menu';\nimport { ListItemIcon, ListSubheader, ListItemText } from 'material-ui/List';\nimport Divider from 'material-ui/Divider';\nimport ActiveIcon from 'material-ui-icons/Check';\nimport UserCard from '../../../components/UserCard/UserCard';\n\nconst enhance = withHandlers({\n  // Prevent defaults for react-tap-event-plugin:\n  // https://github.com/zilverline/react-tap-event-plugin/issues/77\n  onShowAbout: props => (event) => {\n    event.preventDefault();\n    props.onShowAbout();\n    props.onDrawerClose();\n  },\n  onShowSettings: props => (event) => {\n    event.preventDefault();\n    props.onShowSettings();\n    props.onDrawerClose();\n  },\n});\n\nconst DrawerMenu = ({\n  user,\n  playlists,\n  open,\n  onShowAbout,\n  onShowSettings,\n  onShowPlaylist,\n  onDrawerClose,\n}) => (\n  <Drawer open={open} onClose={onDrawerClose}>\n    {user && <UserCard user={user} />}\n    <MenuList>\n      <MenuItem onClick={onShowAbout}>About</MenuItem>\n      <MenuItem onClick={onShowSettings}>Settings</MenuItem>\n    </MenuList>\n    <Divider />\n    <MenuList\n      subheader={<ListSubheader>Playlists</ListSubheader>}\n    >\n      {playlists.map(playlist => (\n        <MenuItem\n          key={playlist._id}\n          onClick={(event) => {\n            event.preventDefault();\n            onShowPlaylist(playlist._id);\n            onDrawerClose();\n          }}\n        >\n          {playlist.active && (\n            <ListItemIcon>\n              <ActiveIcon />\n            </ListItemIcon>\n          )}\n          <ListItemText primary={playlist.name} />\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Drawer>\n);\n\nDrawerMenu.propTypes = {\n  user: PropTypes.object,\n  playlists: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string.isRequired })),\n  open: PropTypes.bool.isRequired,\n  onShowAbout: PropTypes.func.isRequired,\n  onShowSettings: PropTypes.func.isRequired,\n  onShowPlaylist: PropTypes.func.isRequired,\n  onDrawerClose: PropTypes.func.isRequired,\n};\n\nexport default enhance(DrawerMenu);\n"]}