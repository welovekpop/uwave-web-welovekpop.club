{"version":3,"sources":["mobile/components/App/index.js"],"names":["cx","React","PropTypes","compose","toClass","withState","DragDropContext","HTML5Backend","Snackbar","ErrorArea","PlaylistManager","RoomHistory","SettingsManager","Dialogs","AddToPlaylistMenu","DragLayer","MainView","Overlays","enhance","MobileApp","settings","activeOverlay","onCloseOverlay","dismissedWarning","onDismiss","videoEnabled","propTypes","shape","bool","isRequired","string","func"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,UAAUf,QACdG,gBAAgBC,YAAhB,CADc,EAEdH,OAFc,EAGdC,UAAU,kBAAV,EAA8B,WAA9B,EAA2C,KAA3C,CAHc,CAAhB;;iBAcK,Q;;iBAQA,S;;iBAiBA,O;;iBAEA,iB;;iBACA,S;;AApCL,IAAMc,YAAY,SAAZA,SAAY;AAAA,MAChBC,QADgB,QAChBA,QADgB;AAAA,MAEhBC,aAFgB,QAEhBA,aAFgB;AAAA,MAGhBC,cAHgB,QAGhBA,cAHgB;AAAA,MAIhBC,gBAJgB,QAIhBA,gBAJgB;AAAA,MAKhBC,SALgB,QAKhBA,SALgB;AAAA;AAAA,eAOAxB,GAAG,KAAH,EAAU,WAAV,EAAuB,WAAvB,EAAoCoB,SAASK,YAAT,IAAyB,yBAA7D;AAPA,yBAUb,QAVa;AAAA,UAWN,CAACF,gBAXK;AAAA,aAYH;AAAA,aAAMC,UAAU,IAAV,CAAN;AAAA,KAZG;AAAA,aAaJ;AAbI,kBAkBb,QAlBa;AAAA,oBAkBW,SAlBX;AAAA,YAkB6BH;AAlB7B,kBAmBX,eAnBW;AAAA,oBAqBMC;AArBN,KAoBN,iBApBM,QAuBX,WAvBW;AAAA,oBAyBMA;AAzBN,KAwBN,aAxBM,QA2BX,eA3BW;AAAA,oBA6BMA;AA7BN,KA4BN,UA5BM;AAAA,CAAlB;;AAwCAH,UAAUO,SAAV,2CAAsB;AACpBN,YAAUlB,UAAUyB,KAAV,CAAgB;AACxBF,kBAAcvB,UAAU0B,IAAV,CAAeC;AADL,GAAhB,EAEPA,UAHiB;AAIpBR,iBAAenB,UAAU4B,MAJL;AAKpBR,kBAAgBpB,UAAU6B,IAAV,CAAeF,UALX;AAMpB;AACAN,oBAAkBrB,UAAU0B,IAAV,CAAeC,UAPb;AAQpBL,aAAWtB,UAAU6B,IAAV,CAAeF;AARN,CAAtB;;AAWA,eAAeX,QAAQC,SAAR,CAAf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport withState from 'recompose/withState';\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport Snackbar from 'material-ui/Snackbar';\nimport ErrorArea from '../../../containers/ErrorArea';\nimport PlaylistManager from '../../containers/PlaylistManager';\nimport RoomHistory from '../../containers/RoomHistory';\nimport SettingsManager from '../../../containers/SettingsManager';\nimport Dialogs from '../../../components/Dialogs';\nimport AddToPlaylistMenu from '../../../containers/AddToPlaylistMenu';\nimport DragLayer from '../../../containers/DragLayer';\nimport MainView from '../../containers/MainView';\nimport Overlays from './Overlays';\n\nconst enhance = compose(\n  DragDropContext(HTML5Backend),\n  toClass,\n  withState('dismissedWarning', 'onDismiss', false),\n);\n\nconst MobileApp = ({\n  settings,\n  activeOverlay,\n  onCloseOverlay,\n  dismissedWarning,\n  onDismiss,\n}) => (\n  <div className={cx('App', 'MobileApp', 'is-mobile', settings.videoEnabled && 'MobileApp--videoEnabled')}>\n    <MainView />\n\n    <Snackbar\n      open={!dismissedWarning}\n      onClose={() => onDismiss(true)}\n      message=\"Note: The mobile version is in beta and may crash regularly.\"\n    />\n\n    <ErrorArea />\n\n    <Overlays transitionName=\"Overlay\" active={activeOverlay}>\n      <PlaylistManager\n        key=\"playlistManager\"\n        onCloseOverlay={onCloseOverlay}\n      />\n      <RoomHistory\n        key=\"roomHistory\"\n        onCloseOverlay={onCloseOverlay}\n      />\n      <SettingsManager\n        key=\"settings\"\n        onCloseOverlay={onCloseOverlay}\n      />\n    </Overlays>\n\n    <Dialogs />\n\n    <AddToPlaylistMenu />\n    <DragLayer />\n  </div>\n);\n\nMobileApp.propTypes = {\n  settings: PropTypes.shape({\n    videoEnabled: PropTypes.bool.isRequired,\n  }).isRequired,\n  activeOverlay: PropTypes.string,\n  onCloseOverlay: PropTypes.func.isRequired,\n  // Mobile Beta warning\n  dismissedWarning: PropTypes.bool.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n};\n\nexport default enhance(MobileApp);\n"]}