{"version":3,"sources":["mobile/containers/DrawerMenu.js"],"names":["bindActionCreators","createStructuredSelector","connect","currentUserSelector","playlistsSelector","toggleSettings","toggleAbout","drawerIsOpenSelector","setDrawer","openPlaylist","DrawerMenu","mapStateToProps","user","playlists","open","mapDispatchToProps","onShowAbout","onShowSettings","onShowPlaylist","onDrawerClose","dispatch"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,qCAA5C;;AAEA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,kBAAkBV,yBAAyB;AAC/CW,QAAMT,mBADyC;AAE/CU,aAAWT,iBAFoC;AAG/CU,QAAMP;AAHyC,CAAzB,CAAxB;;AAMA,IAAMQ,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYf,mBAAmB;AACxDgB,iBAAaV,WAD2C;AAExDW,oBAAgBZ,cAFwC;AAGxDa,oBAAgBT,YAHwC;AAIxDU,mBAAe;AAAA,aAAMX,UAAU,KAAV,CAAN;AAAA;AAJyC,GAAnB,EAKpCY,QALoC,CAAZ;AAAA,CAA3B;;AAOA,eAAelB,QAAQS,eAAR,EAAyBI,kBAAzB,EAA6CL,UAA7C,CAAf","file":"DrawerMenu.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { currentUserSelector } from '../../selectors/userSelectors';\nimport { playlistsSelector } from '../../selectors/playlistSelectors';\nimport { toggleSettings, toggleAbout } from '../../actions/OverlayActionCreators';\n\nimport { drawerIsOpenSelector } from '../selectors/drawerSelectors';\nimport { setDrawer } from '../actions/DrawerActionCreators';\nimport { openPlaylist } from '../actions/OverlayActionCreators';\nimport DrawerMenu from '../components/DrawerMenu';\n\nconst mapStateToProps = createStructuredSelector({\n  user: currentUserSelector,\n  playlists: playlistsSelector,\n  open: drawerIsOpenSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowAbout: toggleAbout,\n  onShowSettings: toggleSettings,\n  onShowPlaylist: openPlaylist,\n  onDrawerClose: () => setDrawer(false),\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerMenu);\n"]}