{"version":3,"sources":["mobile/containers/DrawerMenu.js"],"names":["compose","getContext","PropTypes","bindActionCreators","createStructuredSelector","connect","currentUserSelector","playlistsSelector","toggleSettings","toggleAbout","drawerIsOpenSelector","setDrawer","toggleServerList","openPlaylist","DrawerMenu","mapStateToProps","user","playlists","open","hasAboutPage","state","props","uw","uwave","Boolean","getAboutPageComponent","mapDispatchToProps","onShowAbout","onShowServerList","onShowSettings","onShowPlaylist","onDrawerClose","dispatch","enhance","object"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,qCAA5C;AACA,SAASC,oBAAT,QAAqC,8BAArC;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,kCAA/C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,kBAAkBX,yBAAyB;AAC/CY,QAAMV,mBADyC;AAE/CW,aAAWV,iBAFoC;AAG/CW,QAAMR,oBAHyC;AAI/CS,gBAAc,sBAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9B,QAAMC,KAAKD,MAAME,KAAjB;AACA,WAAOC,QAAQF,MAAMA,GAAGG,qBAAH,EAAd,CAAP;AACD;AAP8C,CAAzB,CAAxB;;AAUA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYvB,mBAAmB;AACxDwB,iBAAalB,WAD2C;AAExDmB,sBAAkBhB,gBAFsC;AAGxDiB,oBAAgBrB,cAHwC;AAIxDsB,oBAAgBjB,YAJwC;AAKxDkB,mBAAe;AAAA,aAAMpB,UAAU,KAAV,CAAN;AAAA;AALyC,GAAnB,EAMpCqB,QANoC,CAAZ;AAAA,CAA3B;;AAQA,IAAMC,UAAUjC,QACdC,WAAW;AAAEsB,SAAOrB,UAAUgC;AAAnB,CAAX,CADc,EAEd7B,QAAQU,eAAR,EAAyBW,kBAAzB,CAFc,CAAhB;AAKA,eAAeO,QAAQnB,UAAR,CAAf","sourcesContent":["import compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from '../../selectors/userSelectors';\nimport { playlistsSelector } from '../../selectors/playlistSelectors';\nimport { toggleSettings, toggleAbout } from '../../actions/OverlayActionCreators';\nimport { drawerIsOpenSelector } from '../selectors/drawerSelectors';\nimport { setDrawer } from '../actions/DrawerActionCreators';\nimport { toggleServerList, openPlaylist } from '../actions/OverlayActionCreators';\nimport DrawerMenu from '../components/DrawerMenu';\n\nconst mapStateToProps = createStructuredSelector({\n  user: currentUserSelector,\n  playlists: playlistsSelector,\n  open: drawerIsOpenSelector,\n  hasAboutPage: (state, props) => {\n    const uw = props.uwave;\n    return Boolean(uw && uw.getAboutPageComponent());\n  },\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onShowAbout: toggleAbout,\n  onShowServerList: toggleServerList,\n  onShowSettings: toggleSettings,\n  onShowPlaylist: openPlaylist,\n  onDrawerClose: () => setDrawer(false),\n}, dispatch);\n\nconst enhance = compose(\n  getContext({ uwave: PropTypes.object }),\n  connect(mapStateToProps, mapDispatchToProps),\n);\n\nexport default enhance(DrawerMenu);\n"],"file":"DrawerMenu.js"}