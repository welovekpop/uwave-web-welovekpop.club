{"version":3,"sources":["mobile/containers/MainView.js"],"names":["bindActionCreators","createStructuredSelector","connect","selectPanel","toggleRoomHistory","set","mediaSelector","startTimeSelector","sizeSelector","waitlistSizeSelector","positionSelector","waitlistPositionSelector","playlistsSelector","videoEnabledSelector","openDrawer","openUsersDrawer","MainView","mapStateToProps","selected","state","selectedPanel","videoEnabled","media","startTime","waitlistPosition","waitlistSize","playlists","mapDispatchToProps","onTabChange","onOpenRoomHistory","onOpenDrawer","onOpenWaitlist","onEnableVideo","dispatch"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,WAAT,QAA4B,yCAA5B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,GAAT,QAAoB,sCAApB;AACA,SACEC,aADF,EAEEC,iBAFF,QAGO,gCAHP;AAIA,SACEC,gBAAgBC,oBADlB,EAEEC,oBAAoBC,wBAFtB,QAGO,mCAHP;AAIA,SAASC,iBAAT,QAAkC,mCAAlC;AACA,SAASC,oBAAT,QAAqC,kCAArC;;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,iCAA5C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,kBAAkBhB,yBAAyB;AAC/CiB,YAAU;AAAA,WAASC,MAAMC,aAAf;AAAA,GADqC;AAE/CC,gBAAcR,oBAFiC;AAG/CS,SAAOhB,aAHwC;AAI/CiB,aAAWhB,iBAJoC;AAK/CiB,oBAAkBb,wBAL6B;AAM/Cc,gBAAchB,oBANiC;AAO/CiB,aAAWd;AAPoC,CAAzB,CAAxB;;AAUA,IAAMe,qBAAqB,SAArBA,kBAAqB;AAAA,SAAY3B,mBAAmB;AACxD4B,iBAAazB,WAD2C;AAExD0B,uBAAmBzB,iBAFqC;AAGxD0B,kBAAchB,UAH0C;AAIxDiB,oBAAgBhB,eAJwC;AAKxDiB,mBAAe;AAAA,aAAM3B,IAAI,cAAJ,EAAoB,IAApB,CAAN;AAAA;AALyC,GAAnB,EAMpC4B,QANoC,CAAZ;AAAA,CAA3B;;AAQA,eAAe/B,QAAQe,eAAR,EAAyBU,kBAAzB,EAA6CX,QAA7C,CAAf","file":"MainView.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { selectPanel } from '../../actions/PanelSelectActionCreators';\nimport { toggleRoomHistory } from '../../actions/OverlayActionCreators';\nimport { set } from '../../actions/SettingsActionCreators';\nimport {\n  mediaSelector,\n  startTimeSelector,\n} from '../../selectors/boothSelectors';\nimport {\n  sizeSelector as waitlistSizeSelector,\n  positionSelector as waitlistPositionSelector,\n} from '../../selectors/waitlistSelectors';\nimport { playlistsSelector } from '../../selectors/playlistSelectors';\nimport { videoEnabledSelector } from '../../selectors/settingSelectors';\n\nimport { openDrawer, openUsersDrawer } from '../actions/DrawerActionCreators';\nimport MainView from '../components/MainView';\n\nconst mapStateToProps = createStructuredSelector({\n  selected: state => state.selectedPanel,\n  videoEnabled: videoEnabledSelector,\n  media: mediaSelector,\n  startTime: startTimeSelector,\n  waitlistPosition: waitlistPositionSelector,\n  waitlistSize: waitlistSizeSelector,\n  playlists: playlistsSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onTabChange: selectPanel,\n  onOpenRoomHistory: toggleRoomHistory,\n  onOpenDrawer: openDrawer,\n  onOpenWaitlist: openUsersDrawer,\n  onEnableVideo: () => set('videoEnabled', true),\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainView);\n"]}