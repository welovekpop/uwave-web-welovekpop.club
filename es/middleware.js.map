{"version":3,"sources":["middleware.js"],"names":["path","defaultFs","trumpet","router","serveStatic","injectConfig","transform","config","select","createWriteStream","end","JSON","stringify","injectTitle","title","injectResetKey","key","uwaveWebClient","uw","options","basePath","join","__dirname","fs","clientOptions","clientRouter","mobile","req","res","createReadStream","pipe","get","apiUrl","params","json","use"],"mappings":"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","file":"middleware.js","sourcesContent":["import * as path from 'path';\nimport * as defaultFs from 'fs';\nimport trumpet from 'trumpet';\nimport router from 'router';\nimport serveStatic from 'connect-gzip-static';\n\nfunction injectConfig(transform, config) {\n  transform.select('#u-wave-config')\n    .createWriteStream()\n    .end(JSON.stringify(config));\n}\n\nfunction injectTitle(transform, title) {\n  transform.select('title')\n    .createWriteStream()\n    .end(title);\n}\n\nfunction injectResetKey(transform, key) {\n  transform.select('#reset-data')\n    .createWriteStream()\n    .end(key);\n}\n\nexport default function uwaveWebClient(uw, options = {}) {\n  const {\n    basePath = path.join(__dirname, '../public'),\n    fs = defaultFs, // Should only be used by the dev server.\n    title = 'Ã¼Wave',\n    ...clientOptions\n  } = options;\n\n  const clientRouter = router();\n\n  const mobile = (req, res) => {\n    const transform = trumpet();\n    injectTitle(transform, title);\n    injectConfig(transform, clientOptions);\n\n    fs.createReadStream(path.join(basePath, 'm.html'), 'utf8')\n      .pipe(transform)\n      .pipe(res);\n  };\n\n  return clientRouter\n    .get('/', (req, res) => {\n      const transform = trumpet();\n      injectTitle(transform, title);\n      injectConfig(transform, clientOptions);\n\n      fs.createReadStream(path.join(basePath, 'index.html'), 'utf8')\n        .pipe(transform)\n        .pipe(res);\n    })\n    .get('/reset/:key', (req, res) => {\n      const transform = trumpet();\n      injectTitle(transform, title);\n      injectConfig(transform, { apiUrl: clientOptions.apiUrl });\n      injectResetKey(transform, req.params.key);\n\n      fs.createReadStream(path.join(basePath, 'password-reset.html'), 'utf8')\n        .pipe(transform)\n        .pipe(res);\n    })\n    .get('/m', mobile)\n    .get('/m.html', mobile)\n    .get('/u-wave-web-config.json', (req, res) => {\n      res.json(clientOptions);\n    })\n    .use(serveStatic(basePath));\n}\n"]}