{"version":3,"sources":["utils/commands/staff.js"],"names":["register","findUser","log","userListSelector","isManagerSelector","setUserRole","roleNames","user","default","normal","none","special","moderator","mod","manager","admin","guard","action","username","role","dispatch","getState"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,iBAAnC;AACA,SAASC,GAAT,QAAoB,kCAApB;;AAEA,SACEC,gBADF,EAEEC,iBAFF,QAGO,+BAHP;AAIA,SAASC,WAAT,QAA4B,wCAA5B;;AAEA,IAAMC,YAAY;AAChBC,QAAM,CADU;AAEhBC,WAAS,CAFO;AAGhBC,UAAQ,CAHQ;AAIhBC,QAAM,CAJU;AAKhBC,WAAS,CALO;AAMhBC,aAAW,CANK;AAOhBC,OAAK,CAPW;AAQhBC,WAAS,CARO;AAShBC,SAAO;AATS,CAAlB;AAWAf,SACE,UADF,EAEE,sEAFF,EAGE;AACEgB,SAAOZ,iBADT;AAEEa,UAAQ,gBAACC,QAAD,EAAWC,IAAX;AAAA,WAAoB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClD,UAAI,CAACH,QAAL,EAAe;AACb,eAAOE,SAASlB,IAAI,sCAAJ,CAAT,CAAP;AACD;AACD,UAAI,EAAEiB,QAAQb,SAAV,CAAJ,EAA0B;AACxB,eAAOc,SAASlB,mCACegB,QADf,qDAAT,CAAP;AAGD;AACD,UAAMX,OAAON,SACXE,iBAAiBkB,UAAjB,CADW,EAEXH,QAFW,CAAb;AAIA,aAAOE,SAASf,YAAYE,IAAZ,EAAkBD,UAAUa,IAAV,CAAlB,CAAT,CAAP;AACD,KAdO;AAAA;AAFV,CAHF","file":"staff.js","sourcesContent":["import { register, findUser } from '../ChatCommands';\nimport { log } from '../../actions/ChatActionCreators';\n\nimport {\n  userListSelector,\n  isManagerSelector\n} from '../../selectors/userSelectors';\nimport { setUserRole } from '../../actions/ModerationActionCreators';\n\nconst roleNames = {\n  user: 0,\n  default: 0,\n  normal: 0,\n  none: 0,\n  special: 1,\n  moderator: 2,\n  mod: 2,\n  manager: 3,\n  admin: 4\n};\nregister(\n  'userrole',\n  'Assign a different role to a user. Syntax: \"/userrole username role\"',\n  {\n    guard: isManagerSelector,\n    action: (username, role) => (dispatch, getState) => {\n      if (!username) {\n        return dispatch(log('Provide a user to promote or demote.'));\n      }\n      if (!(role in roleNames)) {\n        return dispatch(log(\n          `Provide a role to promote ${username} to. [user, special, moderator, manager, admin]`\n        ));\n      }\n      const user = findUser(\n        userListSelector(getState()),\n        username\n      );\n      return dispatch(setUserRole(user, roleNames[role]));\n    }\n  }\n);\n"]}