{"version":3,"sources":["utils/commands/staff.js"],"names":["register","findUser","log","rolesSelector","userListSelector","isModeratorSelector","isManagerSelector","addUserRole","removeUserRole","toggleAdmin","action","dispatch","getState","allRoles","Object","keys","roles","filter","role","indexOf","permissions","join","guard","username","user"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,iBAAnC;AACA,SAASC,GAAT,QAAoB,kCAApB;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,QAIO,+BAJP;AAKA,SACEC,WADF,EAEEC,cAFF,QAGO,wCAHP;AAIA,SAASC,WAAT,QAA4B,qCAA5B;AAEAT,SACE,OADF,EAEE,aAFF,EAGE;AACEU,UAAQ;AAAA,WAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpC,UAAMC,WAAWC,OAAOC,IAAP,CAAYZ,cAAcS,UAAd,CAAZ,CAAjB;AACA,UAAMI,QAAQH,SAASI,MAAT,CAAgB;AAAA,eAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA/B;AAAA,OAAhB,CAAd;AACA,UAAMC,cAAcP,SAASI,MAAT,CAAgB;AAAA,eAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA/B;AAAA,OAAhB,CAApB;AAEAR,eAAST,gBAAcc,MAAMK,IAAN,CAAW,IAAX,CAAd,CAAT;AACA,aAAOV,SAAST,sBAAoBkB,YAAYC,IAAZ,CAAiB,IAAjB,CAApB,CAAT,CAAP;AACD,KAPO;AAAA;AADV,CAHF;AAeArB,SACE,SADF,EAEE,2DAFF,EAGE;AACEsB,SAAOhB,iBADT;AAEEI,UAAQ,gBAACa,QAAD,EAAWL,IAAX;AAAA,WAAoB,UAACP,QAAD,EAAWC,QAAX,EAAwB;AAClD,UAAI,CAACW,QAAL,EAAe;AACb,eAAOZ,SAAST,IAAI,sCAAJ,CAAT,CAAP;AACD;;AACD,UAAI,CAACgB,IAAL,EAAW;AACT,eAAOP,SAAST,qCAAmCqB,QAAnC,mCAAT,CAAP;AACD;;AACD,UAAMC,OAAOvB,SACXG,iBAAiBQ,UAAjB,CADW,EAEXW,QAFW,CAAb;AAIA,aAAOZ,SAASJ,YAAYiB,IAAZ,EAAkBN,IAAlB,CAAT,CAAP;AACD,KAZO;AAAA;AAFV,CAHF;AAqBAlB,SACE,YADF,EAEE,gEAFF,EAGE;AACEsB,SAAOhB,iBADT;AAEEI,UAAQ,gBAACa,QAAD,EAAWL,IAAX;AAAA,WAAoB,UAACP,QAAD,EAAWC,QAAX,EAAwB;AAClD,UAAI,CAACW,QAAL,EAAe;AACb,eAAOZ,SAAST,IAAI,sCAAJ,CAAT,CAAP;AACD;;AACD,UAAI,CAACgB,IAAL,EAAW;AACT,eAAOP,SAAST,kCAAgCqB,QAAhC,mCAAT,CAAP;AACD;;AACD,UAAMC,OAAOvB,SACXG,iBAAiBQ,UAAjB,CADW,EAEXW,QAFW,CAAb;AAIA,aAAOZ,SAASH,eAAegB,IAAf,EAAqBN,IAArB,CAAT,CAAP;AACD,KAZO;AAAA;AAFV,CAHF;AAqBAlB,SACE,OADF,EAEE,gCAFF,EAGE;AACEsB,SAAOjB,mBADT;AAEEK,UAAQD;AAFV,CAHF","sourcesContent":["import { register, findUser } from '../ChatCommands';\nimport { log } from '../../actions/ChatActionCreators';\n\nimport { rolesSelector } from '../../selectors/configSelectors';\nimport {\n  userListSelector,\n  isModeratorSelector,\n  isManagerSelector,\n} from '../../selectors/userSelectors';\nimport {\n  addUserRole,\n  removeUserRole,\n} from '../../actions/ModerationActionCreators';\nimport { toggleAdmin } from '../../actions/OverlayActionCreators';\n\nregister(\n  'roles',\n  'List roles.',\n  {\n    action: () => (dispatch, getState) => {\n      const allRoles = Object.keys(rolesSelector(getState()));\n      const roles = allRoles.filter(role => role.indexOf('.') === -1);\n      const permissions = allRoles.filter(role => role.indexOf('.') !== -1);\n\n      dispatch(log(`Roles: ${roles.join(', ')}`));\n      return dispatch(log(`Permissions: ${permissions.join(', ')}`));\n    },\n  },\n);\n\nregister(\n  'addrole',\n  'Assign a role to a user. Syntax: \"/addrole username role\"',\n  {\n    guard: isManagerSelector,\n    action: (username, role) => (dispatch, getState) => {\n      if (!username) {\n        return dispatch(log('Provide a user to promote or demote.'));\n      }\n      if (!role) {\n        return dispatch(log(`Provide a role to assign to ${username}. Use /roles for a full list.`));\n      }\n      const user = findUser(\n        userListSelector(getState()),\n        username,\n      );\n      return dispatch(addUserRole(user, role));\n    },\n  },\n);\n\nregister(\n  'removerole',\n  'Remove a role from a user. Syntax: \"/removerole username role\"',\n  {\n    guard: isManagerSelector,\n    action: (username, role) => (dispatch, getState) => {\n      if (!username) {\n        return dispatch(log('Provide a user to promote or demote.'));\n      }\n      if (!role) {\n        return dispatch(log(`Provide a role assign to ${username}. Use /roles for a full list.`));\n      }\n      const user = findUser(\n        userListSelector(getState()),\n        username,\n      );\n      return dispatch(removeUserRole(user, role));\n    },\n  },\n);\n\nregister(\n  'admin',\n  'Open the administration panel.',\n  {\n    guard: isModeratorSelector,\n    action: toggleAdmin,\n  },\n);\n"],"file":"staff.js"}