{"version":3,"sources":["reducers/errors.js"],"names":["reduce","state","action","type","payload","error","length","message","slice"],"mappings":"AAAA,eAAe,SAASA,MAAT,GAAyC;AAAA,MAAzBC,KAAyB,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAAA,MAC9CC,IAD8C,GACrBD,MADqB,CAC9CC,IAD8C;AAAA,MACxCC,OADwC,GACrBF,MADqB,CACxCE,OADwC;AAAA,MAC/BC,KAD+B,GACrBH,MADqB,CAC/BG,KAD+B;;AAEtD,MAAIA,KAAJ,EAAW;AACT;AACA,QAAIJ,MAAMK,MAAN,KAAiB,CAAjB,IAAsBL,MAAMA,MAAMK,MAAN,GAAe,CAArB,MAA4BF,QAAQG,OAA9D,EAAuE;AACrE,uBAAYN,KAAZ,GAAmBG,QAAQG,OAA3B;AACD;AACF,GALD,MAKO,IAAIJ,SAAS,gBAAb,EAA+B;AACpC,WAAOF,MAAMO,KAAN,CAAY,CAAZ,CAAP;AACD;AACD,SAAOP,KAAP;AACD","file":"errors.js","sourcesContent":["export default function reduce(state = [], action = {}) {\n  const { type, payload, error } = action;\n  if (error) {\n    // Avoid adding the same error over and over\n    if (state.length === 0 || state[state.length - 1] !== payload.message) {\n      return [ ...state, payload.message ];\n    }\n  } else if (type === 'errors/DISMISS') {\n    return state.slice(1);\n  }\n  return state;\n}\n"]}