{"version":3,"sources":["reducers/users.js"],"names":["except","indexBy","combineReducers","INIT_STATE","LOAD_ONLINE_USERS","USER_JOIN","USER_LEAVE","CHANGE_USERNAME","USER_ADD_ROLES","USER_REMOVE_ROLES","RECEIVE_GUEST_COUNT","updateUser","state","userID","update","guestsReducer","action","type","payload","guests","usersReducer","users","user","_id","username","roles","filter","indexOf","role","reduce"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SACEC,iBADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,cALF,EAMEC,iBANF,EAQEC,mBARF,QASO,gCATP;;AAWA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AACzC,MAAIF,MAAMC,MAAN,CAAJ,EAAmB;AAAA;;AACjB,wBACKD,KADL,6BAEGC,MAFH,IAEYC,OAAOF,MAAMC,MAAN,CAAP,CAFZ;AAID;;AACD,SAAOD,KAAP;AACD;;AAED,SAASG,aAAT,CAAuBH,KAAvB,EAAkCI,MAAlC,EAA+C;AAAA,MAAxBJ,KAAwB;AAAxBA,SAAwB,GAAhB,CAAgB;AAAA;;AAAA,MAAbI,MAAa;AAAbA,UAAa,GAAJ,EAAI;AAAA;;AAC7C,MAAIA,OAAOC,IAAP,KAAgBd,UAApB,EAAgC;AAC9B,WAAOa,OAAOE,OAAP,CAAeC,MAAtB;AACD;;AACD,MAAIH,OAAOC,IAAP,KAAgBP,mBAApB,EAAyC;AACvC,WAAOM,OAAOE,OAAP,CAAeC,MAAtB;AACD;;AACD,SAAOP,KAAP;AACD;;AAED,SAASQ,YAAT,CAAsBR,KAAtB,EAAkCI,MAAlC,EAA+C;AAAA;;AAAA,MAAzBJ,KAAyB;AAAzBA,SAAyB,GAAjB,EAAiB;AAAA;;AAAA,MAAbI,MAAa;AAAbA,UAAa,GAAJ,EAAI;AAAA;;AAAA,gBACnBA,MADmB;AAAA,MACrCC,IADqC,WACrCA,IADqC;AAAA,MAC/BC,OAD+B,WAC/BA,OAD+B;;AAE7C,UAAQD,IAAR;AACE,SAAKb,iBAAL;AACA;AACA;AACA;AACA;AACA;AACE,0BACKQ,KADL,EAEKX,QAAQiB,QAAQG,KAAhB,EAAuB,KAAvB,CAFL;;AAIF,SAAKhB,SAAL;AACE,0BACKO,KADL,6BAEGM,QAAQI,IAAR,CAAaC,GAFhB,IAEsBL,QAAQI,IAF9B;;AAIF,SAAKhB,UAAL;AACE,aAAON,OAAOY,KAAP,EAAcM,QAAQL,MAAtB,CAAP;;AACF,SAAKN,eAAL;AACE,aAAOI,WAAWC,KAAX,EAAkBM,QAAQL,MAA1B,EAAkC;AAAA,4BACpCS,IADoC;AAEvCE,oBAAUN,QAAQM;AAFqB;AAAA,OAAlC,CAAP;;AAIF,SAAKhB,cAAL;AACE,aAAOG,WAAWC,KAAX,EAAkBM,QAAQL,MAA1B,EAAkC;AAAA,4BACpCS,IADoC;AAEvCG,iBAAWH,KAAKG,KAAhB,QAA0BP,QAAQO,KAAlC;AAFuC;AAAA,OAAlC,CAAP;;AAIF,SAAKhB,iBAAL;AACE,aAAOE,WAAWC,KAAX,EAAkBM,QAAQL,MAA1B,EAAkC;AAAA,4BACpCS,IADoC;AAEvCG,iBAAOH,KAAKG,KAAL,CAAWC,MAAX,CAAkB;AAAA,mBAAQR,QAAQO,KAAR,CAAcE,OAAd,CAAsBC,IAAtB,MAAgC,CAAC,CAAzC;AAAA,WAAlB;AAFgC;AAAA,OAAlC,CAAP;;AAIF;AACE,aAAOhB,KAAP;AAlCJ;AAoCD;;AAED,IAAMiB,SAAS3B,gBAAgB;AAC7BiB,UAAQJ,aADqB;AAE7BM,SAAOD;AAFsB,CAAhB,CAAf;AAKA,eAAeS,MAAf","sourcesContent":["import except from 'except';\nimport indexBy from 'index-by';\nimport { combineReducers } from 'redux';\n\nimport { INIT_STATE } from '../constants/actionTypes/auth';\nimport {\n  LOAD_ONLINE_USERS,\n  USER_JOIN,\n  USER_LEAVE,\n  CHANGE_USERNAME,\n  USER_ADD_ROLES,\n  USER_REMOVE_ROLES,\n\n  RECEIVE_GUEST_COUNT,\n} from '../constants/actionTypes/users';\n\nfunction updateUser(state, userID, update) {\n  if (state[userID]) {\n    return {\n      ...state,\n      [userID]: update(state[userID]),\n    };\n  }\n  return state;\n}\n\nfunction guestsReducer(state = 0, action = {}) {\n  if (action.type === INIT_STATE) {\n    return action.payload.guests;\n  }\n  if (action.type === RECEIVE_GUEST_COUNT) {\n    return action.payload.guests;\n  }\n  return state;\n}\n\nfunction usersReducer(state = {}, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_ONLINE_USERS:\n    // this is merged in instead of replacing the state, because sometimes the\n    // JOIN event from the current user comes in before the LOAD event, and then\n    // the current user is sometimes excluded from the state. it looks like this\n    // approach could cause problems, too, though.\n    // TODO maybe replace state instead anyway and merge in the current user?\n      return {\n        ...state,\n        ...indexBy(payload.users, '_id'),\n      };\n    case USER_JOIN:\n      return {\n        ...state,\n        [payload.user._id]: payload.user,\n      };\n    case USER_LEAVE:\n      return except(state, payload.userID);\n    case CHANGE_USERNAME:\n      return updateUser(state, payload.userID, user => ({\n        ...user,\n        username: payload.username,\n      }));\n    case USER_ADD_ROLES:\n      return updateUser(state, payload.userID, user => ({\n        ...user,\n        roles: [...user.roles, ...payload.roles],\n      }));\n    case USER_REMOVE_ROLES:\n      return updateUser(state, payload.userID, user => ({\n        ...user,\n        roles: user.roles.filter(role => payload.roles.indexOf(role) === -1),\n      }));\n    default:\n      return state;\n  }\n}\n\nconst reduce = combineReducers({\n  guests: guestsReducer,\n  users: usersReducer,\n});\n\nexport default reduce;\n"],"file":"users.js"}