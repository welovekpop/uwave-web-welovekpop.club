{"version":3,"sources":["reducers/settings.js"],"names":["merge","LOAD_SETTINGS","CHANGE_SETTING","initialState","language","mentionSound","muted","videoEnabled","videoSize","volume","notifications","userJoin","userLeave","userNameChanged","skip","reduce","state","action","type","payload","clone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,WAAlB;AACA,SACEC,aADF,EAEEC,cAFF,QAGO,mCAHP;;AAKA,IAAMC,eAAe;AACnBC,YAAU,IADS;AAEnBC,gBAAc,IAFK;AAGnBC,SAAO,KAHY;AAInBC,gBAAc,IAJK;AAKnBC,aAAW,OALQ;AAMnBC,UAAQ,CANW;AAOnBC,iBAAe;AACbC,cAAU,IADG;AAEbC,eAAW,IAFE;AAGbC,qBAAiB,IAHJ;AAIbC,UAAM;AAJO;AAPI,CAArB;;AAeA,eAAe,SAASC,MAAT,GAAmD;AAAA,MAAnCC,KAAmC,uEAA3Bb,YAA2B;AAAA,MAAbc,MAAa,uEAAJ,EAAI;AAAA,MACxDC,IADwD,GACtCD,MADsC,CACxDC,IADwD;AAAA,MAClDC,OADkD,GACtCF,MADsC,CAClDE,OADkD;;AAEhE,UAAQD,IAAR;AACE,SAAKjB,aAAL;AACA;AACE,0BACKE,YADL,EAEKgB,OAFL;AAGE;AACA;AACA;AACAT,uBAAeS,uBACVhB,aAAaO,aADH,EAEVS,QAAQT,aAFE,IAGXP,aAAaO;AATnB;AAWF,SAAKR,cAAL;AACE,aAAOF,MAAMgB,KAAN,EAAaG,OAAb,EAAsB,EAAEC,OAAO,IAAT,EAAtB,CAAP;AACF;AACE,aAAOJ,KAAP;AAjBJ;AAmBD","file":"settings.js","sourcesContent":["import merge from 'deepmerge';\nimport {\n  LOAD_SETTINGS,\n  CHANGE_SETTING,\n} from '../constants/actionTypes/settings';\n\nconst initialState = {\n  language: null,\n  mentionSound: true,\n  muted: false,\n  videoEnabled: true,\n  videoSize: 'large',\n  volume: 0,\n  notifications: {\n    userJoin: true,\n    userLeave: true,\n    userNameChanged: true,\n    skip: true,\n  },\n};\n\nexport default function reduce(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_SETTINGS:\n    // Loading settings defaults to the initial state.\n      return {\n        ...initialState,\n        ...payload,\n        // Merge notification settings if we have new ones.\n        // Needed if new notification types were added since the last time\n        // settings were saved to localStorage.\n        notifications: payload ? {\n          ...initialState.notifications,\n          ...payload.notifications,\n        } : initialState.notifications,\n      };\n    case CHANGE_SETTING:\n      return merge(state, payload, { clone: true });\n    default:\n      return state;\n  }\n}\n"]}