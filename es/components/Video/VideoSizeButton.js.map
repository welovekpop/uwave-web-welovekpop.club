{"version":3,"sources":["components/Video/VideoSizeButton.js"],"names":["React","PropTypes","compose","translate","Tooltip","IconButton","SvgIcon","connect","createStructuredSelector","videoSizeSelector","toggleVideoSize","paths","small","large","VideoSizeButton","t","videoSize","onToggleVideoSize","propTypes","func","isRequired","oneOf","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,eAAT,QAAgC,sCAAhC;;AAEA;AACA,IAAMC,QAAQ;AACZ;AACAC,SAAO,4DAFK;AAGZ;AACAC,SAAO;AAJK,CAAd;;AAOA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,MACtBC,CADsB,QACtBA,CADsB;AAAA,MAEtBC,SAFsB,QAEtBA,SAFsB;AAAA,MAGtBC,iBAHsB,QAGtBA,iBAHsB;AAAA,cAKrB,OALqB;AAAA,WAMbD,cAAc,OAAd,GACHD,EAAE,4BAAF,CADG,GAEHA,EAAE,2BAAF,CARgB;AAAA,eAUV;AAVU,kBAYnB,UAZmB;AAAA,aAYCE;AAZD,kBAajB,OAbiB;AAAA,aAaD;AAbC;AAAA,OAcPN,MAAMK,SAAN,CAdO;AAAA,cAcoB;AAdpB;AAAA,CAAxB;;AAoBAF,gBAAgBI,SAAhB,2CAA4B;AAC1BH,KAAGd,UAAUkB,IAAV,CAAeC,UADQ;AAE1BJ,aAAWf,UAAUoB,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,EAAoCD,UAFrB;AAG1BH,qBAAmBhB,UAAUkB,IAAV,CAAeC;AAHR,CAA5B;;AAMA,IAAME,kBAAkBd,yBAAyB;AAC/CQ,aAAWP;AADoC,CAAzB,CAAxB;AAGA,IAAMc,qBAAqB,SAArBA,kBAAqB;AAAA,SAAa;AACtCN,uBAAmB;AAAA,aAAMO,SAASd,iBAAT,CAAN;AAAA;AADmB,GAAb;AAAA,CAA3B;;AAIA,eAAeR,QACbC,WADa,EAEbI,QACEe,eADF,EAEEC,kBAFF,CAFa,EAMbT,eANa,CAAf","file":"VideoSizeButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { translate } from 'react-i18next';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport SvgIcon from 'material-ui/SvgIcon';\n// State-related imports\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { videoSizeSelector } from '../../selectors/settingSelectors';\nimport { toggleVideoSize } from '../../actions/PlaybackActionCreators';\n\n// Stolen from YouTube\nconst paths = {\n  // Currently small, show \"enlarge\" icon:\n  small: 'm 28,11 0,14 -20,0 0,-14 z m -18,2 16,0 0,10 -16,0 0,-10 z',\n  // Currently large, show smaller icon: (\"ensmall\"?! ðŸ˜‚)\n  large: 'm 26,13 0,10 -16,0 0,-10 z m -14,2 12,0 0,6 -12,0 0,-6 z',\n};\n\nconst VideoSizeButton = ({\n  t,\n  videoSize,\n  onToggleVideoSize,\n}) => (\n  <Tooltip\n    title={videoSize === 'large'\n      ? t('settings.disableLargeVideo')\n      : t('settings.enableLargeVideo')\n    }\n    placement=\"bottom\"\n  >\n    <IconButton onClick={onToggleVideoSize}>\n      <SvgIcon viewBox=\"6 6 24 24\">\n        <path d={paths[videoSize]} fillRule=\"evenodd\" />\n      </SvgIcon>\n    </IconButton>\n  </Tooltip>\n);\n\nVideoSizeButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  videoSize: PropTypes.oneOf(['small', 'large']).isRequired,\n  onToggleVideoSize: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  videoSize: videoSizeSelector,\n});\nconst mapDispatchToProps = dispatch => ({\n  onToggleVideoSize: () => dispatch(toggleVideoSize()),\n});\n\nexport default compose(\n  translate(),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(VideoSizeButton);\n"]}