{"version":3,"sources":["components/Video/VideoToolbar.js"],"names":["React","PropTypes","translate","Tooltip","IconButton","EnterFullscreenIcon","ExitFullscreenIcon","VideoSizeButton","renderFullscreenIcon","isFullscreen","VideoToolbar","t","children","onFullscreenEnter","onFullscreenExit","propTypes","func","isRequired","bool","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAGiB,KAAC,kBAAD,K;;;;AAAyB,KAAC,mBAAD,K;;AAD1C,IAAMC,uBAAuB,SAAvBA,oBAAuB;AAAA,SAC3BC,2BAD2B;AAAA,CAA7B;;;;AAaI,KAAC,eAAD,K;;AATJ,IAAMC,eAAe,SAAfA,YAAe;AAAA,MACnBC,CADmB,SACnBA,CADmB;AAAA,MAEnBC,QAFmB,SAEnBA,QAFmB;AAAA,MAGnBH,YAHmB,SAGnBA,YAHmB;AAAA,MAInBI,iBAJmB,SAInBA,iBAJmB;AAAA,MAKnBC,gBALmB,SAKnBA,gBALmB;AAAA,SAOnB;AAAK,eAAU;AAAf,aACGF,QADH,SAGE,KAAC,OAAD;AACE,WAAOH,eACHE,EAAE,4BAAF,CADG,GAEHA,EAAE,2BAAF,CAHN;AAKE,eAAU;AALZ,aAOE,KAAC,UAAD;AAAY,aAASF,eAAeK,gBAAf,GAAkCD;AAAvD,aACGL,qBAAqBC,YAArB,CADH,CAPF,CAHF,CAPmB;AAAA,CAArB;;AAwBAC,aAAaK,SAAb,2CAAyB;AACvBJ,KAAGV,UAAUe,IAAV,CAAeC,UADK;AAEvBJ,qBAAmBZ,UAAUe,IAAV,CAAeC,UAFX;AAGvBH,oBAAkBb,UAAUe,IAAV,CAAeC,UAHV;AAIvBR,gBAAcR,UAAUiB,IAJD;;AAKvB;;;AAGAN,YAAUX,UAAUkB;AARG,CAAzB;AAWA,eAAejB,YAAYQ,YAAZ,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EnterFullscreenIcon from '@material-ui/icons/Fullscreen';\nimport ExitFullscreenIcon from '@material-ui/icons/FullscreenExit';\n\nimport VideoSizeButton from './VideoSizeButton';\n\nconst renderFullscreenIcon = isFullscreen => (\n  isFullscreen ? <ExitFullscreenIcon /> : <EnterFullscreenIcon />\n);\n\nconst VideoToolbar = ({\n  t,\n  children,\n  isFullscreen,\n  onFullscreenEnter,\n  onFullscreenExit,\n}) => (\n  <div className=\"Video-overlay Video-toolbar\">\n    {children}\n    <VideoSizeButton />\n    <Tooltip\n      title={isFullscreen\n        ? t('settings.disableFullscreen')\n        : t('settings.enableFullscreen')\n      }\n      placement=\"bottom-end\"\n    >\n      <IconButton onClick={isFullscreen ? onFullscreenExit : onFullscreenEnter}>\n        {renderFullscreenIcon(isFullscreen)}\n      </IconButton>\n    </Tooltip>\n  </div>\n);\n\nVideoToolbar.propTypes = {\n  t: PropTypes.func.isRequired,\n  onFullscreenEnter: PropTypes.func.isRequired,\n  onFullscreenExit: PropTypes.func.isRequired,\n  isFullscreen: PropTypes.bool,\n  /**\n   * Optional further video tools.\n   */\n  children: PropTypes.node,\n};\n\nexport default translate()(VideoToolbar);\n"],"file":"VideoToolbar.js"}