{"version":3,"sources":["components/Video/VideoBackdrop.js"],"names":["React","PropTypes","supportsBlur","window","CSS","supports","CSSVideoBackdrop","url","propTypes","string","isRequired","svgWidth","svgHeight","svgBlur","SVGVideoBackdrop","VideoBackdrop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;AAGA,SAASC,YAAT,GAAwB;AACtB;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAACA,OAAOC,GAA7C,EAAkD;AAChD,WAAO,KAAP;AACD;;AAED,SACEA,IAAIC,QAAJ,CAAa,QAAb,EAAuB,WAAvB,KACAD,IAAIC,QAAJ,CAAa,gBAAb,EAA+B,WAA/B,CAFF;AAID;AAED;;;;;AAGA,IAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,SACvB;AACE,eAAU,qCADZ;AAEE,SAAKA,GAFP;AAGE,SAAI;AAHN,IADuB;AAAA,CAAzB;;AAQAD,iBAAiBE,SAAjB,2CAA6B;AAC3BD,OAAKN,UAAUQ,MAAV,CAAiBC;AADK,CAA7B;AAIA,IAAMC,WAAW,GAAjB;AACA,IAAMC,YAAY,GAAlB;AACA,IAAMC,UAAU,EAAhB;AAEA;;;;;;AAMM,yBACE;AAAQ,MAAG;AAAX,WACE;AAAgB,gBAAiBA,OAAjB,SAA4BA,OAA5C;AAAuD,UAAO;AAA9D,EADF,CADF,C;;AAHN,IAAMC,mBAAmB,SAAnBA,gBAAmB;AAAA,MAAGP,GAAH,SAAGA,GAAH;AAAA,SACvB;AAAK,eAAU;AAAf,aACE;AAAK,sBAAgBI,QAAhB,SAA4BC;AAAjC,oBAME;AACE,eAAWL,GADb;AAEE,OAAGM,UAAU,CAAC,CAFhB;AAGE,OAAGA,UAAU,CAAC,CAHhB;AAIE,YAAO,YAJT;AAKE,WAAOF,WAAYE,UAAU,CAL/B;AAME,YAAQD,YAAaC,UAAU;AANjC,IANF,CADF,CADuB;AAAA,CAAzB;;AAoBAC,iBAAiBN,SAAjB,2CAA6B;AAC3BD,OAAKN,UAAUQ,MAAV,CAAiBC;AADK,CAA7B,M,CAIA;AACA;;AACA,IAAMK,gBAAgBb,iBAAiBI,gBAAjB,GAAoCQ,gBAA1D;AAEA,eAAeC,aAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Check if the browser supports the CSS `blur()` filter.\n */\nfunction supportsBlur() {\n  // Be conservative if we're not in the browser.\n  if (typeof window === 'undefined' || !window.CSS) {\n    return false;\n  }\n\n  return (\n    CSS.supports('filter', 'blur(1em)') ||\n    CSS.supports('-webkit-filter', 'blur(1em)')\n  );\n}\n\n/**\n * A Video backdrop, blurred using the CSS `blur()` filter.\n */\nconst CSSVideoBackdrop = ({ url }) => (\n  <img\n    className=\"VideoBackdrop VideoBackdrop--blurry\"\n    src={url}\n    alt=\"\"\n  />\n);\n\nCSSVideoBackdrop.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nconst svgWidth = 800;\nconst svgHeight = 480;\nconst svgBlur = 20;\n\n/**\n * A Video backdrop, blurred using an SVG filter.\n */\nconst SVGVideoBackdrop = ({ url }) => (\n  <div className=\"VideoBackdrop VideoBackdrop--svg\">\n    <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`}>\n      <defs>\n        <filter id=\"blur\">\n          <feGaussianBlur stdDeviation={`${svgBlur} ${svgBlur}`} result=\"blur\" />\n        </filter>\n      </defs>\n      <image\n        xlinkHref={url}\n        x={svgBlur * -3}\n        y={svgBlur * -3}\n        filter=\"url(#blur)\"\n        width={svgWidth + (svgBlur * 6)}\n        height={svgHeight + (svgBlur * 6)}\n      />\n    </svg>\n  </div>\n);\n\nSVGVideoBackdrop.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\n// If the browser supports the CSS `blur()` filter, we can use the <img>-style\n// backdrop. Otherwise, fall back to the SVG backdrop.\nconst VideoBackdrop = supportsBlur() ? CSSVideoBackdrop : SVGVideoBackdrop;\n\nexport default VideoBackdrop;\n"],"file":"VideoBackdrop.js"}