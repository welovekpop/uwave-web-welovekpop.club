{"version":3,"sources":["components/Chat/Message.js"],"names":["cx","React","PropTypes","compose","pure","withHandlers","CircularProgress","userCardable","Avatar","Username","compile","DeleteButton","MessageTimestamp","enhance","onDeleteClick","props","onDelete","_id","onUsernameClick","event","preventDefault","openUserCard","user","Message","text","parsedText","inFlight","isMention","timestamp","compileOptions","deletable","avatar","children","date","Date","className","propTypes","object","isRequired","string","array","bool","number","func","shape","availableEmoji","emojiImages"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport withHandlers from 'recompose/withHandlers';\nimport { CircularProgress } from 'material-ui/Progress';\nimport userCardable from '../../utils/userCardable';\nimport Avatar from '../Avatar';\nimport Username from '../Username';\nimport compile from './Markup/compile';\nimport DeleteButton from './DeleteButton';\nimport MessageTimestamp from './MessageTimestamp';\n\nconst enhance = compose(\n  pure,\n  userCardable(),\n  withHandlers({\n    onDeleteClick: props => () =>\n      props.onDelete(props._id),\n    onUsernameClick: props => (event) => {\n      event.preventDefault();\n      props.openUserCard(props.user);\n    },\n  }),\n);\n\nconst Message = ({\n  user,\n  text,\n  parsedText,\n  inFlight,\n  isMention,\n  timestamp,\n  compileOptions,\n  deletable,\n  onDeleteClick,\n  onUsernameClick,\n}) => {\n  let avatar;\n  if (inFlight) {\n    avatar = (\n      <div className=\"ChatMessage-avatar\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    avatar = (\n      <Avatar\n        className=\"ChatMessage-avatar\"\n        user={user}\n      />\n    );\n  }\n\n  const children = parsedText ? compile(parsedText, compileOptions) : text;\n\n  const date = new Date(timestamp);\n\n  const className = cx(\n    'ChatMessage',\n    inFlight && 'ChatMessage--loading',\n    isMention && 'ChatMessage--mention',\n  );\n  return (\n    <div className={className}>\n      {avatar}\n      <div className=\"ChatMessage-content\">\n        <div className=\"ChatMessage-hover\">\n          {deletable && <DeleteButton onDelete={onDeleteClick} />}\n          <MessageTimestamp date={date} />\n        </div>\n        <button\n          className=\"ChatMessage-username ChatMessage-cardable\"\n          onClick={onUsernameClick}\n        >\n          <Username user={user} />\n        </button>\n        <span className=\"ChatMessage-text\">{children}</span>\n      </div>\n    </div>\n  );\n};\n\nMessage.propTypes = {\n  user: PropTypes.object.isRequired,\n  text: PropTypes.string.isRequired,\n  parsedText: PropTypes.array.isRequired,\n  inFlight: PropTypes.bool,\n  timestamp: PropTypes.number.isRequired,\n  isMention: PropTypes.bool.isRequired,\n  deletable: PropTypes.bool.isRequired,\n  onDeleteClick: PropTypes.func,\n  compileOptions: PropTypes.shape({\n    availableEmoji: PropTypes.array,\n    emojiImages: PropTypes.object,\n  }),\n  onUsernameClick: PropTypes.func.isRequired,\n};\n\nexport default enhance(Message);\n"],"file":"Message.js"}