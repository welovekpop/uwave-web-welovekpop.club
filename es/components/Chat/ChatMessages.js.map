{"version":3,"sources":["components/Chat/ChatMessages.js"],"names":["React","PropTypes","LogMessage","Message","JoinMessage","LeaveMessage","NameChangedMessage","Motd","ScrollDownNotice","specialTypes","log","userJoin","userLeave","userNameChanged","ChatMessages","state","isScrolledToBottom","handleResize","scrollToBottom","handleScroll","setState","handleScrollToBottom","event","preventDefault","refContainer","container","componentDidMount","shouldScrollToBottom","window","addEventListener","componentWillReceiveProps","componentDidUpdate","componentWillUnmount","removeEventListener","el","scrollTop","scrollHeight","lastMessage","lastElementChild","neededSize","offsetHeight","renderMotd","props","motd","compileOptions","renderMessage","msg","SpecialMessage","type","_id","canDeleteMessages","onDeleteMessage","render","messages","map","Component","propTypes","array","bool","func","shape","availableEmoji","emojiImages","object"],"mappings":"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","file":"ChatMessages.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from './LogMessage';\nimport Message from './Message';\nimport JoinMessage from './NotificationMessages/JoinMessage';\nimport LeaveMessage from './NotificationMessages/LeaveMessage';\nimport NameChangedMessage from './NotificationMessages/NameChangedMessage';\nimport Motd from './Motd';\nimport ScrollDownNotice from './ScrollDownNotice';\n\nconst specialTypes = {\n  log: LogMessage,\n  userJoin: JoinMessage,\n  userLeave: LeaveMessage,\n  userNameChanged: NameChangedMessage\n};\n\nexport default class ChatMessages extends React.Component {\n  static propTypes = {\n    messages: PropTypes.array,\n    motd: PropTypes.array,\n    canDeleteMessages: PropTypes.bool,\n    onDeleteMessage: PropTypes.func,\n    compileOptions: PropTypes.shape({\n      availableEmoji: PropTypes.array,\n      emojiImages: PropTypes.object\n    })\n  };\n\n  state = {\n    isScrolledToBottom: true\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n    this.shouldScrollToBottom = false;\n\n    // A window resize may affect the available space.\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.handleResize);\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.shouldScrollToBottom = this.isScrolledToBottom();\n  }\n\n  componentDidUpdate() {\n    // Keep the chat scrolled to the bottom after a new message is addded.\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  scrollToBottom() {\n    const el = this.container;\n    el.scrollTop = el.scrollHeight;\n  }\n\n  isScrolledToBottom() {\n    const el = this.container;\n    const lastMessage = el.lastElementChild;\n    if (lastMessage) {\n      const neededSize = el.scrollTop + el.offsetHeight + lastMessage.offsetHeight;\n      return neededSize >= el.scrollHeight - 20;\n    }\n    return true;\n  }\n\n  handleResize = () => {\n    if (this.state.isScrolledToBottom) {\n      this.scrollToBottom();\n    }\n  };\n\n  handleScroll = () => {\n    this.setState({\n      isScrolledToBottom: this.isScrolledToBottom()\n    });\n  };\n\n  handleScrollToBottom = (event) => {\n    event.preventDefault();\n    this.scrollToBottom();\n  };\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  renderMotd() {\n    if (!this.props.motd) {\n      return null;\n    }\n    return (\n      <Motd compileOptions={this.props.compileOptions}>\n        {this.props.motd}\n      </Motd>\n    );\n  }\n\n  renderMessage(msg) {\n    const SpecialMessage = specialTypes[msg.type];\n    if (SpecialMessage) {\n      return (\n        <SpecialMessage\n          key={msg._id}\n          {...msg}\n        />\n      );\n    }\n\n    return (\n      <Message\n        key={msg._id}\n        compileOptions={this.props.compileOptions}\n        deletable={this.props.canDeleteMessages}\n        onDelete={this.props.onDeleteMessage}\n        {...msg}\n      />\n    );\n  }\n\n  render() {\n    const { isScrolledToBottom } = this.state;\n\n    return (\n      <div\n        ref={this.refContainer}\n        className=\"ChatMessages\"\n        onScroll={this.handleScroll}\n      >\n        <ScrollDownNotice\n          show={!isScrolledToBottom}\n          onClick={this.handleScrollToBottom}\n        />\n        {this.renderMotd()}\n        {this.props.messages.map(this.renderMessage, this)}\n      </div>\n    );\n  }\n}\n"]}