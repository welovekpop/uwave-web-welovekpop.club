{"version":3,"sources":["components/Chat/Markup/compile.js"],"names":["React","Bold","Code","Italic","StrikeThrough","Mention","GroupMention","Link","Emoji","compile","tree","opts","availableEmoji","emojiImages","map","node","i","type","user","mention","group","href","text","indexOf","name","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAkC;AAAA,MAAXC,IAAW,uEAAJ,EAAI;AAAA,6BAI3CA,IAJ2C,CAE7CC,cAF6C;AAAA,MAE7CA,cAF6C,wCAE5B,EAF4B;AAAA,0BAI3CD,IAJ2C,CAG7CE,WAH6C;AAAA,MAG7CA,WAH6C,qCAG/B,EAH+B;;;AAM/C,SAAOH,KAAKI,GAAL,CAAS,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3B,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAOA,IAAP;AACD;;AAED;AACA,YAAQA,KAAKE,IAAb;AACE,WAAK,SAAL;AACE,eAAOF,KAAKG,IAAL,QACF,OADE;AAAA,gBACoBH,KAAKG;AADzB,WACWF,CADX,SAEF,YAFE;AAAA,iBAE0BD,KAAKI,OAF/B;AAAA,iBAE+CJ,KAAKK;AAFpD,WAEgBJ,CAFhB,CAAP;AAGF,WAAK,MAAL;AACE,oBAAQ,IAAR;AAAA,gBAA2BD,KAAKM;AAAhC,WAAkBL,CAAlB,EAAuCD,KAAKO,IAA5C;AACF,WAAK,OAAL;AACE,YAAIV,eAAeW,OAAf,CAAuBR,KAAKS,IAA5B,MAAsC,CAAC,CAAvC,IAA4CT,KAAKS,IAAL,IAAaX,WAA7D,EAA0E;AACxE,sBACG,KADH;AAAA,kBAGUE,KAAKS,IAHf;AAAA,mBAIWX,YAAYE,KAAKS,IAAjB;AAJX,aAESR,CAFT;AAOD;AACD,qBAAWD,KAAKS,IAAhB;AACF,WAAK,QAAL;AACE,oBAAQ,MAAR,MAAoBR,CAApB,EAAwBP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAxB;AACF,WAAK,MAAL;AACE,oBAAQ,IAAR,MAAkBK,CAAlB,EAAsBP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAtB;AACF,WAAK,MAAL;AACE,oBAAQ,IAAR,MAAkBK,CAAlB,EAAsBP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAtB;AACF,WAAK,QAAL;AACE,oBAAQ,aAAR,MAA2BK,CAA3B,EAA+BP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAA/B;AACF;AACE,eAAOF,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAP;AA3BJ;AA6BA;AACD,GApCM,CAAP;AAqCD","file":"compile.js","sourcesContent":["import React from 'react';\nimport Bold from './Bold';\nimport Code from './Code';\nimport Italic from './Italic';\nimport StrikeThrough from './StrikeThrough';\nimport Mention from './Mention';\nimport GroupMention from './GroupMention';\nimport Link from './Link';\nimport Emoji from './Emoji';\n\nexport default function compile(tree, opts = {}) {\n  const {\n    availableEmoji = [],\n    emojiImages = {},\n  } = opts;\n\n  return tree.map((node, i) => {\n    if (typeof node === 'string') {\n      return node;\n    }\n\n    /* eslint-disable react/no-array-index-key */\n    switch (node.type) {\n      case 'mention':\n        return node.user\n          ? <Mention key={i} user={node.user} />\n          : <GroupMention key={i} group={node.mention} users={node.group} />;\n      case 'link':\n        return <Link key={i} href={node.href}>{node.text}</Link>;\n      case 'emoji':\n        if (availableEmoji.indexOf(node.name) !== -1 && node.name in emojiImages) {\n          return (\n            <Emoji\n              key={i}\n              name={node.name}\n              image={emojiImages[node.name]}\n            />\n          );\n        }\n        return `:${node.name}:`;\n      case 'italic':\n        return <Italic key={i}>{compile(node.content, opts)}</Italic>;\n      case 'bold':\n        return <Bold key={i}>{compile(node.content, opts)}</Bold>;\n      case 'code':\n        return <Code key={i}>{compile(node.content, opts)}</Code>;\n      case 'strike':\n        return <StrikeThrough key={i}>{compile(node.content, opts)}</StrikeThrough>;\n      default:\n        return compile(node.content, opts);\n    }\n    /* eslint-enable react/no-array-index-key */\n  });\n}\n"]}