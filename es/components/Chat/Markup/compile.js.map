{"version":3,"sources":["components/Chat/Markup/compile.js"],"names":["React","Bold","Code","Italic","StrikeThrough","Mention","GroupMention","Link","Emoji","compile","tree","opts","availableEmoji","emojiImages","map","node","i","type","user","mention","group","href","text","indexOf","name","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAAkC;AAAA,MAAXA,IAAW;AAAXA,QAAW,GAAJ,EAAI;AAAA;;AAAA,cAI3CA,IAJ2C;AAAA,mCAE7CC,cAF6C;AAAA,MAE7CA,cAF6C,qCAE5B,EAF4B;AAAA,gCAG7CC,WAH6C;AAAA,MAG7CA,WAH6C,kCAG/B,EAH+B;AAM/C,SAAOH,KAAKI,GAAL,CAAS,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC3B,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,aAAOA,IAAP;AACD;AAED;;;AACA,YAAQA,KAAKE,IAAb;AACE,WAAK,SAAL;AACE,eAAOF,KAAKG,IAAL,GACH,KAAC,OAAD;AAAiB,gBAAMH,KAAKG;AAA5B,WAAcF,CAAd,CADG,GAEH,KAAC,YAAD;AAAsB,iBAAOD,KAAKI,OAAlC;AAA2C,iBAAOJ,KAAKK;AAAvD,WAAmBJ,CAAnB,CAFJ;;AAGF,WAAK,MAAL;AACE,eAAO,KAAC,IAAD;AAAc,gBAAMD,KAAKM;AAAzB,WAAWL,CAAX,EAAgCD,KAAKO,IAArC,CAAP;;AACF,WAAK,OAAL;AACE,YAAIV,eAAeW,OAAf,CAAuBR,KAAKS,IAA5B,MAAsC,CAAC,CAAvC,IAA4CT,KAAKS,IAAL,IAAaX,WAA7D,EAA0E;AACxE,iBACE,KAAC,KAAD;AAEE,kBAAME,KAAKS,IAFb;AAGE,mBAAOX,YAAYE,KAAKS,IAAjB;AAHT,aACOR,CADP,CADF;AAOD;;AACD,qBAAWD,KAAKS,IAAhB;;AACF,WAAK,QAAL;AACE,eAAO,KAAC,MAAD,MAAaR,CAAb,EAAiBP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAjB,CAAP;;AACF,WAAK,MAAL;AACE,eAAO,KAAC,IAAD,MAAWK,CAAX,EAAeP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAf,CAAP;;AACF,WAAK,MAAL;AACE,eAAO,KAAC,IAAD,MAAWK,CAAX,EAAeP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAf,CAAP;;AACF,WAAK,QAAL;AACE,eAAO,KAAC,aAAD,MAAoBK,CAApB,EAAwBP,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAxB,CAAP;;AACF;AACE,eAAOF,QAAQM,KAAKU,OAAb,EAAsBd,IAAtB,CAAP;AA3BJ;AA6BA;;AACD,GApCM,CAAP;AAqCD","sourcesContent":["import React from 'react';\nimport Bold from './Bold';\nimport Code from './Code';\nimport Italic from './Italic';\nimport StrikeThrough from './StrikeThrough';\nimport Mention from './Mention';\nimport GroupMention from './GroupMention';\nimport Link from './Link';\nimport Emoji from './Emoji';\n\nexport default function compile(tree, opts = {}) {\n  const {\n    availableEmoji = [],\n    emojiImages = {},\n  } = opts;\n\n  return tree.map((node, i) => {\n    if (typeof node === 'string') {\n      return node;\n    }\n\n    /* eslint-disable react/no-array-index-key */\n    switch (node.type) {\n      case 'mention':\n        return node.user\n          ? <Mention key={i} user={node.user} />\n          : <GroupMention key={i} group={node.mention} users={node.group} />;\n      case 'link':\n        return <Link key={i} href={node.href}>{node.text}</Link>;\n      case 'emoji':\n        if (availableEmoji.indexOf(node.name) !== -1 && node.name in emojiImages) {\n          return (\n            <Emoji\n              key={i}\n              name={node.name}\n              image={emojiImages[node.name]}\n            />\n          );\n        }\n        return `:${node.name}:`;\n      case 'italic':\n        return <Italic key={i}>{compile(node.content, opts)}</Italic>;\n      case 'bold':\n        return <Bold key={i}>{compile(node.content, opts)}</Bold>;\n      case 'code':\n        return <Code key={i}>{compile(node.content, opts)}</Code>;\n      case 'strike':\n        return <StrikeThrough key={i}>{compile(node.content, opts)}</StrikeThrough>;\n      default:\n        return compile(node.content, opts);\n    }\n    /* eslint-enable react/no-array-index-key */\n  });\n}\n"],"file":"compile.js"}