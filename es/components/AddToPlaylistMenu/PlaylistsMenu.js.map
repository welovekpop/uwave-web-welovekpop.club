{"version":3,"sources":["components/AddToPlaylistMenu/PlaylistsMenu.js"],"names":["find","React","PropTypes","translate","Popover","MenuList","MenuItem","ListItemIcon","ListItemText","CreatePlaylistIcon","ActiveIcon","enhance","PlaylistsMenu","handleSelect","e","item","playlistID","props","value","onClose","onSelect","playlists","pl","_id","render","t","position","onCreatePlaylist","left","x","top","y","map","playlist","active","name","String","size","Component","propTypes","func","isRequired","arrayOf","object","shape","number"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,qBAAnC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,qBAA3C;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,IAAMC,UAAUR,WAAhB;;gBAwCa,Y,mBAAc,kB;;iBASV,Y,mBACE,U;;IAhDbS,a;;;;;;;;;;;;wJAaJC,Y,GAAe,UAACC,CAAD,EAAIC,IAAJ,EAAa;AAC1B,UAAMC,aAAaD,KAAKE,KAAL,CAAWC,KAA9B;AACA,YAAKD,KAAL,CAAWE,OAAX;AACA,YAAKF,KAAL,CAAWG,QAAX,CAAoBpB,KAAK,MAAKiB,KAAL,CAAWI,SAAhB,EAA2B;AAAA,eAAMC,GAAGC,GAAH,KAAWP,UAAjB;AAAA,OAA3B,CAApB;AACD,K;;;0BAEDQ,M,qBAAS;AAAA;;AAAA,iBAOH,KAAKP,KAPF;AAAA,QAELQ,CAFK,UAELA,CAFK;AAAA,QAGLJ,SAHK,UAGLA,SAHK;AAAA,QAILK,QAJK,UAILA,QAJK;AAAA,QAKLP,OALK,UAKLA,OALK;AAAA,QAMLQ,gBANK,UAMLA,gBANK;;;AASP,gBACG,OADH;AAAA;AAAA,sBAGoB,EAAEC,MAAMF,SAASG,CAAjB,EAAoBC,KAAKJ,SAASK,CAAlC,EAHpB;AAAA,uBAIoB,gBAJpB;AAAA,eAKaZ;AALb,oBAOK,QAPL,mBAQO,QARP;AAAA,eAQyBQ;AARzB,oBASS,YATT;AAAA,eAS+BF,EAAE,eAAF;AAT/B,eAYOJ,UAAUW,GAAV,CAAc;AAAA,kBACZ,QADY;AAAA,mBAED,4BAFC;AAAA,iBAIF,OAAKnB;AAJH,SAGNoB,SAASV,GAHH,EAMV,CAAC,CAACU,SAASC,MAAX,SANU,OAWV,YAXU;AAAA,iBAWYD,SAASE;AAXrB,eAYV,YAZU;AAAA,mBAYa,6BAZb;AAAA,iBAYoDC,OAAOH,SAASI,IAAT,IAAiB,CAAxB;AAZpD;AAAA,KAAd,CAZP;AA8BD,G;;;EA1DyBpC,MAAMqC,S;;AAA5B1B,a,CACG2B,S,2CAAY;AACjBd,KAAGvB,UAAUsC,IAAV,CAAeC,UADD;AAEjBtB,WAASjB,UAAUsC,IAAV,CAAeC,UAFP;AAGjBrB,YAAUlB,UAAUsC,IAAV,CAAeC,UAHR;AAIjBd,oBAAkBzB,UAAUsC,IAAV,CAAeC,UAJhB;AAKjBpB,aAAWnB,UAAUwC,OAAV,CAAkBxC,UAAUyC,MAA5B,CALM;AAMjBjB,YAAUxB,UAAU0C,KAAV,CAAgB;AACxBf,OAAG3B,UAAU2C,MADW;AAExBd,OAAG7B,UAAU2C;AAFW,GAAhB;AANO,C;;;AA4DrB,eAAelC,QAAQC,aAAR,CAAf","file":"PlaylistsMenu.js","sourcesContent":["import find from 'array-find';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Popover from 'material-ui/Popover';\nimport { MenuList, MenuItem } from 'material-ui/Menu';\nimport { ListItemIcon, ListItemText } from 'material-ui/List';\nimport CreatePlaylistIcon from 'material-ui-icons/Add';\nimport ActiveIcon from 'material-ui-icons/Check';\n\nconst enhance = translate();\n\nclass PlaylistsMenu extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n    playlists: PropTypes.arrayOf(PropTypes.object),\n    position: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n    }),\n  };\n\n  handleSelect = (e, item) => {\n    const playlistID = item.props.value;\n    this.props.onClose();\n    this.props.onSelect(find(this.props.playlists, pl => pl._id === playlistID));\n  };\n\n  render() {\n    const {\n      t,\n      playlists,\n      position,\n      onClose,\n      onCreatePlaylist,\n    } = this.props;\n\n    return (\n      <Popover\n        open\n        anchorPosition={{ left: position.x, top: position.y }}\n        anchorReference=\"anchorPosition\"\n        onClose={onClose}\n      >\n        <MenuList>\n          <MenuItem onClick={onCreatePlaylist}>\n            <ListItemText primary={t('playlists.new')} />\n            <ListItemIcon><CreatePlaylistIcon /></ListItemIcon>\n          </MenuItem>\n          {playlists.map(playlist => (\n            <MenuItem\n              className=\"AddToPlaylistMenu-playlist\"\n              key={playlist._id}\n              onClick={this.handleSelect}\n            >\n              {!!playlist.active && (\n                <ListItemIcon>\n                  <ActiveIcon />\n                </ListItemIcon>\n              )}\n              <ListItemText primary={playlist.name} />\n              <ListItemText className=\"AddToPlaylistMenu-smallIcon\" primary={String(playlist.size || 0)} />\n            </MenuItem>\n          ))}\n        </MenuList>\n      </Popover>\n    );\n  }\n}\n\nexport default enhance(PlaylistsMenu);\n"]}