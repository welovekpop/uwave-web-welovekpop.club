{"version":3,"sources":["components/AddToPlaylistMenu/PlaylistsMenu.js"],"names":["find","React","PropTypes","translate","Paper","Menu","MenuItem","CreatePlaylistIcon","RenderToLayer","MENU_HEIGHT","MENU_WIDTH","RANDOM_MUI_PADDING","SCROLLBAR_WIDTH","NEW_PLAYLIST","positionInsideWindow","position","expectedHeight","constrained","x","y","h","Math","min","w","window","innerHeight","innerWidth","menuStyle","textAlign","zIndex","menuItemStyle","WebkitAppearance","enhance","PlaylistsMenu","handleSelect","e","item","playlistID","props","value","onCreatePlaylist","onClose","onSelect","playlists","pl","_id","renderLayer","t","fixedPosition","length","left","top","width","map","playlist","name","size","active","render","Component","propTypes","func","isRequired","arrayOf","object","shape","number"],"mappings":"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","file":"PlaylistsMenu.js","sourcesContent":["import find from 'array-find';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Paper from 'material-ui/Paper';\nimport Menu from 'material-ui/Menu';\nimport MenuItem from 'material-ui/MenuItem';\nimport CreatePlaylistIcon from 'material-ui/svg-icons/content/add';\n// ðŸ˜±\nimport RenderToLayer from 'material-ui/internal/RenderToLayer';\n\nconst MENU_HEIGHT = 320;\nconst MENU_WIDTH = 280;\n\nconst RANDOM_MUI_PADDING = 8;\nconst SCROLLBAR_WIDTH = 7;\n\nconst NEW_PLAYLIST = {};\n\nconst positionInsideWindow = (position, expectedHeight) => {\n  const constrained = { x: position.x, y: position.y };\n  const h = Math.min(expectedHeight, MENU_HEIGHT);\n  const w = MENU_WIDTH;\n  if (position.y + h >= window.innerHeight) {\n    // position at the bottom of the screen\n    constrained.y = window.innerHeight - h;\n  }\n  if (position.x + w >= window.innerWidth) {\n    // position to the left-hand side of the anchor, instead of the right-hand side\n    constrained.x -= w;\n  }\n  return constrained;\n};\n\nconst menuStyle = {\n  textAlign: 'left',\n  zIndex: 30\n};\nconst menuItemStyle = {\n  WebkitAppearance: 'initial'\n};\n\nconst enhance = translate();\n\nclass PlaylistsMenu extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n    playlists: PropTypes.arrayOf(PropTypes.object),\n    position: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    })\n  };\n\n  handleSelect = (e, item) => {\n    const playlistID = item.props.value;\n    if (playlistID === NEW_PLAYLIST) {\n      this.props.onCreatePlaylist();\n      return;\n    }\n    this.props.onClose();\n    this.props.onSelect(find(this.props.playlists, pl => pl._id === playlistID));\n  };\n\n  renderLayer = () => {\n    const { playlists, position, t } = this.props;\n    const fixedPosition = positionInsideWindow(position, (playlists.length + 1) * 48);\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          left: fixedPosition.x,\n          top: fixedPosition.y,\n          width: MENU_WIDTH + RANDOM_MUI_PADDING + SCROLLBAR_WIDTH\n        }}\n      >\n        <Paper>\n          <Menu\n            style={menuStyle}\n            maxHeight={MENU_HEIGHT}\n            width={MENU_WIDTH}\n            autoWidth={false}\n            onItemTouchTap={this.handleSelect}\n          >\n            <MenuItem\n              style={menuItemStyle}\n              value={NEW_PLAYLIST}\n              leftIcon={<CreatePlaylistIcon color=\"#fff\" />}\n              primaryText={t('playlists.new')}\n            />\n            {playlists.map(playlist => (\n              <MenuItem\n                key={playlist._id}\n                style={menuItemStyle}\n                value={playlist._id}\n                primaryText={playlist.name}\n                secondaryText={`${playlist.size || 0}`}\n                checked={!!playlist.active}\n              />\n            ))}\n          </Menu>\n        </Paper>\n      </div>\n    );\n  };\n\n  render() {\n    const { onClose } = this.props;\n    return (\n      <RenderToLayer\n        open\n        componentClickAway={onClose}\n        render={this.renderLayer}\n      />\n    );\n  }\n}\n\nexport default enhance(PlaylistsMenu);\n"]}