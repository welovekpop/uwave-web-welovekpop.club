{"version":3,"sources":["components/ReCaptcha/index.js"],"names":["React","loadScript","CircularProgress","InternalCaptcha","GRECAPTCHA_API","onloadCallbackName","onloadCallbacks","loadReCaptcha","cb","push","onload","forEach","fn","window","grecaptcha","ReCaptcha","state","componentDidMount","setState","render","props","Component"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,IAAMC,iBAAiB,yCAAvB;AACA,IAAMC,qBAAqB,qBAA3B;AACA,IAAMC,kBAAkB,EAAxB;;AAEA,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACzBP,aAAcG,cAAd,gBAAuCC,kBAAvC;AACAC,kBAAgBG,IAAhB,CAAqBD,EAArB;AACD;;AAED,SAASE,MAAT,GAAkB;AAChBJ,kBAAgBK,OAAhB,CAAwB;AAAA,WAAMC,GAAGC,OAAOC,UAAV,CAAN;AAAA,GAAxB;AACD;;;;AAqBY,KAAC,gBAAD;AAAkB,aAAU;AAA5B,E;;IAnBQC,S;;;;;;;;;;;;8GACnBC,K,GAAQ;AACNF,kBAAYD,OAAOC;AADb,K;;;;;SAIRG,iB,gCAAoB;AAAA;;AAClB,QAAI,CAAC,KAAKD,KAAL,CAAWF,UAAhB,EAA4B;AAC1B,UAAI,OAAOD,OAAOR,kBAAP,CAAP,KAAsC,UAA1C,EAAsD;AACpDQ,eAAOR,kBAAP,IAA6BK,MAA7B;AACD;;AAEDH,oBAAc,UAACO,UAAD,EAAgB;AAC5B,eAAKI,QAAL,CAAc;AAAEJ;AAAF,SAAd;AACD,OAFD;AAGD;AACF,G;;SAEDK,M,qBAAS;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWF,UAAhB,EAA4B;AAC1B;AACD;;AACD,WACE,oBAAC,eAAD,eACM,KAAKM,KADX;AAEE,kBAAY,KAAKJ,KAAL,CAAWF;AAFzB,OADF;AAMD,G;;;EA3BoCd,MAAMqB,S;;SAAxBN,S","sourcesContent":["import React from 'react';\nimport loadScript from 'load-script2';\nimport { CircularProgress } from 'material-ui/Progress';\nimport InternalCaptcha from './ReCaptcha';\n\nconst GRECAPTCHA_API = 'https://www.google.com/recaptcha/api.js';\nconst onloadCallbackName = 'grecaptchaOnload__$';\nconst onloadCallbacks = [];\n\nfunction loadReCaptcha(cb) {\n  loadScript(`${GRECAPTCHA_API}?onload=${onloadCallbackName}&render=explicit`);\n  onloadCallbacks.push(cb);\n}\n\nfunction onload() {\n  onloadCallbacks.forEach(fn => fn(window.grecaptcha));\n}\n\nexport default class ReCaptcha extends React.Component {\n  state = {\n    grecaptcha: window.grecaptcha,\n  };\n\n  componentDidMount() {\n    if (!this.state.grecaptcha) {\n      if (typeof window[onloadCallbackName] !== 'function') {\n        window[onloadCallbackName] = onload;\n      }\n\n      loadReCaptcha((grecaptcha) => {\n        this.setState({ grecaptcha });\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.grecaptcha) {\n      return <CircularProgress className=\"ReCaptcha-spinner\" />;\n    }\n    return (\n      <InternalCaptcha\n        {...this.props}\n        grecaptcha={this.state.grecaptcha}\n      />\n    );\n  }\n}\n"],"file":"index.js"}