{"version":3,"sources":["components/ReCaptcha/index.js"],"names":["React","loadScript","Loader","InternalCaptcha","GRECAPTCHA_API","onloadCallbackName","onloadCallbacks","window","forEach","fn","grecaptcha","loadReCaptcha","cb","push","ReCaptcha","state","componentDidMount","setState","render","props","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,IAAMC,iBAAiB,yCAAvB;AACA,IAAMC,qBAAqB,qBAA3B;AACA,IAAMC,kBAAkB,EAAxB;;AAEA,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,SAAOF,kBAAP,IAA6B,YAAM;AACjCC,oBAAgBE,OAAhB,CAAwB;AAAA,aAAMC,GAAGF,OAAOG,UAAV,CAAN;AAAA,KAAxB;AACD,GAFD;AAGD;;AAED,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AACzBX,aAAcG,cAAd,gBAAuCC,kBAAvC;AACAC,kBAAgBO,IAAhB,CAAqBD,EAArB;AACD;;gBAiBa,M;aAAiB,mB;QAAyB;;;IAfnCE,S;;;;;;;;;;;;wJACnBC,K,GAAQ;AACNL,kBAAYH,OAAOG;AADb,K;;;sBAIRM,iB,gCAAoB;AAAA;;AAClB,QAAI,CAAC,KAAKD,KAAL,CAAWL,UAAhB,EAA4B;AAC1BC,oBAAc,UAACD,UAAD,EAAgB;AAC5B,eAAKO,QAAL,CAAc,EAAEP,sBAAF,EAAd;AACD,OAFD;AAGD;AACF,G;;sBAEDQ,M,qBAAS;AACP,QAAI,CAAC,KAAKH,KAAL,CAAWL,UAAhB,EAA4B;AAC1B;AACD;AACD,WACE,oBAAC,eAAD,eACM,KAAKS,KADX;AAEE,kBAAY,KAAKJ,KAAL,CAAWL;AAFzB,OADF;AAMD,G;;;EAvBoCV,MAAMoB,S;;eAAxBN,S","file":"index.js","sourcesContent":["import React from 'react';\nimport loadScript from 'load-script2';\n\nimport Loader from '../Loader';\n\nimport InternalCaptcha from './ReCaptcha';\n\nconst GRECAPTCHA_API = 'https://www.google.com/recaptcha/api.js';\nconst onloadCallbackName = 'grecaptchaOnload__$';\nconst onloadCallbacks = [];\n\nif (typeof window !== 'undefined') {\n  window[onloadCallbackName] = () => {\n    onloadCallbacks.forEach(fn => fn(window.grecaptcha));\n  };\n}\n\nfunction loadReCaptcha(cb) {\n  loadScript(`${GRECAPTCHA_API}?onload=${onloadCallbackName}&render=explicit`);\n  onloadCallbacks.push(cb);\n}\n\nexport default class ReCaptcha extends React.Component {\n  state = {\n    grecaptcha: window.grecaptcha,\n  };\n\n  componentDidMount() {\n    if (!this.state.grecaptcha) {\n      loadReCaptcha((grecaptcha) => {\n        this.setState({ grecaptcha });\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.grecaptcha) {\n      return <Loader className=\"ReCaptcha-spinner\" size=\"tiny\" />;\n    }\n    return (\n      <InternalCaptcha\n        {...this.props}\n        grecaptcha={this.state.grecaptcha}\n      />\n    );\n  }\n}\n"]}