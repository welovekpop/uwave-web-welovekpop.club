{"version":3,"sources":["components/TimeAgo/index.js"],"names":["React","PropTypes","translate","compose","ms","timed","translateMs","str","split","count","key","replace","parseInt","TimeAgo","t","currentTime","timestamp","secondsAgo","Math","max","floor","msString","long","time","defaultValue","propTypes","func","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,KAAP,MAAkB,mBAAlB,C,CAEA;AACA;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB;AADwB,mBAEHA,IAAIC,KAAJ,CAAU,GAAV,CAFG;AAAA,MAEjBC,KAFiB;AAAA,MAEVC,GAFU;;AAGxB,SAAO;AACLA,SAAQA,IAAIC,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAR,MADK;AAELF,WAAOG,SAASH,KAAT,EAAgB,EAAhB;AAFF,GAAP;AAID;;AAED,IAAMI,UAAU,SAAVA,OAAU,OAAmC;AAAA,MAAhCC,CAAgC,QAAhCA,CAAgC;AAAA,MAA7BC,WAA6B,QAA7BA,WAA6B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACjD,MAAMC,aAAaC,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKE,KAAL,CAAW,CAACL,cAAcC,SAAf,IAA4B,IAAvC,CAAZ,CAAnB;AACA,MAAMK,WAAWjB,GAAGa,aAAa,IAAhB,EAAsB;AAAEK,UAAM;AAAR,GAAtB,CAAjB;;AAFiD,qBAG1BhB,YAAYe,QAAZ,CAH0B;AAAA,MAGzCX,GAHyC,gBAGzCA,GAHyC;AAAA,MAGpCD,KAHoC,gBAGpCA,KAHoC;;AAIjD,SACE,yBACGK,EAAE,gBAAF,EAAoB;AACnBS,UAAMT,eAAaJ,GAAb,EAAoB;AACxBD,kBADwB;AAExBe,oBAAcH;AAFU,KAApB;AADa,GAApB,CADH,CADF;AAUD,CAdD;;AAgBAR,QAAQY,SAAR,2CAAoB;AAClBX,KAAGb,UAAUyB,IAAV,CAAeC,UADA;AAElBZ,eAAad,UAAU2B,MAAV,CAAiBD,UAFZ;AAGlBX,aAAWf,UAAU2B,MAAV,CAAiBD;AAHV,CAApB;AAMA,eAAexB,QACbD,WADa,EAEbG,OAFa,EAGbQ,OAHa,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport ms from 'ms';\n\nimport timed from '../../utils/timed';\n\n// Bit weird to do it like this perhaps, convert to an english string first and\n// then translate afterwards.\nfunction translateMs(str) {\n  // `ms` output of the form \"3 hours\"\n  const [count, key] = str.split(' ');\n  return {\n    key: `${key.replace(/s$/, '')}s`,\n    count: parseInt(count, 10),\n  };\n}\n\nconst TimeAgo = ({ t, currentTime, timestamp }) => {\n  const secondsAgo = Math.max(0, Math.floor((currentTime - timestamp) / 1000));\n  const msString = ms(secondsAgo * 1000, { long: true });\n  const { key, count } = translateMs(msString);\n  return (\n    <span>\n      {t('timeAgo.format', {\n        time: t(`timeAgo.${key}`, {\n          count,\n          defaultValue: msString,\n        }),\n      })}\n    </span>\n  );\n};\n\nTimeAgo.propTypes = {\n  t: PropTypes.func.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  timestamp: PropTypes.number.isRequired,\n};\n\nexport default compose(\n  translate(),\n  timed(),\n)(TimeAgo);\n"],"file":"index.js"}