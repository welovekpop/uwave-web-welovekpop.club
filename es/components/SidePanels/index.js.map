{"version":3,"sources":["components/SidePanels/index.js"],"names":["React","PropTypes","translate","compose","pure","Chat","RoomUserList","WaitList","Tabs","Tab","PanelTemplate","contentContainerStyle","position","subHeaderStyle","fontSize","getUsersLabel","t","listenerCount","getWaitlistLabel","size","posText","SidePanels","selected","waitlistSize","waitlistPosition","onChange","propTypes","func","isRequired","string","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,IAAMC,wBAAwB;AAC5B;AACA;AACAC,YAAU;AAHkB,CAA9B;;AAMA,IAAMC,iBAAiB;AACrBC,YAAU;AADW,CAAvB;;AAIA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,CAAD,EAAIC,aAAJ;AAAA,SAAsB,CAC1CD,EAAE,aAAF,CAD0C;AAAA,WAEnBH;AAFmB,KAEhC,KAFgC,EAGvCI,aAHuC,EAAtB;AAAA,CAAtB;;AAOA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACF,CAAD,EAAIG,IAAJ,EAAUP,QAAV,EAAuB;AAC9C,MAAIO,OAAO,CAAX,EAAc;AACZ,QAAMC,UAAUR,aAAa,CAAC,CAAd,GACTA,WAAW,CADF,WACSO,IADT,GAEZA,IAFJ;;AAIA,WAAO,CACLH,EAAE,gBAAF,CADK;AAAA,aAEkBH;AAFlB,OAEK,KAFL,EAEmCO,OAFnC,EAAP;AAID;AACD,SAAOJ,EAAE,gBAAF,CAAP;AACD,CAZD;;iBAsCO,I;;iBAOA,Y;;iBAOA,Q;;AAtCP,IAAMK,aAAa,SAAbA,UAAa;AAAA,MACjBL,CADiB,QACjBA,CADiB;AAAA,MAEjBM,QAFiB,QAEjBA,QAFiB;AAAA,MAGjBL,aAHiB,QAGjBA,aAHiB;AAAA,MAIjBM,YAJiB,QAIjBA,YAJiB;AAAA,MAKjBC,gBALiB,QAKjBA,gBALiB;AAAA,MAMjBC,QANiB,QAMjBA,QANiB;AAAA,cAQhB,IARgB;AAAA,WASRH,QATQ;AAAA,cAULG,QAVK;AAAA,2BAWQd,qBAXR;AAAA,iBAYFD;AAZE,kBAmBd,GAnBc;AAAA,eAoBH,eApBG;AAAA,WAqBNM,EAAE,YAAF,CArBM;AAAA,WAsBP;AAtBO,0BA0Bd,GA1Bc;AAAA,eA2BH,eA3BG;AAAA,WA4BND,cAAcC,CAAd,EAAiBC,aAAjB,CA5BM;AAAA,WA6BP;AA7BO,0BAiCd,GAjCc;AAAA,eAkCH,eAlCG;AAAA,WAmCNC,iBAAiBF,CAAjB,EAAoBO,YAApB,EAAkCC,gBAAlC,CAnCM;AAAA,WAoCP;AApCO;AAAA,CAAnB;;AA2CAH,WAAWK,SAAX,2CAAuB;AACrBV,KAAGf,UAAU0B,IAAV,CAAeC,UADG;AAErBN,YAAUrB,UAAU4B,MAAV,CAAiBD,UAFN;AAGrBX,iBAAehB,UAAU6B,MAAV,CAAiBF,UAHX;AAIrBL,gBAActB,UAAU6B,MAAV,CAAiBF,UAJV;AAKrBJ,oBAAkBvB,UAAU6B,MAAV,CAAiBF,UALd;AAMrBH,YAAUxB,UAAU0B,IAAV,CAAeC;AANJ,CAAvB;;AASA,eAAezB,QACbD,WADa,EAEbE,IAFa,EAGbiB,UAHa,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\n\nimport Chat from '../Chat';\nimport RoomUserList from '../../containers/RoomUserList';\nimport WaitList from '../../containers/WaitList';\n\nimport Tabs from '../Tabs';\nimport Tab from '../Tabs/Tab';\nimport PanelTemplate from './PanelTemplate';\n\nconst contentContainerStyle = {\n  // This ensures that the `position:absolute`s on divs _inside_ container\n  // elements align correctly.\n  position: 'static',\n};\n\nconst subHeaderStyle = {\n  fontSize: '125%',\n};\n\nconst getUsersLabel = (t, listenerCount) => [\n  t('users.title'),\n  <span key=\"sub\" style={subHeaderStyle}>\n    {listenerCount}\n  </span>,\n];\n\nconst getWaitlistLabel = (t, size, position) => {\n  if (size > 0) {\n    const posText = position !== -1\n      ? `${position + 1} / ${size}`\n      : size;\n\n    return [\n      t('waitlist.title'),\n      <span key=\"sub\" style={subHeaderStyle}>{posText}</span>,\n    ];\n  }\n  return t('waitlist.title');\n};\n\nconst SidePanels = ({\n  t,\n  selected,\n  listenerCount,\n  waitlistSize,\n  waitlistPosition,\n  onChange,\n}) => (\n  <Tabs\n    value={selected}\n    onChange={onChange}\n    contentContainerStyle={contentContainerStyle}\n    tabTemplate={PanelTemplate}\n  >\n    {/* NB: SidePanel-tab includes some !important styles because material-ui\n      * has an otherwise unstyleable element inside its tab bar that breaks our\n      * user and waitlist position counter elements. material-ui uses it to\n      * properly position tab labels. The overrides remove the height and\n      * padding constraints from that in-between element. */}\n    <Tab\n      className=\"SidePanel-tab\"\n      label={t('chat.title')}\n      value=\"chat\"\n    >\n      <Chat />\n    </Tab>\n    <Tab\n      className=\"SidePanel-tab\"\n      label={getUsersLabel(t, listenerCount)}\n      value=\"room\"\n    >\n      <RoomUserList />\n    </Tab>\n    <Tab\n      className=\"SidePanel-tab\"\n      label={getWaitlistLabel(t, waitlistSize, waitlistPosition)}\n      value=\"waitlist\"\n    >\n      <WaitList />\n    </Tab>\n  </Tabs>\n);\n\nSidePanels.propTypes = {\n  t: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  listenerCount: PropTypes.number.isRequired,\n  waitlistSize: PropTypes.number.isRequired,\n  waitlistPosition: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  translate(),\n  pure,\n)(SidePanels);\n"]}