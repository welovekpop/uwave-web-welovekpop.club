{"version":3,"sources":["components/SidePanels/index.js"],"names":["React","PropTypes","translate","compose","pure","withState","Tabs","Tab","Chat","RoomUserList","WaitList","PanelContainer","enhance","subHeaderStyle","fontSize","tabClasses","root","label","getUsersLabel","t","listenerCount","getWaitlistLabel","size","position","posText","SidePanels","selected","waitlistSize","waitlistPosition","setTab","event","value","indicator","propTypes","func","isRequired","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,IAAP,IAAeC,GAAf,QAA0B,qBAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,UAAUT,QACdD,WADc,EAEdG,UAAU,UAAV,EAAsB,QAAtB,EAAgC,CAAhC,CAFc,EAGdD,IAHc,CAAhB;;AAMA,IAAMS,iBAAiB;AACrBC,YAAU;AADW,CAAvB;;AAIA,IAAMC,aAAa;AACjBC,QAAM,eADW;AAEjBC,SAAO;AAFU,CAAnB;;AAKA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,CAAD,EAAIC,aAAJ;AAAA,cACnB,MAAM,QADa,cAEjBD,EAAE,aAAF,CAFiB;AAAA,WAGKN;AAHL,KAGR,KAHQ,EAIfO,aAJe;AAAA,CAAtB;;AASA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACF,CAAD,EAAIG,IAAJ,EAAUC,QAAV,EAAuB;AAC9C,MAAID,OAAO,CAAX,EAAc;AACZ,QAAME,UAAUD,aAAa,CAAC,CAAd,GACTA,WAAW,CADF,WACSD,IADT,GAEZA,IAFJ;;AAIA,gBACG,MAAM,QADT,cAEKH,EAAE,gBAAF,CAFL;AAAA,aAG2BN;AAH3B,OAGc,KAHd,EAG4CW,OAH5C;AAMD;AACD,SAAOL,EAAE,gBAAF,CAAP;AACD,CAdD;;iBAiDS,I;;iBAGA,Y;;iBAGA,Q;;AAvCT,IAAMM,aAAa,SAAbA,UAAa;AAAA,MACjBN,CADiB,QACjBA,CADiB;AAAA,MAEjBO,QAFiB,QAEjBA,QAFiB;AAAA,MAGjBN,aAHiB,QAGjBA,aAHiB;AAAA,MAIjBO,YAJiB,QAIjBA,YAJiB;AAAA,MAKjBC,gBALiB,QAKjBA,gBALiB;AAAA,MAMjBC,MANiB,QAMjBA,MANiB;AAAA,sCASd,IATc;AAAA,WAUNH,QAVM;AAAA,cAWH,kBAACI,KAAD,EAAQC,KAAR;AAAA,aAAkBF,OAAOE,KAAP,CAAlB;AAAA,KAXG;AAAA;AAAA,aAaJ;AACPf,YAAM,gBADC;AAEPgB,iBAAW;AAFJ;AAbI,kBAkBZ,GAlBY;AAAA,aAmBFjB,UAnBE;AAAA,WAoBJI,EAAE,YAAF;AApBI,WAsBZ,GAtBY;AAAA,aAuBFJ,UAvBE;AAAA,WAwBJG,cAAcC,CAAd,EAAiBC,aAAjB;AAxBI,WA0BZ,GA1BY;AAAA,aA2BFL,UA3BE;AAAA,WA4BJM,iBAAiBF,CAAjB,EAAoBQ,YAApB,EAAkCC,gBAAlC;AA5BI,oCAgCZ,cAhCY;AAAA,cAgCaF,aAAa;AAhC1B,0BAmCZ,cAnCY;AAAA,cAmCaA,aAAa;AAnC1B,0BAsCZ,cAtCY;AAAA,cAsCaA,aAAa;AAtC1B;AAAA,CAAnB;;AA6CAD,WAAWQ,SAAX,2CAAuB;AACrBd,KAAGlB,UAAUiC,IAAV,CAAeC,UADG;AAErBf,iBAAenB,UAAUmC,MAAV,CAAiBD,UAFX;AAGrBR,gBAAc1B,UAAUmC,MAAV,CAAiBD,UAHV;AAIrBP,oBAAkB3B,UAAUmC,MAAV,CAAiBD,UAJd;AAKrBT,YAAUzB,UAAUmC,MAAV,CAAiBD,UALN;AAMrBN,UAAQ5B,UAAUiC,IAAV,CAAeC;AANF,CAAvB;;AASA,eAAevB,QAAQa,UAAR,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport withState from 'recompose/withState';\nimport Tabs, { Tab } from 'material-ui/Tabs';\nimport Chat from '../Chat';\nimport RoomUserList from '../../containers/RoomUserList';\nimport WaitList from '../../containers/WaitList';\nimport PanelContainer from './PanelContainer';\n\nconst enhance = compose(\n  translate(),\n  withState('selected', 'setTab', 0),\n  pure,\n);\n\nconst subHeaderStyle = {\n  fontSize: '125%',\n};\n\nconst tabClasses = {\n  root: 'SidePanel-tab',\n  label: 'SidePanel-tabLabel',\n};\n\nconst getUsersLabel = (t, listenerCount) => (\n  <React.Fragment>\n    {t('users.title')}\n    <span key=\"sub\" style={subHeaderStyle}>\n      {listenerCount}\n    </span>\n  </React.Fragment>\n);\n\nconst getWaitlistLabel = (t, size, position) => {\n  if (size > 0) {\n    const posText = position !== -1\n      ? `${position + 1} / ${size}`\n      : size;\n\n    return (\n      <React.Fragment>\n        {t('waitlist.title')}\n        <span key=\"sub\" style={subHeaderStyle}>{posText}</span>\n      </React.Fragment>\n    );\n  }\n  return t('waitlist.title');\n};\n\nconst SidePanels = ({\n  t,\n  selected,\n  listenerCount,\n  waitlistSize,\n  waitlistPosition,\n  setTab,\n}) => (\n  <div>\n    <Tabs\n      value={selected}\n      onChange={(event, value) => setTab(value)}\n      fullWidth\n      classes={{\n        root: 'SidePanel-tabs',\n        indicator: 'SidePanel-indicator',\n      }}\n    >\n      <Tab\n        classes={tabClasses}\n        label={t('chat.title')}\n      />\n      <Tab\n        classes={tabClasses}\n        label={getUsersLabel(t, listenerCount)}\n      />\n      <Tab\n        classes={tabClasses}\n        label={getWaitlistLabel(t, waitlistSize, waitlistPosition)}\n      />\n    </Tabs>\n    <div>\n      <PanelContainer selected={selected === 0}>\n        <Chat />\n      </PanelContainer>\n      <PanelContainer selected={selected === 1}>\n        <RoomUserList />\n      </PanelContainer>\n      <PanelContainer selected={selected === 2}>\n        <WaitList />\n      </PanelContainer>\n    </div>\n  </div>\n);\n\nSidePanels.propTypes = {\n  t: PropTypes.func.isRequired,\n  listenerCount: PropTypes.number.isRequired,\n  waitlistSize: PropTypes.number.isRequired,\n  waitlistPosition: PropTypes.number.isRequired,\n  selected: PropTypes.number.isRequired,\n  setTab: PropTypes.func.isRequired,\n};\n\nexport default enhance(SidePanels);\n"]}