{"version":3,"sources":["components/PlaylistManager/Panel/PlaylistFilter.js"],"names":["cx","React","PropTypes","translate","debounce","IconButton","FilterIcon","PlaylistFilter","state","open","value","onFilter","props","handleClick","isOpen","clearFilter","setState","input","focus","handleChange","event","target","refInput","render","t","Component","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;IAEMC,c;;;;;;;;;;;;wJAMJC,K,GAAQ;AACNC,YAAM,KADA;AAENC,aAAO;AAFD,K,QAKRC,Q,GAAWP,SAAS,UAACM,KAAD,EAAW;AAC7B,YAAKE,KAAL,CAAWD,QAAX,CAAoBD,KAApB;AACD,KAFU,EAER,GAFQ,C,QAUXG,W,GAAc,YAAM;AAClB,UAAMC,SAAS,CAAC,MAAKN,KAAL,CAAWC,IAA3B;;AAEA,UAAI,CAACK,MAAL,EAAa;AACX,cAAKC,WAAL;AACD;;AAED,YAAKC,QAAL,CAAc;AACZP,cAAMK,MADM;AAEZJ,eAAO;AAFK,OAAd,EAGG,YAAM;AACP,YAAII,MAAJ,EAAY;AACV,gBAAKG,KAAL,CAAWC,KAAX;AACD;AACF,OAPD;AAQD,K,QAEDC,Y,GAAe,UAACC,KAAD,EAAW;AACxB,YAAKJ,QAAL,CAAc,EAAEN,OAAOU,MAAMC,MAAN,CAAaX,KAAtB,EAAd;AACA,YAAKC,QAAL,CAAcS,MAAMC,MAAN,CAAaX,KAA3B;AACD,K,QAEDY,Q,GAAW,UAACL,KAAD,EAAW;AACpB,YAAKA,KAAL,GAAaA,KAAb;AACD,K;;;2BA9BDF,W,0BAAc;AACZ,QAAI,KAAKP,KAAL,CAAWE,KAAX,KAAqB,EAAzB,EAA6B;AAC3B,WAAKE,KAAL,CAAWD,QAAX,CAAoB,EAApB;AACD;AACF,G;;2BA4BDY,M,qBAAS;AAAA,QACCC,CADD,GACO,KAAKZ,KADZ,CACCY,CADD;;AAEP,QAAMV,SAAS,KAAKN,KAAL,CAAWC,IAA1B;AACA;AAAA,iBACiB;AADjB,oBAEK,UAFL;AAAA,eAGe,KAAKI,WAHpB;AAAA,eAIeW,EAAE,kBAAF,CAJf;AAAA,uBAKsB;AALtB,oBAOO,UAPP;AAAA,aAOyBV,SAAS,MAAT,GAAkB,MAP3C;AAAA,kBAO8D;AAP9D,SASI;AACE,YAAK,MADP;AAEE,WAAK,KAAKQ,QAFZ;AAGE,iBAAWtB,GAAG,2BAAH,EAAgCc,UAAU,SAA1C,CAHb;AAIE,aAAO,KAAKN,KAAL,CAAWE,KAJpB;AAKE,gBAAU,KAAKS;AALjB,MATJ;AAkBD,G;;;EApE0BlB,MAAMwB,S;;AAA7BlB,c,CACGmB,S,2CAAY;AACjBF,KAAGtB,UAAUyB,IAAV,CAAeC,UADD;AAEjBjB,YAAUT,UAAUyB,IAAV,CAAeC;AAFR,C;;;AAsErB,eAAezB,YAAYI,cAAZ,CAAf","file":"PlaylistFilter.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport IconButton from 'material-ui/IconButton';\nimport FilterIcon from 'material-ui/svg-icons/action/search';\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    this.props.onFilter(value);\n  }, 200);\n\n  clearFilter() {\n    if (this.state.value !== '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleClick = () => {\n    const isOpen = !this.state.open;\n\n    if (!isOpen) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      open: isOpen,\n      value: '',\n    }, () => {\n      if (isOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.onFilter(event.target.value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t } = this.props;\n    const isOpen = this.state.open;\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <IconButton\n          onClick={this.handleClick}\n          tooltip={t('playlists.filter')}\n          tooltipPosition=\"top-center\"\n        >\n          <FilterIcon color={isOpen ? '#fff' : '#555'} hoverColor=\"#fff\" />\n        </IconButton>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default translate()(PlaylistFilter);\n"]}