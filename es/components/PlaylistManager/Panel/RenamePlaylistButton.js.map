{"version":3,"sources":["components/PlaylistManager/Panel/RenamePlaylistButton.js"],"names":["React","PropTypes","translate","IconButton","EditIcon","PromptDialog","RenamePlaylistButton","state","renaming","handleOpen","setState","handleClose","closeDialog","handleSubmit","props","onRename","name","then","bind","render","t","initialName","Component","propTypes","func","isRequired","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,wCAArB;;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;;gBAqCS,Q;SAAe,M;cAAkB;;;iBAKvB,Q;SAAe;;;IAxC5BC,oB;;;;;;;;;;;;wJAOJC,K,GAAQ;AACNC,gBAAU;AADJ,K,QAQRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc,EAAEF,UAAU,IAAZ,EAAd;AACD,K,QAEDG,W,GAAc,YAAM;AAClB,YAAKC,WAAL;AACD,K,QAEDC,Y,GAAe;AAAA,aACb,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,EACGC,IADH,CACQ,MAAKL,WAAL,CAAiBM,IAAjB,OADR,CADa;AAAA,K;;;iCAZfN,W,0BAAc;AACZ,SAAKF,QAAL,CAAc,EAAEF,UAAU,KAAZ,EAAd;AACD,G;;iCAcDW,M,qBAAS;AAAA,QACCC,CADD,GACO,KAAKN,KADZ,CACCM,CADD;;AAEP,gBACG,UADH;AAAA,eAEa,KAAKX,UAFlB;AAAA,eAGaW,EAAE,kBAAF,CAHb;AAAA,uBAIoB;AAJpB,qBAOK,KAAKb,KAAL,CAAWC,QAAX,SACE,YADF;AAAA,aAEUY,EAAE,uCAAF,CAFV;AAAA,mBAGgBA,EAAE,+BAAF,CAHhB;AAAA;AAAA,aAKU,KAAKN,KAAL,CAAWO,WALrB;AAAA,gBAMa,KAAKR,YANlB;AAAA,gBAOa,KAAKF;AAPlB,MAPL;AAmBD,G;;;EAhDgCX,MAAMsB,S;;AAAnChB,oB,CACGiB,S,2CAAY;AACjBH,KAAGnB,UAAUuB,IAAV,CAAeC,UADD;AAEjBV,YAAUd,UAAUuB,IAAV,CAAeC,UAFR;AAGjBJ,eAAapB,UAAUyB;AAHN,C;;;AAkDrB,eAAexB,YAAYI,oBAAZ,CAAf","file":"RenamePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport IconButton from 'material-ui/IconButton';\nimport EditIcon from 'material-ui/svg-icons/editor/mode-edit';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string\n  };\n\n  state = {\n    renaming: false\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = name =>\n    this.props.onRename(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t } = this.props;\n    return (\n      <IconButton\n        onClick={this.handleOpen}\n        tooltip={t('playlists.rename')}\n        tooltipPosition=\"top-center\"\n      >\n        <EditIcon color=\"#555\" hoverColor=\"#fff\" />\n        {this.state.renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon color=\"#777\" />}\n            value={this.props.initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </IconButton>\n    );\n  }\n}\n\nexport default translate()(RenamePlaylistButton);\n"]}