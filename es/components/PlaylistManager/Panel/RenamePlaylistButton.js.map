{"version":3,"sources":["components/PlaylistManager/Panel/RenamePlaylistButton.js"],"names":["React","PropTypes","translate","Tooltip","IconButton","EditIcon","PromptDialog","enhance","RenamePlaylistButton","state","renaming","handleOpen","setState","handleClose","closeDialog","handleSubmit","props","onRename","name","then","bind","render","t","initialName","Component","propTypes","func","isRequired","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,IAAMC,UAAUL,WAAhB;;gBAmCa,Q;;iBAOM,Q;eAAqB;;;IAxClCM,oB;;;;;;;;;;;;wJAOJC,K,GAAQ;AACNC,gBAAU;AADJ,K,QAQRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc,EAAEF,UAAU,IAAZ,EAAd;AACD,K,QAEDG,W,GAAc,YAAM;AAClB,YAAKC,WAAL;AACD,K,QAEDC,Y,GAAe;AAAA,aACb,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,EACGC,IADH,CACQ,MAAKL,WAAL,CAAiBM,IAAjB,OADR,CADa;AAAA,K;;;iCAZfN,W,0BAAc;AACZ,SAAKF,QAAL,CAAc,EAAEF,UAAU,KAAZ,EAAd;AACD,G;;iCAcDW,M,qBAAS;AAAA,QACCC,CADD,GACO,KAAKN,KADZ,CACCM,CADD;;AAEP,gBACG,MAAM,QADT,mBAEK,OAFL;AAAA,aAEoBA,EAAE,kBAAF,CAFpB;AAAA,iBAEqD;AAFrD,oBAGO,UAHP;AAAA,iBAG4B,yBAH5B;AAAA,eAG+D,KAAKX;AAHpE,uBAOK,KAAKF,KAAL,CAAWC,QAAX,SACE,YADF;AAAA,aAEUY,EAAE,uCAAF,CAFV;AAAA,mBAGgBA,EAAE,+BAAF,CAHhB;AAAA;AAAA,aAKU,KAAKN,KAAL,CAAWO,WALrB;AAAA,gBAMa,KAAKR,YANlB;AAAA,gBAOa,KAAKF;AAPlB,MAPL;AAmBD,G;;;EAhDgCb,MAAMwB,S;;AAAnChB,oB,CACGiB,S,2CAAY;AACjBH,KAAGrB,UAAUyB,IAAV,CAAeC,UADD;AAEjBV,YAAUhB,UAAUyB,IAAV,CAAeC,UAFR;AAGjBJ,eAAatB,UAAU2B;AAHN,C;;;AAkDrB,eAAerB,QAAQC,oBAAR,CAAf","file":"RenamePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport EditIcon from 'material-ui-icons/ModeEdit';\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass RenamePlaylistButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onRename: PropTypes.func.isRequired,\n    initialName: PropTypes.string,\n  };\n\n  state = {\n    renaming: false,\n  };\n\n  closeDialog() {\n    this.setState({ renaming: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ renaming: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = name =>\n    this.props.onRename(name)\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t } = this.props;\n    return (\n      <React.Fragment>\n        <Tooltip title={t('playlists.rename')} placement=\"top\">\n          <IconButton className=\"PlaylistMeta-iconButton\" onClick={this.handleOpen}>\n            <EditIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.renaming && (\n          <PromptDialog\n            title={t('dialogs.renamePlaylist.nameInputTitle')}\n            submitLabel={t('dialogs.renamePlaylist.action')}\n            icon={<EditIcon nativeColor=\"#777\" />}\n            value={this.props.initialName}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(RenamePlaylistButton);\n"]}