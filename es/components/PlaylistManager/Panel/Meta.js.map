{"version":3,"sources":["components/PlaylistManager/Panel/Meta.js"],"names":["cx","React","PropTypes","translate","Checkbox","ActiveIcon","ActivateIcon","RenamePlaylistButton","DeletePlaylistButton","ShufflePlaylistButton","PlaylistFilter","enhance","PlaylistMeta","t","className","active","name","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","onNotDeletable","onFilter","propTypes","func","isRequired","string","bool"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,UAAUR,WAAhB;;iBAsBe,Y;;iBACO,U;eAAuB;;;AArB7C,IAAMS,eAAe,SAAfA,YAAe;AAAA,MACnBC,CADmB,QACnBA,CADmB;AAAA,MAEnBC,SAFmB,QAEnBA,SAFmB;AAAA,MAGnBC,MAHmB,QAGnBA,MAHmB;AAAA,MAInBC,IAJmB,QAInBA,IAJmB;AAAA,MAKnBC,iBALmB,QAKnBA,iBALmB;AAAA,MAMnBC,kBANmB,QAMnBA,kBANmB;AAAA,MAOnBC,gBAPmB,QAOnBA,gBAPmB;AAAA,MAQnBC,gBARmB,QAQnBA,gBARmB;AAAA,MASnBC,cATmB,QASnBA,cATmB;AAAA,MAUnBC,QAVmB,QAUnBA,QAVmB;AAAA;AAAA,eAYHtB,GAAG,cAAH,EAAmBc,SAAnB,EAA8BC,SAAS,sBAAT,GAAkC,EAAhE;AAZG;AAAA,eAaF;AAbE,aAcdC,IAdc;AAAA,eAgBF;AAhBE,kBAiBd,QAjBc;AAAA,aAkBJD,MAlBI;AAAA,cAmBHA,SAAS,IAAT,GAAgBG,kBAnBb;AAAA;AAAA;AAAA,+BAwBZH,SAASF,EAAE,kBAAF,CAAT,GAAiCA,EAAE,oBAAF,CAxBrB,SA2BhB,cA3BgB;AAAA,cA4BLS;AA5BK,WA8BhB,qBA9BgB;AAAA,eA8BiBL;AA9BjB,WA+BhB,oBA/BgB;AAAA,iBAgCFD,IAhCE;AAAA,cAiCLG;AAjCK,WAmChB,oBAnCgB;AAAA,YAoCPJ,MApCO;AAAA,oBAqCCM,cArCD;AAAA,cAsCLD;AAtCK;AAAA,CAArB;;AA2CAR,aAAaW,SAAb,2CAAyB;AACvBV,KAAGX,UAAUsB,IAAV,CAAeC,UADK;AAEvBX,aAAWZ,UAAUwB,MAFE;AAGvBX,UAAQb,UAAUyB,IAAV,CAAeF,UAHA;AAIvBT,QAAMd,UAAUwB,MAAV,CAAiBD,UAJA;AAKvBR,qBAAmBf,UAAUsB,IAAV,CAAeC,UALX;AAMvBP,sBAAoBhB,UAAUsB,IAAV,CAAeC,UANZ;AAOvBN,oBAAkBjB,UAAUsB,IAAV,CAAeC,UAPV;AAQvBL,oBAAkBlB,UAAUsB,IAAV,CAAeC,UARV;AASvBJ,kBAAgBnB,UAAUsB,IAAV,CAAeC,UATR;AAUvBH,YAAUpB,UAAUsB,IAAV,CAAeC;AAVF,CAAzB;;AAaA,eAAed,QAAQC,YAAR,CAAf","file":"Meta.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from 'material-ui/Checkbox';\nimport ActiveIcon from 'material-ui-icons/CheckBox';\nimport ActivateIcon from 'material-ui-icons/CheckBoxOutlineBlank';\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst enhance = translate();\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active ? 'PlaylistMeta--active' : '')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <div className=\"PlaylistMeta-active\">\n      <Checkbox\n        checked={active}\n        onChange={active ? null : onActivatePlaylist}\n        icon={<ActivateIcon />}\n        checkedIcon={<ActiveIcon nativeColor=\"#fff\" />}\n      />\n      <span>\n        {active ? t('playlists.active') : t('playlists.activate')}\n      </span>\n    </div>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default enhance(PlaylistMeta);\n"]}