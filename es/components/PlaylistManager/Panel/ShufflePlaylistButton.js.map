{"version":3,"sources":["components/PlaylistManager/Panel/ShufflePlaylistButton.js"],"names":["React","PropTypes","compose","withState","withHandlers","translate","CircularProgress","Tooltip","IconButton","ShuffleIcon","enhance","onClick","props","setLoading","onShuffle","then","ShuffleButton","t","isLoading","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,UAAUR,QACdC,UAAU,WAAV,EAAuB,YAAvB,EAAqC,KAArC,CADc,EAEdC,aAAa;AACXO,WAAS;AAAA,WAAS,YAAM;AACtBC,YAAMC,UAAN,CAAiB,IAAjB;AACAD,YAAME,SAAN,GAAkBC,IAAlB,CAAuB,YAAM;AAC3BH,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAFD,EAEG,YAAM;AACPD,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAJD;AAKD,KAPQ;AAAA;AADE,CAAb,CAFc,EAYdR,WAZc,CAAhB;;iBA0BS,gB;QAAsB;;;iBAEtB,W;;AAbT,IAAMW,gBAAgB,SAAhBA,aAAgB;AAAA,MACpBC,CADoB,QACpBA,CADoB;AAAA,MAEpBC,SAFoB,QAEpBA,SAFoB;AAAA,MAGpBP,OAHoB,QAGpBA,OAHoB;AAAA,cAKnB,OALmB;AAAA,WAKJM,EAAE,mBAAF,CALI;AAAA,eAK8B;AAL9B,kBAMjB,UANiB;AAAA,eAON,yBAPM;AAAA,aAQPN;AARO,aAUfO,yBAVe;AAAA,CAAtB;;AAmBAF,cAAcG,SAAd,2CAA0B;AACxBF,KAAGhB,UAAUmB,IAAV,CAAeC,UADM;AAExBH,aAAWjB,UAAUqB,IAAV,CAAeD,UAFF;AAGxBV,WAASV,UAAUmB,IAAV,CAAeC,UAHA;AAIxBP,aAAWb,UAAUmB,IAAV,CAAeC,UAJF,CAIc;AAJd,CAA1B;;AAOA,eAAeX,QAAQM,aAAR,CAAf","file":"ShufflePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport { CircularProgress } from 'material-ui/Progress';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport ShuffleIcon from 'material-ui-icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n"]}