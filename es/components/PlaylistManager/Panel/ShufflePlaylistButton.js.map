{"version":3,"sources":["components/PlaylistManager/Panel/ShufflePlaylistButton.js"],"names":["React","PropTypes","compose","withState","withHandlers","translate","IconButton","ShuffleIcon","Loader","enhance","onClick","props","setLoading","onShuffle","then","ShuffleButton","t","isLoading","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,UAAUP,QACdC,UAAU,WAAV,EAAuB,YAAvB,EAAqC,KAArC,CADc,EAEdC,aAAa;AACXM,WAAS;AAAA,WAAS,YAAM;AACtBC,YAAMC,UAAN,CAAiB,IAAjB;AACAD,YAAME,SAAN,GAAkBC,IAAlB,CAAuB,YAAM;AAC3BH,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAFD,EAEG,YAAM;AACPD,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAJD;AAKD,KAPQ;AAAA;AADE,CAAb,CAFc,EAYdP,WAZc,CAAhB;;iBA0BO,M;QAAY;;;iBAEZ,W;SAAkB,M;cAAkB;;;AAb3C,IAAMU,gBAAgB,SAAhBA,aAAgB;AAAA,MACpBC,CADoB,QACpBA,CADoB;AAAA,MAEpBC,SAFoB,QAEpBA,SAFoB;AAAA,MAGpBP,OAHoB,QAGpBA,OAHoB;AAAA,cAKnB,UALmB;AAAA,aAMTA,OANS;AAAA,aAOTM,EAAE,mBAAF,CAPS;AAAA,qBAQF;AARE,aAUjBC,yBAViB;AAAA,CAAtB;;AAkBAF,cAAcG,SAAd,2CAA0B;AACxBF,KAAGf,UAAUkB,IAAV,CAAeC,UADM;AAExBH,aAAWhB,UAAUoB,IAAV,CAAeD,UAFF;AAGxBV,WAAST,UAAUkB,IAAV,CAAeC,UAHA;AAIxBP,aAAWZ,UAAUkB,IAAV,CAAeC,UAJF,CAIc;AAJd,CAA1B;;AAOA,eAAeX,QAAQM,aAAR,CAAf","file":"ShufflePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport IconButton from 'material-ui/IconButton';\nimport ShuffleIcon from 'material-ui/svg-icons/av/shuffle';\nimport Loader from '../../Loader';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <IconButton\n    onClick={onClick}\n    tooltip={t('playlists.shuffle')}\n    tooltipPosition=\"top-center\"\n  >\n    {isLoading ? (\n      <Loader size=\"tiny\" />\n    ) : (\n      <ShuffleIcon color=\"#555\" hoverColor=\"#fff\" />\n    )}\n  </IconButton>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n"]}