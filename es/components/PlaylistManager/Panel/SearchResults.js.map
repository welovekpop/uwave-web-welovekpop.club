{"version":3,"sources":["components/PlaylistManager/Panel/SearchResults.js"],"names":["cx","React","PropTypes","translate","CircularProgress","IDLE","LOADING","LOADED","MediaList","AddToPlaylistAction","SearchResults","t","className","query","results","loadingState","onOpenAddMediaMenu","onOpenPreviewMediaDialog","list","media","selection","position","propTypes","func","isRequired","string","arrayOf","object","oneOf"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,kCAAtC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;;;;AA6BM;AAAK,aAAU;AAAf,WACE,KAAC,gBAAD;AAAkB,QAAK;AAAvB,EADF,C;;AA3BN,IAAMC,gBAAgB,SAAhBA,aAAgB,OAQhB;AAAA,MAPJC,CAOI,QAPJA,CAOI;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,OAII,QAJJA,OAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,kBAEI,QAFJA,kBAEI;AAAA,MADJC,wBACI,QADJA,wBACI;AACJ,MAAIC,IAAJ;;AACA,MAAIH,iBAAiBR,MAArB,EAA6B;AAC3BW,WACE,KAAC,SAAD;AACE,iBAAU,qBADZ;AAEE,aAAOJ,OAFT;AAGE,gCAA0BG,wBAH5B;AAIE,mBAAa,qBAACE,KAAD,EAAQC,SAAR;AAAA,eACX,KAAC,KAAD,CAAO,QAAP,cACE,KAAC,mBAAD;AACE,iBAAO;AAAA,mBAAYJ,mBAAmBK,QAAnB,EAA6BF,KAA7B,EAAoCC,SAApC,CAAZ;AAAA;AADT,UADF,CADW;AAAA;AAJf,MADF;AAcD,GAfD,MAeO;AACLF;AAKD;;AAED,SACE;AAAK,eAAWlB,GAAG,eAAH,EAAoB,eAApB,EAAqCY,SAArC;AAAhB,aACE;AAAK,eAAU;AAAf,aACGD,EAAE,0BAAF,EAA8B;AAAEE;AAAF,GAA9B,CADH,CADF,EAIGK,IAJH,CADF;AAQD,CAzCD;;AA2CAR,cAAcY,SAAd,2CAA0B;AACxBX,KAAGT,UAAUqB,IAAV,CAAeC,UADM;AAExBZ,aAAWV,UAAUuB,MAFG;AAGxBZ,SAAOX,UAAUuB,MAAV,CAAiBD,UAHA;AAIxBV,WAASZ,UAAUwB,OAAV,CAAkBxB,UAAUyB,MAA5B,CAJe;AAKxBZ,gBAAcb,UAAU0B,KAAV,CAAgB,CAACvB,IAAD,EAAOC,OAAP,EAAgBC,MAAhB,CAAhB,EAAyCiB,UAL/B;AAMxBR,sBAAoBd,UAAUqB,IAAV,CAAeC,UANX;AAOxBP,4BAA0Bf,UAAUqB,IAAV,CAAeC;AAPjB,CAA1B;AAUA,eAAerB,YAAYO,aAAZ,CAAf","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { CircularProgress } from 'material-ui/Progress';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst SearchResults = ({\n  t,\n  className,\n  query,\n  results,\n  loadingState,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        media={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={(media, selection) => (\n          <React.Fragment>\n            <AddToPlaylistAction\n              onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n            />\n          </React.Fragment>\n        )}\n      />\n    );\n  } else {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResults.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default translate()(SearchResults);\n"],"file":"SearchResults.js"}