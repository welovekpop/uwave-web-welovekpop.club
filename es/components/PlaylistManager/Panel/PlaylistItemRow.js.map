{"version":3,"sources":["components/PlaylistManager/Panel/PlaylistItemRow.js"],"names":["React","PropTypes","DropTarget","MEDIA","isDraggingNearTopOfRow","MediaRow","mediaTarget","drop","props","monitor","component","item","getItem","media","thisID","_id","some","playlistItem","insertBefore","onMoveMedia","before","after","hover","setState","insertingAbove","collect","connect","connectDropTarget","dropTarget","isOver","PlaylistItemRow","state","render","dropIndicator","Component","propTypes","func","isRequired","bool"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,KAAT,QAAsB,gCAAtB;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAMC,cAAc;AAClBC,MADkB,gBACbC,KADa,EACNC,OADM,EACGC,SADH,EACc;AAC9B,QAAMC,OAAOF,QAAQG,OAAR,EAAb;AAD8B,QAEtBC,KAFsB,GAEZF,IAFY,CAEtBE,KAFsB;;AAG9B,QAAIA,KAAJ,EAAW;AACT,UAAMC,SAASN,MAAMK,KAAN,CAAYE,GAA3B,CADS,CAET;AACA;;AACA,UAAIF,MAAMG,IAAN,CAAW;AAAA,eAAgBC,aAAaF,GAAb,KAAqBD,MAArC;AAAA,OAAX,CAAJ,EAA6D;AAC3D;AACD;;AACD,UAAMI,eAAed,uBAAuBK,OAAvB,EAAgCC,SAAhC,CAArB;AACAF,YAAMW,WAAN,CACEN,KADF,EAEEK,eAAe;AAAEE,gBAAQN;AAAV,OAAf,GAAoC;AAAEO,eAAOP;AAAT,OAFtC;AAID;AACF,GAjBiB;AAkBlBQ,OAlBkB,iBAkBZd,KAlBY,EAkBLC,OAlBK,EAkBIC,SAlBJ,EAkBe;AAC/BA,cAAUa,QAAV,CAAmB;AACjBC,sBAAgBpB,uBAAuBK,OAAvB,EAAgCC,SAAhC;AADC,KAAnB;AAGD;AAtBiB,CAApB;;AAyBA,IAAMe,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUjB,OAAV;AAAA,SAAuB;AACrCkB,uBAAmBD,QAAQE,UAAR,EADkB;AAErCC,YAAQpB,QAAQoB,MAAR;AAF6B,GAAvB;AAAA,CAAhB;;;;AA0B0B;AAAK,aAAU;AAAf,E;;IArBpBC,e;;;;;;;;;;;;8GASJC,K,GAAQ;AACNP,sBAAgB;AADV,K;;;;;SAIRQ,M,qBAAS;AAAA,iBAKH,KAAKxB,KALF;AAAA,QAELmB,iBAFK,UAELA,iBAFK;AAAA,QAGLE,MAHK,UAGLA,MAHK;AAAA,QAIFrB,KAJE;;AAAA,QAMCgB,cAND,GAMoB,KAAKO,KANzB,CAMCP,cAND;AAQP,QAAMS,oBAAN;AAEA,WAAON,kBACL;AAAK,iBAAU;AAAf,eACGE,UAAUL,cAAV,IAA4BS,aAD/B,EAEE,oBAAC,QAAD,EAAczB,KAAd,CAFF,EAGGqB,UAAU,CAACL,cAAX,IAA6BS,aAHhC,CADK,CAAP;AAOD,G;;;EA9B2BjC,MAAMkC,S;;AAA9BJ,e,CACGK,S,2CAAY;AACjBR,qBAAmB1B,UAAUmC,IAAV,CAAeC,UADjB;AAEjB;AACA;AACAlB,eAAalB,UAAUmC,IAAV,CAAeC,UAJX;AAKjBR,UAAQ5B,UAAUqC,IAAV,CAAeD;AALN,C;AAgCrB,eAAenC,WAAWC,KAAX,EAAkBG,WAAlB,EAA+BmB,OAA/B,EAAwCK,eAAxC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n"],"file":"PlaylistItemRow.js"}