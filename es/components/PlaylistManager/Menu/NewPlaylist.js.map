{"version":3,"sources":["components/PlaylistManager/Menu/NewPlaylist.js"],"names":["cx","React","PropTypes","translate","MenuItem","CreatePlaylistIcon","PromptDialog","enhance","NewPlaylist","state","creating","handleOpen","setState","handleClose","closeDialog","handleSubmit","Promise","resolve","props","onCreatePlaylist","playlistName","then","bind","render","t","className","Component","propTypes","string","func","isRequired"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,kBAAP,MAA+B,wBAA/B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,IAAMC,UAAUJ,WAAhB;;;;AAsCY;AAAK,aAAU;AAAf,WACE,KAAC,kBAAD,KADF,C;;;;AASM,KAAC,kBAAD;AAAoB,eAAY;AAAhC,E;;IA7CZK,W;;;;;;;;;;;;8GAOJC,K,GAAQ;AACNC,gBAAU;AADJ,K,QAQRC,U,GAAa,YAAM;AACjB,YAAKC,QAAL,CAAc;AAAEF,kBAAU;AAAZ,OAAd;AACD,K,QAEDG,W,GAAc,YAAM;AAClB,YAAKC,WAAL;AACD,K,QAEDC,Y,GAAe;AAAA,aACbC,QAAQC,OAAR,CAAgB,MAAKC,KAAL,CAAWC,gBAAX,CAA4BC,YAA5B,CAAhB,EACGC,IADH,CACQ,MAAKP,WAAL,CAAiBQ,IAAjB,+BADR,CADa;AAAA,K;;;;;SAZfR,W,0BAAc;AACZ,SAAKF,QAAL,CAAc;AAAEF,gBAAU;AAAZ,KAAd;AACD,G;;SAcDa,M,qBAAS;AAAA,iBACkB,KAAKL,KADvB;AAAA,QACCM,CADD,UACCA,CADD;AAAA,QACIC,SADJ,UACIA,SADJ;AAEP,WACE,KAAC,KAAD,CAAO,QAAP,cACE,KAAC,QAAD;AACE,iBAAWzB,GAAG,iBAAH,EAAsB,yBAAtB,EAAiDyB,SAAjD,CADb;AAEE,eAAS,KAAKd;AAFhB,eAIE;AAAK,iBAAU;AAAf,qBAIGa,EAAE,eAAF,CAJH,CAJF,CADF,EAYG,KAAKf,KAAL,CAAWC,QAAX,IACC,KAAC,YAAD;AACE,aAAOc,EAAE,uCAAF,CADT;AAEE,iBAFF;AAGE,mBAAaA,EAAE,+BAAF,CAHf;AAIE,gBAAU,KAAKT,YAJjB;AAKE,gBAAU,KAAKF;AALjB,MAbJ,CADF;AAwBD,G;;;EArDuBZ,MAAMyB,S;;AAA1BlB,W,CACGmB,S,2CAAY;AACjBF,aAAWvB,UAAU0B,MADJ;AAEjBJ,KAAGtB,UAAU2B,IAAV,CAAeC,UAFD;AAGjBX,oBAAkBjB,UAAU2B,IAAV,CAAeC;AAHhB,C;AAuDrB,eAAevB,QAAQC,WAAR,CAAf","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { MenuItem } from 'material-ui/Menu';\nimport CreatePlaylistIcon from '@material-ui/icons/Add';\n\nimport PromptDialog from '../../Dialogs/PromptDialog';\n\nconst enhance = translate();\n\nclass NewPlaylist extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    t: PropTypes.func.isRequired,\n    onCreatePlaylist: PropTypes.func.isRequired,\n  };\n\n  state = {\n    creating: false,\n  };\n\n  closeDialog() {\n    this.setState({ creating: false });\n  }\n\n  handleOpen = () => {\n    this.setState({ creating: true });\n  };\n\n  handleClose = () => {\n    this.closeDialog();\n  };\n\n  handleSubmit = playlistName =>\n    Promise.resolve(this.props.onCreatePlaylist(playlistName))\n      .then(this.closeDialog.bind(this));\n\n  render() {\n    const { t, className } = this.props;\n    return (\n      <React.Fragment>\n        <MenuItem\n          className={cx('PlaylistMenuRow', 'PlaylistMenuRow--create', className)}\n          onClick={this.handleOpen}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            <div className=\"PlaylistMenuRow-active-icon\">\n              <CreatePlaylistIcon />\n            </div>\n            {t('playlists.new')}\n          </div>\n        </MenuItem>\n        {this.state.creating && (\n          <PromptDialog\n            title={t('dialogs.createPlaylist.nameInputTitle')}\n            icon={<CreatePlaylistIcon nativeColor=\"#777\" />}\n            submitLabel={t('dialogs.createPlaylist.action')}\n            onSubmit={this.handleSubmit}\n            onCancel={this.handleClose}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default enhance(NewPlaylist);\n"],"file":"NewPlaylist.js"}