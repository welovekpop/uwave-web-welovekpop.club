{"version":3,"sources":["components/PlaylistManager/Header/SearchBar.js"],"names":["cx","React","PropTypes","translate","SearchIcon","SourcePicker","enhance","SearchBar","state","focused","handleFocus","setState","handleBlur","handleKeyDown","e","onSubmit","props","key","input","value","refInput","render","t","source","onSourceChange","className","Component","propTypes","string","func","isRequired"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,UAAUH,WAAhB;;;aAoCuB;gBACZ,U;SAAiB;;;IAnCtBI,S;;;;;;;;;;;;wJASJC,K,GAAQ,EAAEC,SAAS,KAAX,E,QAERC,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc,EAAEF,SAAS,IAAX,EAAd;AACD,K,QACDG,U,GAAa,YAAM;AACjB,YAAKD,QAAL,CAAc,EAAEF,SAAS,KAAX,EAAd;AACD,K,QAEDI,a,GAAgB,UAACC,CAAD,EAAO;AAAA,UACbC,QADa,GACA,MAAKC,KADL,CACbD,QADa;;AAErB,UAAID,EAAEG,GAAF,KAAU,OAAd,EAAuB;AACrBF,iBAAS,MAAKG,KAAL,CAAWC,KAApB;AACD;AACF,K,QAEDC,Q,GAAW,UAACF,KAAD,EAAW;AACpB,YAAKA,KAAL,GAAaA,KAAb;AACD,K;;;sBAEDG,M,qBAAS;AAAA,iBAC+B,KAAKL,KADpC;AAAA,QACCM,CADD,UACCA,CADD;AAAA,QACIC,MADJ,UACIA,MADJ;AAAA,QACYC,cADZ,UACYA,cADZ;AAAA,QAECf,OAFD,GAEa,KAAKD,KAFlB,CAECC,OAFD;;AAGP;AAAA,iBACkBT,GAAG,WAAH,EAAgBS,UAAU,YAAV,GAAyB,EAAzC,EAA6C,KAAKO,KAAL,CAAWS,SAAxD;AADlB,0BAKK,YALL;AAAA,iBAMgB,kBANhB;AAAA,gBAOgBF,MAPhB;AAAA,gBAQgBC;AARhB;AAAA,iBAUmB;AAVnB,eAWM;AACE,WAAK,KAAKJ,QADZ;AAEE,iBAAU,iBAFZ;AAGE,YAAK,MAHP;AAIE,mBAAaX,UAAU,EAAV,GAAea,EAAE,yBAAF,CAJ9B;AAKE,eAAS,KAAKZ,WALhB;AAME,cAAQ,KAAKE,UANf;AAOE,iBAAW,KAAKC;AAPlB,MAXN;AAuBD,G;;;EAvDqBZ,MAAMyB,S;;AAAxBnB,S,CACGoB,S,2CAAY;AACjBF,aAAWvB,UAAU0B,MADJ;AAEjBL,UAAQrB,UAAU0B,MAFD;AAGjBb,YAAUb,UAAU2B,IAHH;AAIjBP,KAAGpB,UAAU2B,IAAV,CAAeC,UAJD;AAKjBN,kBAAgBtB,UAAU2B;AALT,C;;;AAyDrB,eAAevB,QAAQC,SAAR,CAAf","file":"SearchBar.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport SearchIcon from 'material-ui/svg-icons/action/search';\nimport SourcePicker from './SourcePicker';\n\nconst enhance = translate();\n\nclass SearchBar extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    source: PropTypes.string,\n    onSubmit: PropTypes.func,\n    t: PropTypes.func.isRequired,\n    onSourceChange: PropTypes.func\n  };\n\n  state = { focused: false };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { onSubmit } = this.props;\n    if (e.key === 'Enter') {\n      onSubmit(this.input.value);\n    }\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t, source, onSourceChange } = this.props;\n    const { focused } = this.state;\n    return (\n      <div className={cx('SearchBar', focused ? 'is-focused' : '', this.props.className)}>\n        <div className=\"SearchBar-icon\">\n          <SearchIcon color=\"#fff\" />\n        </div>\n        <SourcePicker\n          className=\"SearchBar-source\"\n          selected={source}\n          onChange={onSourceChange}\n        />\n        <div className=\"SearchBar-query\">\n          <input\n            ref={this.refInput}\n            className=\"SearchBar-input\"\n            type=\"text\"\n            placeholder={focused ? '' : t('playlists.search.action')}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SearchBar);\n"]}