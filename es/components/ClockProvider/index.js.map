{"version":3,"sources":["components/ClockProvider/index.js"],"names":["React","PropTypes","connect","createTimer","stopTimer","mapDispatchToProps","enhance","ClockProvider","state","callbacks","timerCallbacks","add","setState","s","concat","cb","remove","filter","cb1","getChildContext","componentDidMount","props","forEach","componentWillUnmount","render","children","Component","childContextTypes","shape","func","propTypes","isRequired","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oCAAvC;;AAEA,IAAMC,qBAAqB;AACzBF,0BADyB;AAEzBC;AAFyB,CAA3B;;AAKA,IAAME,UAAUJ,QAAQ,IAAR,EAAcG,kBAAd,CAAhB;;IAEME,a;;;;;;;;;;;;wJAcJC,K,GAAQ,EAAEC,WAAW,EAAb,E,QAoBRC,c,GAAiB;AACfC,WAAK;AAAA,eAAM,MAAKC,QAAL,CAAc;AAAA,iBAAM;AAC7BH,uBAAWI,EAAEJ,SAAF,CAAYK,MAAZ,CAAmBC,EAAnB;AADkB,WAAN;AAAA,SAAd,CAAN;AAAA,OADU;AAIfC,cAAQ;AAAA,eAAM,MAAKJ,QAAL,CAAc;AAAA,iBAAM;AAChCH,uBAAWI,EAAEJ,SAAF,CAAYQ,MAAZ,CAAmB;AAAA,qBAAOC,QAAQH,EAAf;AAAA,aAAnB;AADqB,WAAN;AAAA,SAAd,CAAN;AAAA;AAJO,K;;;0BAlBjBI,e,8BAAkB;AAChB,WAAO;AACLT,sBAAgB,KAAKA;AADhB,KAAP;AAGD,G;;0BAEDU,iB,gCAAoB;AAAA;;AAClB;AACA;AACA,SAAKC,KAAL,CAAWlB,WAAX,CAAuB,YAAM;AAC3B,aAAKK,KAAL,CAAWC,SAAX,CAAqBa,OAArB,CAA6B;AAAA,eAAMP,IAAN;AAAA,OAA7B;AACD,KAFD;AAGD,G;;0BAEDQ,oB,mCAAuB;AACrB,SAAKF,KAAL,CAAWjB,SAAX;AACD,G;;0BAWDoB,M,qBAAS;AACP,WAAO,KAAKH,KAAL,CAAWI,QAAlB;AACD,G;;;EA7CyBzB,MAAM0B,S;;AAA5BnB,a,CAOGoB,iB,GAAoB;AACzBjB,kBAAgBT,UAAU2B,KAAV,CAAgB;AAC9BjB,SAAKV,UAAU4B,IADe;AAE9Bb,YAAQf,UAAU4B;AAFY,GAAhB;AADS,C;AAPvBtB,a,CACGuB,S,2CAAY;AACjB3B,eAAaF,UAAU4B,IAAV,CAAeE,UADX;AAEjB3B,aAAWH,UAAU4B,IAAV,CAAeE,UAFT;AAGjBN,YAAUxB,UAAU+B,IAAV,CAAeD;AAHR,C;;;AA+CrB,eAAezB,QAAQC,aAAR,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createTimer, stopTimer } from '../../actions/TickerActionCreators';\n\nconst mapDispatchToProps = {\n  createTimer,\n  stopTimer,\n};\n\nconst enhance = connect(null, mapDispatchToProps);\n\nclass ClockProvider extends React.Component {\n  static propTypes = {\n    createTimer: PropTypes.func.isRequired,\n    stopTimer: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  static childContextTypes = {\n    timerCallbacks: PropTypes.shape({\n      add: PropTypes.func,\n      remove: PropTypes.func,\n    }),\n  };\n\n  state = { callbacks: [] };\n\n  getChildContext() {\n    return {\n      timerCallbacks: this.timerCallbacks,\n    };\n  }\n\n  componentDidMount() {\n    // Start the clock! Ã¼Wave stores the current time in the application state\n    // primarily to make sure that different timers in the UI update simultaneously.\n    this.props.createTimer(() => {\n      this.state.callbacks.forEach(cb => cb());\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.stopTimer();\n  }\n\n  timerCallbacks = {\n    add: cb => this.setState(s => ({\n      callbacks: s.callbacks.concat(cb),\n    })),\n    remove: cb => this.setState(s => ({\n      callbacks: s.callbacks.filter(cb1 => cb1 !== cb),\n    })),\n  };\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default enhance(ClockProvider);\n"]}