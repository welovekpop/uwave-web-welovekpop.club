{"version":3,"sources":["components/Player/index.js"],"names":["cx","isEqual","React","PropTypes","injectMediaSources","enhance","Player","shouldComponentUpdate","nextProps","props","render","getAllMediaSources","enabled","size","volume","isMuted","media","seek","mode","sources","players","Object","keys","map","sourceType","SourcePlayer","filter","player","Component","propTypes","func","isRequired","bool","string","number","object"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AAEA,IAAMC,UAAUD,oBAAhB;;;;AA6Ba;AAAK,aAAU;AAAf,E;;IA3BPE,M;;;;;;;;;;;SAWJC,qB,kCAAsBC,S,EAAW;AAC/B,WAAO,CAACP,QAAQO,SAAR,EAAmB,KAAKC,KAAxB,CAAR;AACD,G;;SAEDC,M,qBAAS;AAAA,iBASH,KAAKD,KATF;AAAA,QAELE,kBAFK,UAELA,kBAFK;AAAA,QAGLC,OAHK,UAGLA,OAHK;AAAA,QAILC,IAJK,UAILA,IAJK;AAAA,QAKLC,MALK,UAKLA,MALK;AAAA,QAMLC,OANK,UAMLA,OANK;AAAA,QAOLC,KAPK,UAOLA,KAPK;AAAA,QAQLC,IARK,UAQLA,IARK;;AAWP,QAAI,CAACD,KAAL,EAAY;AACV;AACD;;AAED,QAAMP,QAAQ;AACZG,sBADY;AAEZI,kBAFY;AAGZC,gBAHY;AAIZC,YAAML,IAJM;AAKZC,cAAQC,UAAU,CAAV,GAAcD;AALV,KAAd;AAQA,QAAMK,UAAUR,oBAAhB;AACA,QAAMS,UAAUC,OAAOC,IAAP,CAAYH,OAAZ,EAAqBI,GAArB,CAAyB,UAACC,UAAD,EAAgB;AACvD,UAAMC,eAAeN,QAAQK,UAAR,EAAoBlB,MAAzC;;AACA,UAAI,CAACmB,YAAL,EAAmB;AACjB,eAAO,IAAP;AACD;;AACD,aACE,oBAAC,YAAD;AACE,aAAKD;AADP,SAEMf,KAFN;AAGE,gBAAQO,MAAMQ,UAAN,KAAqBA;AAH/B,SADF;AAOD,KAZe,EAYbE,MAZa,CAYN;AAAA,aAAUC,WAAW,IAArB;AAAA,KAZM,CAAhB;AAcA,WACE;AAAK,iBAAW3B,GAAG,QAAH,eAAwBgB,MAAMQ,UAA9B,eAAuDX,IAAvD;AAAhB,eACGO,OADH,CADF;AAKD,G;;;EA1DkBlB,MAAM0B,S;;AAArBtB,M,CACGuB,S,2CAAY;AACjBlB,sBAAoBR,UAAU2B,IAAV,CAAeC,UADlB;AAEjBnB,WAAST,UAAU6B,IAFF;AAGjBnB,QAAMV,UAAU8B,MAHC;AAIjBnB,UAAQX,UAAU+B,MAJD;AAKjBnB,WAASZ,UAAU6B,IALF;AAMjBhB,SAAOb,UAAUgC,MANA;AAOjBlB,QAAMd,UAAU+B;AAPC,C;AA4DrB,eAAe7B,QAAQC,MAAR,CAAf","sourcesContent":["import cx from 'classnames';\nimport isEqual from 'is-equal-shallow';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport injectMediaSources from '../../utils/injectMediaSources';\n\nconst enhance = injectMediaSources();\n\nclass Player extends React.Component {\n  static propTypes = {\n    getAllMediaSources: PropTypes.func.isRequired,\n    enabled: PropTypes.bool,\n    size: PropTypes.string,\n    volume: PropTypes.number,\n    isMuted: PropTypes.bool,\n    media: PropTypes.object,\n    seek: PropTypes.number,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return !isEqual(nextProps, this.props);\n  }\n\n  render() {\n    const {\n      getAllMediaSources,\n      enabled,\n      size,\n      volume,\n      isMuted,\n      media,\n      seek,\n    } = this.props;\n\n    if (!media) {\n      return <div className=\"Player\" />;\n    }\n\n    const props = {\n      enabled,\n      media,\n      seek,\n      mode: size,\n      volume: isMuted ? 0 : volume,\n    };\n\n    const sources = getAllMediaSources();\n    const players = Object.keys(sources).map((sourceType) => {\n      const SourcePlayer = sources[sourceType].Player;\n      if (!SourcePlayer) {\n        return null;\n      }\n      return (\n        <SourcePlayer\n          key={sourceType}\n          {...props}\n          active={media.sourceType === sourceType}\n        />\n      );\n    }).filter(player => player !== null);\n\n    return (\n      <div className={cx('Player', `Player--${media.sourceType}`, `Player--${size}`)}>\n        {players}\n      </div>\n    );\n  }\n}\n\nexport default enhance(Player);\n"],"file":"index.js"}