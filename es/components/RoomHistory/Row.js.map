{"version":3,"sources":["components/RoomHistory/Row.js"],"names":["cx","React","PropTypes","DragSource","getEmptyImage","MEDIA","Actions","SongTitle","TimeAgo","HistoryVotes","inSelection","selection","media","some","item","_id","mediaSource","beginDrag","collect","connectDragSource","connect","dragSource","connectDragPreview","dragPreview","HistoryRow","state","showActions","handleMouseEnter","setState","handleMouseLeave","handleDoubleClick","props","onOpenPreviewMediaDialog","componentDidMount","render","historyEntry","className","selected","makeActions","onClick","timestamp","user","stats","selectedClass","thumbnail","artist","title","username","Component","defaultProps","propTypes","string","func","isRequired","object","bool","array"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { MEDIA } from '../../constants/DDItemTypes';\n\nimport Actions from '../MediaList/Actions';\nimport SongTitle from '../SongTitle';\nimport TimeAgo from '../TimeAgo';\n\nimport HistoryVotes from './Votes';\n\nconst inSelection = (selection, media) =>\n  selection.some(item => item._id === media._id);\n\nconst mediaSource = {\n  beginDrag({ selection, media }) {\n    return {\n      media: inSelection(selection, media.media) ? selection : [ media.media ]\n    };\n  }\n};\n\nconst collect = connect => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview()\n});\n\n@DragSource(MEDIA, mediaSource, collect)\nexport default class HistoryRow extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    media: PropTypes.object,\n    selected: PropTypes.bool,\n    selection: PropTypes.array,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    onClick: PropTypes.func,\n    makeActions: PropTypes.func\n  };\n\n  static defaultProps = {\n    selected: false\n  };\n\n  state = { showActions: false };\n\n  componentDidMount() {\n    this.props.connectDragPreview(getEmptyImage());\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ showActions: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ showActions: false });\n  };\n\n  handleDoubleClick = () => {\n    this.props.onOpenPreviewMediaDialog(\n      this.props.media.media\n    );\n  };\n\n  render() {\n    const {\n      media: historyEntry,\n      className,\n      selection,\n      selected,\n      connectDragSource,\n      // actions\n      makeActions,\n      // etc\n      onClick\n    } = this.props;\n    const { media, timestamp, user, stats } = historyEntry;\n    const { showActions } = this.state;\n    const selectedClass = selected ? 'is-selected' : '';\n    const thumbnail = (\n      <div className=\"MediaListRow-thumb\">\n        <img\n          className=\"MediaListRow-image\"\n          src={media.thumbnail}\n          alt=\"\"\n        />\n      </div>\n    );\n    return connectDragSource(\n      // See PlaylistManager/Panel/Row.js\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={cx('MediaListRow', 'HistoryRow', className, selectedClass)}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        onDoubleClick={this.handleDoubleClick}\n        onClick={onClick}\n      >\n        {thumbnail}\n        <SongTitle\n          className=\"HistoryRow-song\"\n          size=\"mediaRow\"\n          artist={media.artist}\n          title={media.title}\n        />\n        <div className=\"HistoryRow-votes\">\n          <HistoryVotes {...stats} />\n        </div>\n        <div className=\"HistoryRow-user\">\n          {user.username}\n        </div>\n        <div className=\"HistoryRow-time\" dateTime={timestamp}>\n          <TimeAgo timestamp={timestamp} />\n        </div>\n        {showActions && (\n          <Actions\n            className={cx('MediaListRow-actions', selectedClass)}\n            selection={selection}\n            media={media}\n            makeActions={makeActions}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"]}