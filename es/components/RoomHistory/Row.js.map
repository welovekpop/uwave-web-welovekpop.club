{"version":3,"sources":["components/RoomHistory/Row.js"],"names":["cx","React","PropTypes","DragSource","getEmptyImage","MEDIA","Actions","SongTitle","TimeAgo","HistoryVotes","inSelection","selection","media","some","item","_id","mediaSource","beginDrag","collect","connectDragSource","connect","dragSource","connectDragPreview","dragPreview","enhance","HistoryRow","state","showActions","handleMouseEnter","setState","handleMouseLeave","handleDoubleClick","props","onOpenPreviewMediaDialog","handleKeyPress","event","code","onClick","componentDidMount","render","historyEntry","className","selected","makeActions","timestamp","user","stats","selectedClass","thumbnail","artist","title","username","Component","defaultProps","propTypes","string","func","isRequired","object","bool","array"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { MEDIA } from '../../constants/DDItemTypes';\n\nimport Actions from '../MediaList/Actions';\nimport SongTitle from '../SongTitle';\nimport TimeAgo from '../TimeAgo';\n\nimport HistoryVotes from './Votes';\n\nconst inSelection = (selection, media) =>\n  selection.some(item => item._id === media._id);\n\nconst mediaSource = {\n  beginDrag({ selection, media }) {\n    return {\n      media: inSelection(selection, media.media) ? selection : [media.media],\n    };\n  },\n};\n\nconst collect = connect => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n});\n\nconst enhance = DragSource(MEDIA, mediaSource, collect);\n\nclass HistoryRow extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    media: PropTypes.object,\n    selected: PropTypes.bool,\n    selection: PropTypes.array,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    onClick: PropTypes.func,\n    makeActions: PropTypes.func,\n  };\n\n  static defaultProps = {\n    selected: false,\n  };\n\n  state = { showActions: false };\n\n  componentDidMount() {\n    this.props.connectDragPreview(getEmptyImage());\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ showActions: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ showActions: false });\n  };\n\n  handleDoubleClick = () => {\n    this.props.onOpenPreviewMediaDialog(this.props.media.media);\n  };\n\n  handleKeyPress = (event) => {\n    if (event.code === 'Space') {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const {\n      media: historyEntry,\n      className,\n      selection,\n      selected,\n      connectDragSource,\n      // actions\n      makeActions,\n      // etc\n      onClick,\n    } = this.props;\n    const {\n      media, timestamp, user, stats,\n    } = historyEntry;\n    const { showActions } = this.state;\n    const selectedClass = selected ? 'is-selected' : '';\n    const thumbnail = (\n      <div className=\"MediaListRow-thumb\">\n        <img\n          className=\"MediaListRow-image\"\n          src={media.thumbnail}\n          alt=\"\"\n        />\n      </div>\n    );\n    return connectDragSource((\n      // See PlaylistManager/Panel/Row.js\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={cx('MediaListRow', 'HistoryRow', className, selectedClass)}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        onDoubleClick={this.handleDoubleClick}\n        onKeyPress={this.handleKeyPress}\n        onClick={onClick}\n      >\n        {thumbnail}\n        <SongTitle\n          className=\"HistoryRow-song\"\n          size=\"mediaRow\"\n          artist={media.artist}\n          title={media.title}\n        />\n        <div className=\"HistoryRow-votes\">\n          <HistoryVotes {...stats} />\n        </div>\n        <div className=\"HistoryRow-user\">\n          {user.username}\n        </div>\n        <div className=\"HistoryRow-time\" dateTime={timestamp}>\n          <TimeAgo timestamp={timestamp} />\n        </div>\n        {showActions && (\n          <Actions\n            className={cx('MediaListRow-actions', selectedClass)}\n            selection={selection}\n            media={media}\n            makeActions={makeActions}\n          />\n        )}\n      </div>\n    ));\n  }\n}\n\nexport default enhance(HistoryRow);\n"]}