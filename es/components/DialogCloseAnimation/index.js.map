{"version":3,"sources":["components/DialogCloseAnimation/index.js"],"names":["React","PropTypes","DialogCloseAnimation","state","children","props","timeout","componentWillReceiveProps","nextProps","clearTimeout","setState","cloneElement","open","setTimeout","delay","componentWillUnmount","render","Component","propTypes","element","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA;;;;IAGqBC,oB;;;;;;;;;;;;wJAMnBC,K,GAAQ;AACNC,gBAAU,MAAKC,KAAL,CAAWD;AADf,K,QA+BRE,O,GAAU,I;;;iCA3BVC,yB,sCAA0BC,S,EAAW;AAAA;;AACnC,QAAIA,UAAUJ,QAAd,EAAwB;AACtB,WAAKK,YAAL;AACA,WAAKC,QAAL,CAAc;AACZN,kBAAUI,UAAUJ;AADR,OAAd;AAGD;AACD,QAAI,KAAKD,KAAL,CAAWC,QAAX,IAAuB,CAACI,UAAUJ,QAAtC,EAAgD;AAC9C,WAAKM,QAAL,CAAc;AACZN,kBAAUJ,MAAMW,YAAN,CAAmB,KAAKN,KAAL,CAAWD,QAA9B,EAAwC;AAChDQ,gBAAM;AAD0C,SAAxC;AADE,OAAd;;AAMA,WAAKN,OAAL,GAAeO,WAAW,YAAM;AAC9B,eAAKH,QAAL,CAAc;AACZN,oBAAU;AADE,SAAd;AAGA,eAAKE,OAAL,GAAe,IAAf;AACD,OALc,EAKZ,KAAKD,KAAL,CAAWS,KALC,CAAf;AAMD;AACF,G;;iCAEDC,oB,mCAAuB;AACrB,SAAKN,YAAL;AACD,G;;iCAIDA,Y;;;;;;;;;;gBAAe;AACb,QAAI,KAAKH,OAAT,EAAkB;AAChBG,mBAAa,KAAKH,OAAlB;AACA,WAAKA,OAAL,GAAe,IAAf;AACD;AACF,G;;iCAEDU,M,qBAAS;AACP,WAAO,KAAKb,KAAL,CAAWC,QAAX,IAAuB,IAA9B;AACD,G;;;EAhD+CJ,MAAMiB,S;;eAAnCf,oB;AAAAA,oB,CACZgB,S,2CAAY;AACjBd,YAAUH,UAAUkB,OADH;AAEjBL,SAAOb,UAAUmB,MAAV,CAAiBC;AAFP,C","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component that handles the material-ui/Dialog close animation when a Dialog unmounts.\n */\nexport default class DialogCloseAnimation extends React.Component {\n  static propTypes = {\n    children: PropTypes.element,\n    delay: PropTypes.number.isRequired\n  };\n\n  state = {\n    children: this.props.children\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.children) {\n      this.clearTimeout();\n      this.setState({\n        children: nextProps.children\n      });\n    }\n    if (this.state.children && !nextProps.children) {\n      this.setState({\n        children: React.cloneElement(this.props.children, {\n          open: false\n        })\n      });\n\n      this.timeout = setTimeout(() => {\n        this.setState({\n          children: null\n        });\n        this.timeout = null;\n      }, this.props.delay);\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearTimeout();\n  }\n\n  timeout = null;\n\n  clearTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }\n\n  render() {\n    return this.state.children || null;\n  }\n}\n"]}