{"version":3,"sources":["components/SettingsManager/NotificationSettings.js"],"names":["React","PropTypes","compose","withProps","translate","Switch","LabeledControl","enhance","onToggleUserJoin","e","value","props","onSettingChange","onToggleUserLeave","onToggleUserNameChanged","onToggleSkip","NotificationSettings","t","settings","notifications","userJoin","userLeave","userNameChanged","skip","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAMC,UAAUL,QACdC,UAAU;AAAA,SAAU;AAClBK,oBADkB,4BACDC,CADC,EACEC,KADF,EACS;AACzBC,YAAMC,eAAN,CAAsB,wBAAtB,EAAgDF,KAAhD;AACD,KAHiB;AAIlBG,qBAJkB,6BAIAJ,CAJA,EAIGC,KAJH,EAIU;AAC1BC,YAAMC,eAAN,CAAsB,yBAAtB,EAAiDF,KAAjD;AACD,KANiB;AAOlBI,2BAPkB,mCAOML,CAPN,EAOSC,KAPT,EAOgB;AAChCC,YAAMC,eAAN,CAAsB,+BAAtB,EAAuDF,KAAvD;AACD,KATiB;AAUlBK,gBAVkB,wBAULN,CAVK,EAUFC,KAVE,EAUK;AACrBC,YAAMC,eAAN,CAAsB,oBAAtB,EAA4CF,KAA5C;AACD;AAZiB,GAAV;AAAA,CAAV,CADc,EAedN,WAfc,CAAhB;;AAkBA,IAAMY,uBAAuB,SAAvBA,oBAAuB;AAAA,MAC3BC,CAD2B,QAC3BA,CAD2B;AAAA,MAE3BC,QAF2B,QAE3BA,QAF2B;AAAA,MAG3BV,gBAH2B,QAG3BA,gBAH2B;AAAA,MAI3BK,iBAJ2B,QAI3BA,iBAJ2B;AAAA,MAK3BC,uBAL2B,QAK3BA,uBAL2B;AAAA,MAM3BC,YAN2B,QAM3BA,YAN2B;AAAA,SAQ3B,wBACE;AAAI,eAAU;AAAd,aAAsCE,EAAE,8BAAF,CAAtC,CADF,EAEE;AAAG,eAAU;AAAb,aAAuCA,EAAE,6BAAF,CAAvC,CAFF,EAGE,KAAC,cAAD;AAAgB,WAAOA,EAAE,iCAAF,CAAvB;AAA6D,QAAG;AAAhE,aACE,KAAC,MAAD;AACE,WAAM,SADR;AAEE,aAASC,SAASC,aAAT,CAAuBC,QAFlC;AAGE,cAAUZ;AAHZ,IADF,CAHF,EAUE,KAAC,cAAD;AAAgB,WAAOS,EAAE,kCAAF,CAAvB;AAA8D,QAAG;AAAjE,aACE,KAAC,MAAD;AACE,WAAM,SADR;AAEE,aAASC,SAASC,aAAT,CAAuBE,SAFlC;AAGE,cAAUR;AAHZ,IADF,CAVF,EAiBE,KAAC,cAAD;AAAgB,WAAOI,EAAE,wCAAF,CAAvB;AAAoE,QAAG;AAAvE,aACE,KAAC,MAAD;AACE,WAAM,SADR;AAEE,aAASC,SAASC,aAAT,CAAuBG,eAFlC;AAGE,cAAUR;AAHZ,IADF,CAjBF,EAwBE,KAAC,cAAD;AAAgB,WAAOG,EAAE,6BAAF,CAAvB;AAAyD,QAAG;AAA5D,aACE,KAAC,MAAD;AACE,WAAM,SADR;AAEE,aAASC,SAASC,aAAT,CAAuBI,IAFlC;AAGE,cAAUR;AAHZ,IADF,CAxBF,CAR2B;AAAA,CAA7B;;AA0CAC,qBAAqBQ,SAArB,2CAAiC;AAC/BP,KAAGhB,UAAUwB,IAAV,CAAeC,UADa;AAE/BR,YAAUjB,UAAU0B,MAAV,CAAiBD,UAFI;AAG/Bd,mBAAiBX,UAAUwB,IAAV,CAAeC,UAHD;AAGa;AAC5ClB,oBAAkBP,UAAUwB,IAAV,CAAeC,UAJF;AAK/Bb,qBAAmBZ,UAAUwB,IAAV,CAAeC,UALH;AAM/BZ,2BAAyBb,UAAUwB,IAAV,CAAeC,UANT;AAO/BX,gBAAcd,UAAUwB,IAAV,CAAeC;AAPE,CAAjC;AAUA,eAAenB,QAAQS,oBAAR,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withProps from 'recompose/withProps';\nimport { translate } from 'react-i18next';\nimport Switch from '@material-ui/core/Switch';\nimport LabeledControl from './LabeledControl';\n\nconst enhance = compose(\n  withProps(props => ({\n    onToggleUserJoin(e, value) {\n      props.onSettingChange('notifications.userJoin', value);\n    },\n    onToggleUserLeave(e, value) {\n      props.onSettingChange('notifications.userLeave', value);\n    },\n    onToggleUserNameChanged(e, value) {\n      props.onSettingChange('notifications.userNameChanged', value);\n    },\n    onToggleSkip(e, value) {\n      props.onSettingChange('notifications.skip', value);\n    },\n  })),\n  translate(),\n);\n\nconst NotificationSettings = ({\n  t,\n  settings,\n  onToggleUserJoin,\n  onToggleUserLeave,\n  onToggleUserNameChanged,\n  onToggleSkip,\n}) => (\n  <div>\n    <h2 className=\"SettingsPanel-header\">{t('settings.notifications.title')}</h2>\n    <p className=\"SettingsPanel-helpText\">{t('settings.notifications.help')}</p>\n    <LabeledControl label={t('settings.notifications.userJoin')} id=\"uw-setting-userjoin\">\n      <Switch\n        color=\"primary\"\n        checked={settings.notifications.userJoin}\n        onChange={onToggleUserJoin}\n      />\n    </LabeledControl>\n    <LabeledControl label={t('settings.notifications.userLeave')} id=\"uw-setting-userleave\">\n      <Switch\n        color=\"primary\"\n        checked={settings.notifications.userLeave}\n        onChange={onToggleUserLeave}\n      />\n    </LabeledControl>\n    <LabeledControl label={t('settings.notifications.userNameChanged')} id=\"uw-setting-usernamechanged\">\n      <Switch\n        color=\"primary\"\n        checked={settings.notifications.userNameChanged}\n        onChange={onToggleUserNameChanged}\n      />\n    </LabeledControl>\n    <LabeledControl label={t('settings.notifications.skip')} id=\"uw-setting-skip\">\n      <Switch\n        color=\"primary\"\n        checked={settings.notifications.skip}\n        onChange={onToggleSkip}\n      />\n    </LabeledControl>\n  </div>\n);\n\nNotificationSettings.propTypes = {\n  t: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired,\n  onSettingChange: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n  onToggleUserJoin: PropTypes.func.isRequired,\n  onToggleUserLeave: PropTypes.func.isRequired,\n  onToggleUserNameChanged: PropTypes.func.isRequired,\n  onToggleSkip: PropTypes.func.isRequired,\n};\n\nexport default enhance(NotificationSettings);\n"],"file":"NotificationSettings.js"}