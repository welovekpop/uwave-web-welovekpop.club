{"version":3,"sources":["components/SettingsManager/SettingsPanel.js"],"names":["cx","React","PropTypes","translate","FormGroup","Switch","Profile","LabeledControl","LanguagePicker","LogoutButton","NotificationSettings","Links","enhance","SettingsPanel","handleVideoEnabledChange","e","value","props","onSettingChange","handleVideoSizeChange","handleMentionSoundChange","handleLanguageChange","event","onChangeLanguage","target","render","t","className","settings","user","onChangeUsername","onLogout","videoEnabled","videoSize","mentionSound","language","Component","propTypes","func","isRequired","string","object"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,UAAUT,WAAhB;;;;AAgDiB;AAAI,aAAU;AAAd,E;;;;AAgCP;AAAI,aAAU;AAAd,E;;;;AACA,KAAC,KAAD,K;;;;AACA;AAAI,aAAU;AAAd,E;;;;AAQA;AAAI,aAAU;AAAd,E;;IAxFJU,a;;;;;;;;;;;;8GAYJC,wB,GAA2B,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACvC,YAAKC,KAAL,CAAWC,eAAX,CAA2B,cAA3B,EAA2CF,KAA3C;AACD,K,QAEDG,qB,GAAwB,UAACJ,CAAD,EAAIC,KAAJ,EAAc;AACpC,YAAKC,KAAL,CAAWC,eAAX,CAA2B,WAA3B,EAAwCF,QAAQ,OAAR,GAAkB,OAA1D;AACD,K,QAEDI,wB,GAA2B,UAACL,CAAD,EAAIC,KAAJ,EAAc;AACvC,YAAKC,KAAL,CAAWC,eAAX,CAA2B,cAA3B,EAA2CF,KAA3C;AACD,K,QAEDK,oB,GAAuB,UAACC,KAAD,EAAW;AAChC,YAAKL,KAAL,CAAWM,gBAAX,CAA4BD,MAAME,MAAN,CAAaR,KAAzC;AACD,K;;;;;SAEDS,M,qBAAS;AAAA,iBAQH,KAAKR,KARF;AAAA,QAELS,CAFK,UAELA,CAFK;AAAA,QAGLC,SAHK,UAGLA,SAHK;AAAA,QAILC,QAJK,UAILA,QAJK;AAAA,QAKLC,IALK,UAKLA,IALK;AAAA,QAMLC,gBANK,UAMLA,gBANK;AAAA,QAOLC,QAPK,UAOLA,QAPK;AAUP,WACE;AAAK,iBAAW/B,GAAG,eAAH,EAAoB2B,SAApB;AAAhB,eACGE,QACC,KAAC,OAAD;AACE,YAAMA,IADR;AAEE,wBAAkBC;AAFpB,MAFJ,EAOGD,YAPH,EAQE;AAAK,iBAAU;AAAf,eACE;AAAI,iBAAU;AAAd,eAAsCH,EAAE,gBAAF,CAAtC,CADF,EAEE,KAAC,SAAD,cACE,KAAC,cAAD;AAAgB,aAAOA,EAAE,uBAAF,CAAvB;AAAmD,UAAG;AAAtD,eACE,KAAC,MAAD;AACE,aAAM,SADR;AAEE,eAASE,SAASI,YAFpB;AAGE,gBAAU,KAAKlB;AAHjB,MADF,CADF,EAQE,KAAC,cAAD;AAAgB,aAAOY,EAAE,oBAAF,CAAvB;AAAgD,UAAG;AAAnD,eACE,KAAC,MAAD;AACE,aAAM,SADR;AAEE,eAASE,SAASK,SAAT,KAAuB,OAFlC;AAGE,gBAAU,KAAKd;AAHjB,MADF,CARF,EAeE,KAAC,cAAD;AAAgB,aAAOO,EAAE,uBAAF,CAAvB;AAAmD,UAAG;AAAtD,eACE,KAAC,MAAD;AACE,aAAM,SADR;AAEE,eAASE,SAASM,YAFpB;AAGE,gBAAU,KAAKd;AAHjB,MADF,CAfF,EAsBE,KAAC,cAAD;AAAgB,aAAOM,EAAE,mBAAF,CAAvB;AAA+C,UAAG;AAAlD,eACE,KAAC,cAAD;AACE,aAAOE,SAASO,QADlB;AAEE,gBAAU,KAAKd;AAFjB,MADF,CAtBF,CAFF,uBAkCE,KAAC,YAAD;AAAc,gBAAUU;AAAxB,MAlCF,CARF,EA4CE;AAAK,iBAAU;AAAf,eACE,KAAC,oBAAD;AACE,gBAAUH,QADZ;AAEE,uBAAiB,KAAKX,KAAL,CAAWC;AAF9B,MADF,QA5CF,CADF;AAsDD,G;;;EA5FyBjB,MAAMmC,S;;AAA5BvB,a,CACGwB,S,2CAAY;AACjBX,KAAGxB,UAAUoC,IAAV,CAAeC,UADD;AAEjBZ,aAAWzB,UAAUsC,MAFJ;AAGjBZ,YAAU1B,UAAUuC,MAAV,CAAiBF,UAHV;AAIjBV,QAAM3B,UAAUuC,MAJC;AAKjBvB,mBAAiBhB,UAAUoC,IAAV,CAAeC,UALf;AAMjBT,oBAAkB5B,UAAUoC,IAAV,CAAeC,UANhB;AAOjBhB,oBAAkBrB,UAAUoC,IAAV,CAAeC,UAPhB;AAQjBR,YAAU7B,UAAUoC,IAAV,CAAeC;AARR,C;AA8FrB,eAAe3B,QAAQC,aAAR,CAAf","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { FormGroup } from 'material-ui/Form';\nimport Switch from 'material-ui/Switch';\nimport Profile from './Profile';\nimport LabeledControl from './LabeledControl';\nimport LanguagePicker from './LanguagePicker';\nimport LogoutButton from './LogoutButton';\nimport NotificationSettings from './NotificationSettings';\nimport Links from './Links';\n\nconst enhance = translate();\n\nclass SettingsPanel extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    settings: PropTypes.object.isRequired,\n    user: PropTypes.object,\n    onSettingChange: PropTypes.func.isRequired,\n    onChangeUsername: PropTypes.func.isRequired,\n    onChangeLanguage: PropTypes.func.isRequired,\n    onLogout: PropTypes.func.isRequired,\n  };\n\n  handleVideoEnabledChange = (e, value) => {\n    this.props.onSettingChange('videoEnabled', value);\n  };\n\n  handleVideoSizeChange = (e, value) => {\n    this.props.onSettingChange('videoSize', value ? 'large' : 'small');\n  };\n\n  handleMentionSoundChange = (e, value) => {\n    this.props.onSettingChange('mentionSound', value);\n  };\n\n  handleLanguageChange = (event) => {\n    this.props.onChangeLanguage(event.target.value);\n  };\n\n  render() {\n    const {\n      t,\n      className,\n      settings,\n      user,\n      onChangeUsername,\n      onLogout,\n    } = this.props;\n\n    return (\n      <div className={cx('SettingsPanel', className)}>\n        {user && (\n          <Profile\n            user={user}\n            onChangeUsername={onChangeUsername}\n          />\n        )}\n        {user && <hr className=\"SettingsPanel-divider\" />}\n        <div className=\"SettingsPanel-column SettingsPanel-column--left\">\n          <h2 className=\"SettingsPanel-header\">{t('settings.title')}</h2>\n          <FormGroup>\n            <LabeledControl label={t('settings.videoEnabled')} id=\"uw-setting-videoenabled\">\n              <Switch\n                color=\"primary\"\n                checked={settings.videoEnabled}\n                onChange={this.handleVideoEnabledChange}\n              />\n            </LabeledControl>\n            <LabeledControl label={t('settings.videoSize')} id=\"uw-setting-videosize\">\n              <Switch\n                color=\"primary\"\n                checked={settings.videoSize === 'large'}\n                onChange={this.handleVideoSizeChange}\n              />\n            </LabeledControl>\n            <LabeledControl label={t('settings.mentionSound')} id=\"uw-setting-mentionsound\">\n              <Switch\n                color=\"primary\"\n                checked={settings.mentionSound}\n                onChange={this.handleMentionSoundChange}\n              />\n            </LabeledControl>\n            <LabeledControl label={t('settings.language')} id=\"uw-setting-language\">\n              <LanguagePicker\n                value={settings.language}\n                onChange={this.handleLanguageChange}\n              />\n            </LabeledControl>\n          </FormGroup>\n          <hr className=\"SettingsPanel-divider\" />\n          <Links />\n          <hr className=\"SettingsPanel-divider\" />\n          <LogoutButton onLogout={onLogout} />\n        </div>\n        <div className=\"SettingsPanel-column SettingsPanel-column--right\">\n          <NotificationSettings\n            settings={settings}\n            onSettingChange={this.props.onSettingChange}\n          />\n          <hr className=\"SettingsPanel-divider\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SettingsPanel);\n"],"file":"SettingsPanel.js"}