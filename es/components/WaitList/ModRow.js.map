{"version":3,"sources":["components/WaitList/ModRow.js"],"names":["React","PropTypes","DropTarget","WAITLIST_USER","isDraggingNearTopOfRow","ModRowBase","userTarget","hover","props","monitor","component","setState","insertAbove","drop","insertAfter","position","collect","connect","connectDropTarget","dropTarget","isOver","ModRow","state","render","dropIndicator","Component","propTypes","func","isRequired","bool"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,aAAa;AACjBC,OADiB,iBACXC,KADW,EACJC,OADI,EACKC,SADL,EACgB;AAC/BA,cAAUC,QAAV,CAAmB;AACjBC,mBAAaR,uBAAuBK,OAAvB,EAAgCC,SAAhC;AADI,KAAnB;AAGD,GALgB;AAMjBG,MANiB,gBAMZL,KANY,EAMLC,OANK,EAMIC,SANJ,EAMe;AAC9B,QAAMI,cAAc,CAACV,uBAAuBK,OAAvB,EAAgCC,SAAhC,CAArB;AAD8B,QAEtBK,QAFsB,GAETL,UAAUF,KAFD,CAEtBO,QAFsB;;AAG9B,WAAO,EAAEA,UAAUD,cAAcC,WAAW,CAAzB,GAA6BA,QAAzC,EAAP;AACD;AAVgB,CAAnB;;AAaA,IAAMC,UAAU,SAAVA,OAAU,CAACC,OAAD,EAAUR,OAAV;AAAA,SAAuB;AACrCS,uBAAmBD,QAAQE,UAAR,EADkB;AAErCC,YAAQX,QAAQW,MAAR;AAF6B,GAAvB;AAAA,CAAhB;;AAKA;;;;;;aAsByC;;;IAlBnCC,M;;;;;;;;;;;;wJAMJC,K,GAAQ;AACNV,mBAAa;AADP,K;;;mBAIRW,M,qBAAS;AAAA,iBAKH,KAAKf,KALF;AAAA,QAELU,iBAFK,UAELA,iBAFK;AAAA,QAGLE,MAHK,UAGLA,MAHK;AAAA,QAIFZ,KAJE;;AAAA,QAMCI,WAND,GAMiB,KAAKU,KANtB,CAMCV,WAND;;;AAQP,QAAMY,oBAAN;;AAEA,WAAON,0CAEFE,UAAUR,WAAV,IAAyBY,aAFvB,EAGH,oBAAC,UAAD,EAAgBhB,KAAhB,CAHG,EAIFY,UAAU,CAACR,WAAX,IAA0BY,aAJxB,EAAP;AAOD,G;;;EA3BkBxB,MAAMyB,S;;AAArBJ,M,CACGK,S,2CAAY;AACjBR,qBAAmBjB,UAAU0B,IAAV,CAAeC,UADjB;AAEjBR,UAAQnB,UAAU4B,IAAV,CAAeD;AAFN,C;;;AA6BrB,eAAe1B,WAAWC,aAAX,EAA0BG,UAA1B,EAAsCU,OAAtC,EAA+CK,MAA/C,CAAf","file":"ModRow.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { WAITLIST_USER } from '../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../utils/isDraggingNearTopOfRow';\n\nimport ModRowBase from './ModRowBase';\n\nconst userTarget = {\n  hover(props, monitor, component) {\n    component.setState({\n      insertAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n  drop(props, monitor, component) {\n    const insertAfter = !isDraggingNearTopOfRow(monitor, component);\n    const { position } = component.props;\n    return { position: insertAfter ? position + 1 : position };\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\n/**\n * A Waitlist user row with drag/drop reordering support. This draws a drop\n * indicator around the main row.\n */\nclass ModRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertAbove } = this.state;\n\n    const dropIndicator = <div className=\"WaitlistRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div>\n        {isOver && insertAbove && dropIndicator}\n        <ModRowBase {...props} />\n        {isOver && !insertAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(WAITLIST_USER, userTarget, collect)(ModRow);\n"]}