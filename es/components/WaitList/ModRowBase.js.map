{"version":3,"sources":["components/WaitList/ModRowBase.js"],"names":["cx","React","PropTypes","compose","withProps","DragSource","DragIcon","RemoveIcon","WAITLIST_USER","userCardable","Avatar","Username","Position","userSource","beginDrag","props","user","endDrag","monitor","result","getDropResult","item","getItem","onMoveUser","position","collect","connect","isDragging","connectDragSource","dragSource","connectDragPreview","dragPreview","ModRowBase","className","onOpenCard","onRemoveUser","propTypes","string","number","isRequired","object","func","event","preventDefault","openUserCard"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withProps from 'recompose/withProps';\nimport { DragSource } from 'react-dnd';\nimport DragIcon from '@material-ui/icons/DragHandle';\nimport RemoveIcon from '@material-ui/icons/Close';\nimport { WAITLIST_USER } from '../../constants/DDItemTypes';\nimport userCardable from '../../utils/userCardable';\nimport Avatar from '../Avatar';\nimport Username from '../Username';\nimport Position from './Position';\n\nconst userSource = {\n  beginDrag(props) {\n    return { user: props.user };\n  },\n  endDrag(props, monitor) {\n    const result = monitor.getDropResult();\n    const item = monitor.getItem();\n    if (item.user && result) {\n      props.onMoveUser(result.position);\n    }\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  isDragging: monitor.isDragging(),\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n});\n\n/**\n * A Draggable waitlist user row with moderation tools.\n */\nconst ModRowBase = ({\n  className,\n  position,\n  user,\n  isDragging,\n  connectDragPreview,\n  connectDragSource,\n  onOpenCard,\n  onRemoveUser,\n}) => connectDragPreview((\n  <div\n    className={cx(\n      'UserRow',\n      'WaitlistRow',\n      'WaitlistRow--moderate',\n      isDragging && 'is-dragging',\n      className,\n    )}\n  >\n    <Position position={position + 1} />\n    <button\n      className=\"WaitlistRow-card\"\n      onClick={onOpenCard}\n    >\n      <Avatar\n        className=\"UserRow-avatar\"\n        user={user}\n      />\n      <Username className=\"UserRow-username\" user={user} />\n    </button>\n    <div className=\"WaitlistRow-tools\">\n      {connectDragSource((\n        <div className=\"WaitlistRow-tool WaitlistRow-handle\">\n          <DragIcon />\n        </div>\n      ))}\n      <button\n        className=\"WaitlistRow-tool WaitlistRow-remove\"\n        onClick={onRemoveUser}\n      >\n        <RemoveIcon />\n      </button>\n    </div>\n  </div>\n));\n\nModRowBase.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.number.isRequired,\n  user: PropTypes.object.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  onMoveUser: PropTypes.func.isRequired,\n  onRemoveUser: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  DragSource(WAITLIST_USER, userSource, collect),\n  userCardable(),\n  withProps(props => ({\n    onOpenCard(event) {\n      event.preventDefault();\n      props.openUserCard(props.user);\n    },\n  })),\n)(ModRowBase);\n"],"file":"ModRowBase.js"}