{"version":3,"sources":["components/WaitList/index.js"],"names":["cx","React","PropTypes","List","ModRow","SimpleRow","WaitList","className","users","onMoveUser","onRemoveUser","canMoveUsers","Row","index","key","position","length","propTypes","string","arrayOf","object","isRequired","bool","func"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,IAAMC,WAAW,SAAXA,QAAW,OAMX;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,WAGI,QAHJA,UAGI;AAAA,MAFJC,aAEI,QAFJA,YAEI;AAAA,MADJC,YACI,QADJA,YACI;;AACJ,MAAMC,MAAMD,eAAeP,MAAf,GAAwBC,SAApC;AACA;AAAA,eAEeL,GACT,UADS,EAET,iBAFS,EAGT,UAHS,EAITO,SAJS;AAFf,kBASK,IATL;AAAA,kBAUoB,sBAACM,KAAD,EAAQC,GAAR;AAAA,kBACX,GADW;AAAA,mBAGCd,GAAG,cAAH,EAAmBa,QAAQ,CAAR,KAAc,CAAd,IAAmB,yBAAtC,CAHD;AAAA,kBAIAA,KAJA;AAAA,cAKJL,MAAMK,KAAN,CALI;AAAA,oBAME;AAAA,iBAAYJ,YAAWD,MAAMK,KAAN,CAAX,EAAyBE,QAAzB,CAAZ;AAAA,SANF;AAAA,sBAOI;AAAA,iBAAML,cAAaF,MAAMK,KAAN,CAAb,CAAN;AAAA;AAPJ,SAELC,GAFK;AAAA,KAVpB;AAAA,YAoBcN,MAAMQ,MApBpB;AAAA,UAqBW;AArBX;AAyBD,CAjCD;;AAmCAV,SAASW,SAAT,2CAAqB;AACnBV,aAAWL,UAAUgB,MADF;AAEnBV,SAAON,UAAUiB,OAAV,CAAkBjB,UAAUkB,MAA5B,EAAoCC,UAFxB;AAGnBV,gBAAcT,UAAUoB,IAAV,CAAeD,UAHV;AAInBZ,cAAYP,UAAUqB,IAAV,CAAeF,UAJR;AAKnBX,gBAAcR,UAAUqB,IAAV,CAAeF;AALV,CAArB;;AAQA,eAAef,QAAf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from 'react-list';\nimport ModRow from './ModRow';\nimport SimpleRow from './SimpleRow';\n\nconst WaitList = ({\n  className,\n  users,\n  onMoveUser,\n  onRemoveUser,\n  canMoveUsers\n}) => {\n  const Row = canMoveUsers ? ModRow : SimpleRow;\n  return (\n    <div\n      className={cx(\n        'UserList',\n        'UserList--queue',\n        'WaitList',\n        className\n      )}\n    >\n      <List\n        itemRenderer={(index, key) => (\n          <Row\n            key={key}\n            className={cx('UserList-row', index % 2 === 0 && 'UserList-row--alternate')}\n            position={index}\n            user={users[index]}\n            onMoveUser={position => onMoveUser(users[index], position)}\n            onRemoveUser={() => onRemoveUser(users[index])}\n          />\n        )}\n        length={users.length}\n        type=\"uniform\"\n      />\n    </div>\n  );\n};\n\nWaitList.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  canMoveUsers: PropTypes.bool.isRequired,\n  onMoveUser: PropTypes.func.isRequired,\n  onRemoveUser: PropTypes.func.isRequired\n};\n\nexport default WaitList;\n"]}