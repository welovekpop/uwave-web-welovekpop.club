{"version":3,"sources":["components/MediaList/MediaDragPreview.js"],"names":["assign","React","PropTypes","muiThemeable","ListIcon","transformStyle","getItemStyles","offset","display","x","y","dragIconStyle","verticalAlign","marginRight","MediaDragPreview","muiTheme","items","currentOffset","media","palette","textColor","length","propTypes","object","isRequired","shape","number"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,SACpBC,SAASP,OACP,EAAEQ,SAAS,cAAX,EADO,EAEPH,8BAA4BE,OAAOE,CAAnC,YAA2CF,OAAOG,CAAlD,SAFO,CAAT,GAGI,EAAEF,SAAS,MAAX,EAJgB;AAAA,CAAtB;;AAOA,IAAMG,gBAAgB;AACpBC,iBAAe,QADK;AAEpBC,eAAa;AAFO,CAAtB;;AAKA,IAAMC,mBAAmB,SAAnBA,gBAAmB,OAInB;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,aACI,QADJA,aACI;;AACJ,MAAI,CAACD,KAAD,IAAU,CAACA,MAAME,KAArB,EAA4B;AAC1B,WAAO,IAAP;AACD;AACD;AAAA,eAEc,kBAFd;AAAA,WAGWZ,cAAcW,aAAd;AAHX,kBAKK,QALL;AAAA,WAMaF,SAASI,OAAT,CAAiBC,SAN9B;AAAA,WAOaT;AAPb,MASKK,MAAME,KAAN,CAAYG,MATjB;AAYD,CApBD;;AAsBAP,iBAAiBQ,SAAjB,2CAA6B;AAC3BP,YAAUb,UAAUqB,MAAV,CAAiBC,UADA;AAE3BR,SAAOd,UAAUqB,MAFU;AAG3BN,iBAAef,UAAUuB,KAAV,CAAgB;AAC7BhB,OAAGP,UAAUwB,MAAV,CAAiBF,UADS;AAE7Bd,OAAGR,UAAUwB,MAAV,CAAiBF;AAFS,GAAhB;AAHY,CAA7B;;AASA,eAAerB,eAAeW,gBAAf,CAAf","file":"MediaDragPreview.js","sourcesContent":["import assign from 'object-assign';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\nimport ListIcon from 'material-ui/svg-icons/action/list';\n\nimport transformStyle from '../../utils/transformStyle';\n\nconst getItemStyles = offset => (\n  offset ? assign(\n    { display: 'inline-block' },\n    transformStyle(`translate(${offset.x}px, ${offset.y}px)`),\n  ) : { display: 'none' }\n);\n\nconst dragIconStyle = {\n  verticalAlign: 'bottom',\n  marginRight: 3,\n};\n\nconst MediaDragPreview = ({\n  muiTheme,\n  items,\n  currentOffset,\n}) => {\n  if (!items || !items.media) {\n    return null;\n  }\n  return (\n    <div\n      className=\"MediaDragPreview\"\n      style={getItemStyles(currentOffset)}\n    >\n      <ListIcon\n        color={muiTheme.palette.textColor}\n        style={dragIconStyle}\n      />\n      {items.media.length}\n    </div>\n  );\n};\n\nMediaDragPreview.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  items: PropTypes.object,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n};\n\nexport default muiThemeable()(MediaDragPreview);\n"]}