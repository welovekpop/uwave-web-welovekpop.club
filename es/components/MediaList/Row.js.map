{"version":3,"sources":["components/MediaList/Row.js"],"names":["cx","React","PropTypes","DragSource","getEmptyImage","formatDuration","MEDIA","MediaLoadingIndicator","MediaThumbnail","Actions","inSelection","selection","media","some","item","_id","mediaSource","beginDrag","collect","connectDragSource","connect","dragSource","connectDragPreview","dragPreview","enhance","Row","handleKeyPress","event","code","props","onClick","handleDoubleClick","onOpenPreviewMediaDialog","componentDidMount","render","className","selected","makeActions","selectedClass","loadingClass","loading","duration","end","start","thumbnail","artist","title","Component","defaultProps","propTypes","string","func","isRequired","object","bool","array"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport formatDuration from 'format-duration';\nimport { MEDIA } from '../../constants/DDItemTypes';\nimport MediaLoadingIndicator from './MediaLoadingIndicator';\nimport MediaThumbnail from './MediaThumbnail';\nimport Actions from './Actions';\n\nconst inSelection = (selection, media) =>\n  selection.some(item => item._id === media._id);\n\nconst mediaSource = {\n  beginDrag({ selection, media }) {\n    return {\n      media: inSelection(selection, media) ? selection : [media],\n    };\n  },\n};\n\nconst collect = connect => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n});\n\nconst enhance = DragSource(MEDIA, mediaSource, collect);\n\nclass Row extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    media: PropTypes.object,\n    selected: PropTypes.bool,\n    selection: PropTypes.array,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    onClick: PropTypes.func,\n    makeActions: PropTypes.func,\n  };\n\n  static defaultProps = {\n    selected: false,\n  };\n\n  componentDidMount() {\n    this.props.connectDragPreview(getEmptyImage());\n  }\n\n  handleKeyPress = (event) => {\n    if (event.code === 'Space') {\n      this.props.onClick();\n    }\n  };\n\n  handleDoubleClick = () => {\n    this.props.onOpenPreviewMediaDialog(this.props.media);\n  };\n\n  render() {\n    const {\n      className,\n      media,\n      selection,\n      selected,\n      connectDragSource,\n      // actions\n      makeActions,\n      // etc\n      onClick,\n    } = this.props;\n    const selectedClass = selected ? 'is-selected' : '';\n    const loadingClass = media.loading ? 'is-loading' : '';\n    const duration = 'start' in media\n      // playlist item\n      ? media.end - media.start\n      // search result\n      : media.duration;\n\n    return connectDragSource((\n      // Bit uneasy about this, but turning the entire row into a button seems\n      // wrong as well! Since we nest media action <button>s inside it, too.\n      //\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={cx('MediaListRow', className, selectedClass, loadingClass)}\n        onDoubleClick={this.handleDoubleClick}\n        onKeyPress={this.handleKeyPress}\n        onClick={onClick}\n      >\n        {media.loading ? (\n          <MediaLoadingIndicator className=\"MediaListRow-loader\" />\n        ) : (\n          <MediaThumbnail url={media.thumbnail} />\n        )}\n        <div className=\"MediaListRow-artist\" title={media.artist}>\n          {media.artist}\n        </div>\n        <div className=\"MediaListRow-title\" title={media.title}>\n          {media.title}\n        </div>\n        <div className=\"MediaListRow-duration\">\n          {formatDuration(duration * 1000)}\n        </div>\n        <Actions\n          className={cx('MediaListRow-actions', selectedClass)}\n          selection={selection}\n          media={media}\n          makeActions={makeActions}\n        />\n      </div>\n    ));\n  }\n}\n\nexport default enhance(Row);\n"]}