{"version":3,"sources":["components/Username/index.js"],"names":["cx","React","PropTypes","compose","pure","muiThemeable","tempRoleIDToRoleName","Username","muiTheme","className","user","rankColors","roleName","Math","min","role","styles","color","username","propTypes","object","isRequired","string"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA;AACA,IAAMC,uBAAuB;AAC3B,KAAG,SADwB;AAE3B,KAAG,SAFwB;AAG3B,KAAG,WAHwB;AAI3B,KAAG,SAJwB;AAK3B,KAAG;AALwB,CAA7B;;AAQA,IAAMC,WAAW,SAAXA,QAAW,OAIX;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJC,IACI,QADJA,IACI;;AACJ,MAAMC,aAAaH,SAASG,UAA5B;AACA,MAAMC,WAAWN,qBAAqBO,KAAKC,GAAL,CAASJ,KAAKK,IAAd,EAAoB,CAApB,CAArB,CAAjB;AACA,MAAIC,eAAJ;AACA,MAAIL,WAAWC,QAAX,CAAJ,EAA0B;AACxBI,aAAS,EAAEC,OAAON,WAAWC,QAAX,CAAT,EAAT;AACD;;AAED;AAAA,eAEeZ,GAAG,UAAH,iBAA4BY,QAA5B,EAAwCH,SAAxC,CAFf;AAAA,WAGWO;AAHX,aAKKN,KAAKQ,QALV;AAQD,CApBD;;AAsBAX,SAASY,SAAT,2CAAqB;AACnBX,YAAUN,UAAUkB,MAAV,CAAiBC,UADR;AAEnBZ,aAAWP,UAAUoB,MAFF;AAGnBZ,QAAMR,UAAUkB,MAAV,CAAiBC;AAHJ,CAArB;;AAMA,eAAelB,QACbE,cADa,EAEbD,IAFa,EAGbG,QAHa,CAAf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\n\n// TODO define role names server-side instead of role numbers\nconst tempRoleIDToRoleName = {\n  0: 'default',\n  1: 'special',\n  2: 'moderator',\n  3: 'manager',\n  4: 'admin'\n};\n\nconst Username = ({\n  muiTheme,\n  className,\n  user\n}) => {\n  const rankColors = muiTheme.rankColors;\n  const roleName = tempRoleIDToRoleName[Math.min(user.role, 4)];\n  let styles;\n  if (rankColors[roleName]) {\n    styles = { color: rankColors[roleName] };\n  }\n\n  return (\n    <span\n      className={cx('Username', `Username--${roleName}`, className)}\n      style={styles}\n    >\n      {user.username}\n    </span>\n  );\n};\n\nUsername.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default compose(\n  muiThemeable(),\n  pure\n)(Username);\n"]}