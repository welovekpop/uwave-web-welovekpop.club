{"version":3,"sources":["components/FooterBar/Responses/Button.js"],"names":["cx","React","PropTypes","Tooltip","Button","state","showTooltip","handleMouseEnter","setState","handleMouseLeave","render","props","onClick","disabled","count","children","tooltip","top","Component","propTypes","func","isRequired","element","bool","number","string"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;;IAEqBC,M;;;;;;;;;;;;wJASnBC,K,GAAQ,EAAEC,aAAa,KAAf,E,QAERC,gB,GAAmB,YAAM;AACvB,YAAKC,QAAL,CAAc,EAAEF,aAAa,IAAf,EAAd;AACD,K,QAEDG,gB,GAAmB,YAAM;AACvB,YAAKD,QAAL,CAAc,EAAEF,aAAa,KAAf,EAAd;AACD,K;;;mBAEDI,M,qBAAS;AAAA,iBAOH,KAAKC,KAPF;AAAA,QAELC,OAFK,UAELA,OAFK;AAAA,QAGLC,QAHK,UAGLA,QAHK;AAAA,QAILC,KAJK,UAILA,KAJK;AAAA,QAKLC,QALK,UAKLA,QALK;AAAA,QAMLC,OANK,UAMLA,OANK;AAQP;AACA;AACA;AACA;AACA;;AACA;AAAA,iBAEehB,GAAG,gBAAH,EAAqBa,YAAY,0BAAjC,CAFf;AAAA,eAGaA,WAAW,IAAX,GAAkBD,OAH/B;AAAA,oBAIkB,KAAKL,gBAJvB;AAAA,oBAKkB,KAAKE;AALvB;AAAA,iBAOmB;AAPnB,oBAQO,OARP;AAAA,aASeO,OATf;AAAA,wBAUyB,KAVzB;AAAA,0BAW2B,QAX3B;AAAA,YAYc,KAAKX,KAAL,CAAWC,WAZzB;AAAA,aAae,EAAEW,KAAK,CAAC,EAAR;AAbf;AAAA,iBAeqB;AAfrB,eAe4CF,QAf5C;AAAA,iBAgBsB;AAhBtB,eAgB8CD,KAhB9C;AAoBD,G;;;EApDiCb,MAAMiB,S;;eAArBd,M;AAAAA,M,CACZe,S,2CAAY;AACjBP,WAASV,UAAUkB,IAAV,CAAeC,UADP;AAEjBN,YAAUb,UAAUoB,OAAV,CAAkBD,UAFX;AAGjBR,YAAUX,UAAUqB,IAHH;AAIjBT,SAAOZ,UAAUsB,MAJA;AAKjBR,WAASd,UAAUuB;AALF,C","file":"Button.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../../Tooltip';\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n    children: PropTypes.element.isRequired,\n    disabled: PropTypes.bool,\n    count: PropTypes.number,\n    tooltip: PropTypes.string\n  };\n\n  state = { showTooltip: false };\n\n  handleMouseEnter = () => {\n    this.setState({ showTooltip: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ showTooltip: false });\n  };\n\n  render() {\n    const {\n      onClick,\n      disabled,\n      count,\n      children,\n      tooltip\n    } = this.props;\n    // Buttons are fake-disabled because mouseleave acts inconsistently with\n    // tooltips and actually-disabled buttons, sometimes leaving the tooltip\n    // lingering. The cursor and hover effects are removed by the\n    // ResponseButton--disabled classname, and the click handler is simply not\n    // added.\n    return (\n      <button\n        className={cx('ResponseButton', disabled && 'ResponseButton--disabled')}\n        onClick={disabled ? null : onClick}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        <div className=\"ResponseButton-content\">\n          <Tooltip\n            label={tooltip}\n            verticalPosition=\"top\"\n            horizontalPosition=\"center\"\n            show={this.state.showTooltip}\n            style={{ top: -22 }}\n          />\n          <div className=\"ResponseButton-icon\">{children}</div>\n          <span className=\"ResponseButton-count\">{count}</span>\n        </div>\n      </button>\n    );\n  }\n}\n"]}