{"version":3,"sources":["components/FooterBar/NextMedia.js"],"names":["cx","React","PropTypes","translate","Interpolate","compose","pure","SongTitle","Eta","NextMedia","t","className","playlist","nextMedia","userInWaitlist","userIsDJ","baseEta","mediaEndTime","key","mediaEl","playlistEl","name","etaEl","propTypes","func","isRequired","string","object","bool","number"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,eAAvC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,YAAY,SAAZA,SAAY,OASZ;AAAA,MARJC,CAQI,QARJA,CAQI;AAAA,MAPJC,SAOI,QAPJA,SAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,MADJC,YACI,QADJA,YACI;;AACJ,MAAI,CAACL,QAAL,EAAe;AACb;AAAA,iBACkBZ,GAAG,WAAH,EAAgBW,SAAhB;AADlB,eAEKD,EAAE,6BAAF,CAFL;AAKD;;AAED,MAAIQ,MAAM,WAAV;AACA,MAAIH,QAAJ,EAAc;AACZG,UAAM,gBAAN;AACD,GAFD,MAEO,IAAIJ,cAAJ,EAAoB;AACzBI,UAAM,SAAN;AACD;;AAED,MAAMC,UAAUN,YACZ,oBAAC,SAAD,EAAeA,SAAf,CADY;AAAA,eAEG;AAFH,aAEgBH,EAAE,iBAAF,CAFhB,CAAhB;AAGA,MAAMU;AAAA,eACY;AADZ,aACkCR,SAASS,IAD3C,CAAN;AAGA,MAAMC,aACH,GADG;AAAA,eACW,eADX;AAAA,UACiCN,OADjC;AAAA,aACmDC;AADnD,IAAN;AAGA;AAAA,eACkBjB,GAAG,WAAH,EAAgBW,SAAhB;AADlB,aAEKQ,OAFL,OAGK,WAHL;AAAA,aAIeD,GAJf;AAAA,cAKgBE,UALhB;AAAA,SAMWE;AANX;AAUD,CA5CD;;AA8CAb,UAAUc,SAAV,2CAAsB;AACpBb,KAAGR,UAAUsB,IAAV,CAAeC,UADE;AAEpBd,aAAWT,UAAUwB,MAFD;AAGpBd,YAAUV,UAAUyB,MAHA;AAIpBd,aAAWX,UAAUyB,MAJD;AAKpBb,kBAAgBZ,UAAU0B,IAAV,CAAeH,UALX;AAMpBV,YAAUb,UAAU0B,IAAV,CAAeH,UANL;AAOpBT,WAASd,UAAU2B,MAPC;AAQpBZ,gBAAcf,UAAU2B;AARJ,CAAtB;;AAWA,eAAexB,QACbF,WADa,EAEbG,IAFa,EAGbG,SAHa,CAAf","file":"NextMedia.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate, Interpolate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport SongTitle from '../SongTitle';\nimport Eta from './Eta';\n\nconst NextMedia = ({\n  t,\n  className,\n  playlist,\n  nextMedia,\n  userInWaitlist,\n  userIsDJ,\n  baseEta,\n  mediaEndTime\n}) => {\n  if (!playlist) {\n    return (\n      <div className={cx('NextMedia', className)}>\n        {t('playlists.noPlaylistsCreate')}\n      </div>\n    );\n  }\n\n  let key = 'eta.empty';\n  if (userIsDJ) {\n    key = 'eta.playingNow';\n  } else if (userInWaitlist) {\n    key = 'eta.eta';\n  }\n\n  const mediaEl = nextMedia\n    ? <SongTitle {...nextMedia} />\n    : <div className=\"SongTitle\">{t('playlists.empty')}</div>;\n  const playlistEl = (\n    <span className=\"NextMedia-playlist\">{playlist.name}</span>\n  );\n  const etaEl = (\n    <Eta className=\"NextMedia-eta\" base={baseEta} endTime={mediaEndTime} />\n  );\n  return (\n    <div className={cx('NextMedia', className)}>\n      {mediaEl}\n      <Interpolate\n        i18nKey={key}\n        playlist={playlistEl}\n        eta={etaEl}\n      />\n    </div>\n  );\n};\n\nNextMedia.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  playlist: PropTypes.object,\n  nextMedia: PropTypes.object,\n  userInWaitlist: PropTypes.bool.isRequired,\n  userIsDJ: PropTypes.bool.isRequired,\n  baseEta: PropTypes.number,\n  mediaEndTime: PropTypes.number\n};\n\nexport default compose(\n  translate(),\n  pure\n)(NextMedia);\n"]}