{"version":3,"sources":["components/FooterBar/WaitlistButton.js"],"names":["cx","React","PropTypes","translate","compose","pure","muiThemeable","FlatButton","LockedIcon","inlineIconStyle","width","height","buttonStyle","fontSize","textTransform","lineHeight","WaitlistButton","t","muiTheme","userInWaitlist","isLocked","onClick","icon","iconColor","flatButton","textColor","disabledTextColor","palette","primary1Color","primary2Color","primary3Color","propTypes","func","isRequired","object","bool"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AAEA,IAAMC,kBAAkB;AACtBC,SAAO,KADe;AAEtBC,UAAQ;AAFc,CAAxB;;AAKA,IAAMC,cAAc;AAClBD,UAAQ,MADU;AAElBE,YAAU,MAFQ;AAGlBC,iBAAe,WAHG;AAIlB;AACA;AACAC,cAAY;AANM,CAApB;;AASA,IAAMC,iBAAiB,SAAjBA,cAAiB,OAMjB;AAAA,MALJC,CAKI,QALJA,CAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MAAIC,aAAJ;AACA,MAAIF,QAAJ,EAAc;AACZ,QAAMG,YAAYJ;AAChB;AADgB,MAEdD,SAASM,UAAT,CAAoBC;AACtB;AAHgB,MAIdP,SAASM,UAAT,CAAoBE,iBAJxB;AAKAJ,gBACG,UADH;AAAA,aAEWb,eAFX;AAAA,aAGWc;AAHX;AAMD;;AAED,cACG,UADH;AAAA,eAEevB,GAAG,gBAAH,EAAqBoB,YAAY,wBAAjC,CAFf;AAAA,cAGcA,YAAY,CAACD,cAH3B;AAAA,aAIaE,OAJb;AAAA,WAKWT,WALX;AAAA,qBAMqBM,SAASS,OAAT,CAAiBC,aANtC;AAAA,gBAOgBV,SAASS,OAAT,CAAiBE,aAPjC;AAAA,iBAQiBX,SAASS,OAAT,CAAiBG;AARlC,aAUKR,IAVL,EAWKF,YAAY,GAXjB,EAYKD,iBAAiBF,EAAE,gBAAF,CAAjB,GAAuCA,EAAE,eAAF,CAZ5C;AAeD,CArCD;;AAuCAD,eAAee,SAAf,2CAA2B;AACzBd,KAAGf,UAAU8B,IAAV,CAAeC,UADO;AAEzBf,YAAUhB,UAAUgC,MAAV,CAAiBD,UAFF;AAGzBd,kBAAgBjB,UAAUiC,IAHD;AAIzBf,YAAUlB,UAAUiC,IAJK;AAKzBd,WAASnB,UAAU8B,IAAV,CAAeC;AALC,CAA3B;;AAQA,eAAe7B,QACbE,cADa,EAEbH,WAFa,EAGbE,IAHa,EAIbW,cAJa,CAAf","file":"WaitlistButton.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\nimport FlatButton from 'material-ui/FlatButton';\nimport LockedIcon from 'material-ui/svg-icons/action/lock';\n\nconst inlineIconStyle = {\n  width: '1em',\n  height: '1em'\n};\n\nconst buttonStyle = {\n  height: '100%',\n  fontSize: '11pt',\n  textTransform: 'uppercase',\n  // Align multiline button text nicely. Good for languages where \"Join Waitlist\"\n  // becomes a longer phrase, especially.\n  lineHeight: '24px'\n};\n\nconst WaitlistButton = ({\n  t,\n  muiTheme,\n  userInWaitlist,\n  isLocked,\n  onClick\n}) => {\n  let icon;\n  if (isLocked) {\n    const iconColor = userInWaitlist\n      // The user can still leave the waitlist, if it's locked…\n      ? muiTheme.flatButton.textColor\n      // …but cannot join the waitlist.\n      : muiTheme.flatButton.disabledTextColor;\n    icon = (\n      <LockedIcon\n        style={inlineIconStyle}\n        color={iconColor}\n      />\n    );\n  }\n\n  return (\n    <FlatButton\n      className={cx('FooterBar-join', isLocked && 'FooterBar-join--locked')}\n      disabled={isLocked && !userInWaitlist}\n      onClick={onClick}\n      style={buttonStyle}\n      backgroundColor={muiTheme.palette.primary1Color}\n      hoverColor={muiTheme.palette.primary2Color}\n      rippleColor={muiTheme.palette.primary3Color}\n    >\n      {icon}\n      {isLocked && ' '}\n      {userInWaitlist ? t('waitlist.leave') : t('waitlist.join')}\n    </FlatButton>\n  );\n};\n\nWaitlistButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  muiTheme: PropTypes.object.isRequired,\n  userInWaitlist: PropTypes.bool,\n  isLocked: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default compose(\n  muiThemeable(),\n  translate(),\n  pure\n)(WaitlistButton);\n"]}