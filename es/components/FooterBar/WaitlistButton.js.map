{"version":3,"sources":["components/FooterBar/WaitlistButton.js"],"names":["cx","React","PropTypes","translate","compose","pure","Button","LockedIcon","WaitlistButton","t","userInWaitlist","isLocked","onClick","icon","root","disabled","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,OAKjB;AAAA,MAJJC,CAII,QAJJA,CAII;AAAA,MAHJC,cAGI,QAHJA,cAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MAAIC,aAAJ;AACA,MAAIF,QAAJ,EAAc;AACZE,gBACG,UADH;AAAA,iBAEeb,GACT,oBADS;AAET;AACA;AACA,OAACU,cAAD,IAAmB,4BAJV;AAFf;AAUD;;AAED,cACG,MADH;AAAA,aAEa;AACPI,YAAM,gBADC;AAEPC,gBAAU;AAFH,KAFb;AAAA,cAMcJ,YAAY,CAACD,cAN3B;AAAA,aAOaE;AAPb,aASKC,IATL,EAUKF,YAAY,GAVjB,EAWKD,iBAAiBD,EAAE,gBAAF,CAAjB,GAAuCA,EAAE,eAAF,CAX5C;AAcD,CAlCD;;AAoCAD,eAAeQ,SAAf,2CAA2B;AACzBP,KAAGP,UAAUe,IAAV,CAAeC,UADO;AAEzBR,kBAAgBR,UAAUiB,IAFD;AAGzBR,YAAUT,UAAUiB,IAHK;AAIzBP,WAASV,UAAUe,IAAV,CAAeC;AAJC,CAA3B;;AAOA,eAAed,QACbD,WADa,EAEbE,IAFa,EAGbG,cAHa,CAAf","file":"WaitlistButton.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport Button from 'material-ui/Button';\nimport LockedIcon from 'material-ui-icons/Lock';\n\nconst WaitlistButton = ({\n  t,\n  userInWaitlist,\n  isLocked,\n  onClick,\n}) => {\n  let icon;\n  if (isLocked) {\n    icon = (\n      <LockedIcon\n        className={cx(\n          'FooterBar-joinIcon',\n          // The user can still leave the waitlist, if it's locked,\n          // but cannot join the waitlist.\n          !userInWaitlist && 'FooterBar-joinIcon--locked',\n        )}\n      />\n    );\n  }\n\n  return (\n    <Button\n      classes={{\n        root: 'FooterBar-join',\n        disabled: 'FooterBar-join--locked',\n      }}\n      disabled={isLocked && !userInWaitlist}\n      onClick={onClick}\n    >\n      {icon}\n      {isLocked && ' '}\n      {userInWaitlist ? t('waitlist.leave') : t('waitlist.join')}\n    </Button>\n  );\n};\n\nWaitlistButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  userInWaitlist: PropTypes.bool,\n  isLocked: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  translate(),\n  pure,\n)(WaitlistButton);\n"]}