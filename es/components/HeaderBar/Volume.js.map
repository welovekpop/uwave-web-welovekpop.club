{"version":3,"sources":["components/HeaderBar/Volume.js"],"names":["cx","React","PropTypes","Slider","VolumeDownIcon","VolumeMuteIcon","VolumeOffIcon","VolumeUpIcon","sliderStyle","marginTop","marginBottom","Volume","handleVolumeChange","e","volume","props","onVolumeChange","handleMuteClick","muted","onUnmute","onMute","shouldComponentUpdate","nextProps","render","VolumeIcon","className","Component","propTypes","string","number","bool","func"],"mappings":";;;;AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAEA,IAAMC,cAAc;AAClB;AACA;AACA;AACAC,aAAW,CAAC,EAJM;AAKlBC,gBAAc;AALI,CAApB;;IAQqBC,M;;;;;;;;;;;;wJAgBnBC,kB,GAAqB,UAACC,CAAD,EAAIC,MAAJ,EAAe;AAClC,YAAKC,KAAL,CAAWC,cAAX,CAA0BF,MAA1B;AACD,K,QAEDG,e,GAAkB,YAAM;AACtB,UAAI,MAAKF,KAAL,CAAWG,KAAf,EAAsB;AACpB,cAAKH,KAAL,CAAWI,QAAX;AACD,OAFD,MAEO;AACL,cAAKJ,KAAL,CAAWK,MAAX;AACD;AACF,K;;;mBAfDC,qB,kCAAsBC,S,EAAW;AAC/B,WAAO,KAAKP,KAAL,CAAWD,MAAX,KAAsBQ,UAAUR,MAAhC,IACL,KAAKC,KAAL,CAAWG,KAAX,KAAqBI,UAAUJ,KADjC;AAED,G;;mBAcDK,M,qBAAS;AACP,QAAIC,aAAajB,YAAjB;AACA,QAAI,KAAKQ,KAAL,CAAWG,KAAf,EAAsB;AACpBM,mBAAalB,aAAb;AACD,KAFD,MAEO,IAAI,KAAKS,KAAL,CAAWD,MAAX,KAAsB,CAA1B,EAA6B;AAClCU,mBAAanB,cAAb;AACD,KAFM,MAEA,IAAI,KAAKU,KAAL,CAAWD,MAAX,GAAoB,EAAxB,EAA4B;AACjCU,mBAAapB,cAAb;AACD;AACD;AAAA,iBACkBJ,GAAG,cAAH,EAAmB,KAAKe,KAAL,CAAWU,SAA9B;AADlB,oBAEK,UAFL;AAAA,aAGY,MAHZ;AAAA,eAIe,KAAKR;AAJpB;AAAA,iBAMmB;AANnB,oBAOO,MAPP;AAAA,YAQa,QARb;AAAA,WASa,CATb;AAAA,WAUa,GAVb;AAAA,aAWe,KAAKF,KAAL,CAAWD,MAX1B;AAAA,aAYeN,WAZf;AAAA,gBAakB,KAAKI;AAbvB;AAkBD,G;;;EAvDiCX,MAAMyB,S;;eAArBf,M;AAAAA,M,CACZgB,S,2CAAY;AACjBF,aAAWvB,UAAU0B,MADJ;AAEjBd,UAAQZ,UAAU2B,MAFD;AAGjBX,SAAOhB,UAAU4B,IAHA;;AAKjBd,kBAAgBd,UAAU6B,IALT;AAMjBX,UAAQlB,UAAU6B,IAND;AAOjBZ,YAAUjB,UAAU6B;AAPH,C","file":"Volume.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'material-ui/Slider';\nimport VolumeDownIcon from 'material-ui/svg-icons/av/volume-down';\nimport VolumeMuteIcon from 'material-ui/svg-icons/av/volume-mute';\nimport VolumeOffIcon from 'material-ui/svg-icons/av/volume-off';\nimport VolumeUpIcon from 'material-ui/svg-icons/av/volume-up';\n\nconst sliderStyle = {\n  // The material-ui Slider has a 24px margin on top that we can't override,\n  // but we can compensate for it here.\n  // TODO Do this properly when/if material-ui gets a better styling solution.\n  marginTop: -21,\n  marginBottom: 3,\n};\n\nexport default class Volume extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    volume: PropTypes.number,\n    muted: PropTypes.bool,\n\n    onVolumeChange: PropTypes.func,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.volume !== nextProps.volume ||\n      this.props.muted !== nextProps.muted;\n  }\n\n  handleVolumeChange = (e, volume) => {\n    this.props.onVolumeChange(volume);\n  };\n\n  handleMuteClick = () => {\n    if (this.props.muted) {\n      this.props.onUnmute();\n    } else {\n      this.props.onMute();\n    }\n  };\n\n  render() {\n    let VolumeIcon = VolumeUpIcon;\n    if (this.props.muted) {\n      VolumeIcon = VolumeOffIcon;\n    } else if (this.props.volume === 0) {\n      VolumeIcon = VolumeMuteIcon;\n    } else if (this.props.volume < 50) {\n      VolumeIcon = VolumeDownIcon;\n    }\n    return (\n      <div className={cx('VolumeSlider', this.props.className)}>\n        <VolumeIcon\n          color=\"#fff\"\n          onClick={this.handleMuteClick}\n        />\n        <div className=\"VolumeSlider-slider\">\n          <Slider\n            name=\"volume\"\n            min={0}\n            max={100}\n            value={this.props.volume}\n            style={sliderStyle}\n            onChange={this.handleVolumeChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}