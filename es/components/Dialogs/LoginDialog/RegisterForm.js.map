{"version":3,"sources":["components/Dialogs/LoginDialog/RegisterForm.js"],"names":["React","PropTypes","translate","Interpolate","FormControlLabel","Checkbox","CircularProgress","EmailIcon","PasswordIcon","UserIcon","Form","FormGroup","TextField","Button","ReCaptcha","SocialLogin","Separator","enhance","RegisterForm","state","busy","agreed","captchaResponse","handleSubmit","event","preventDefault","setState","props","onRegister","username","value","email","password","grecaptcha","finally","handleCaptchaResponse","response","handleTosCheckbox","checked","refUsername","refEmail","refPassword","renderCaptcha","useReCaptcha","reCaptchaSiteKey","render","t","error","supportsSocialAuth","captchaOk","message","Component","propTypes","func","isRequired","bool","string","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate, Interpolate } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PasswordIcon from '@material-ui/icons/Lock';\nimport UserIcon from '@material-ui/icons/Person';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport TextField from '../../Form/TextField';\nimport Button from '../../Form/Button';\nimport ReCaptcha from '../../ReCaptcha';\nimport SocialLogin from './SocialLogin';\nimport Separator from './Separator';\n\nconst enhance = translate();\n\nclass RegisterForm extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    useReCaptcha: PropTypes.bool,\n    reCaptchaSiteKey: PropTypes.string,\n    supportsSocialAuth: PropTypes.bool,\n    error: PropTypes.object,\n\n    onRegister: PropTypes.func,\n  };\n\n  state = {\n    busy: false,\n    agreed: false,\n    captchaResponse: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ busy: true });\n    this.props.onRegister({\n      username: this.username.value,\n      email: this.email.value,\n      password: this.password.value,\n      grecaptcha: this.state.captchaResponse,\n    }).finally(() => {\n      this.setState({ busy: false });\n    });\n  };\n\n  handleCaptchaResponse = (response) => {\n    this.setState({\n      captchaResponse: response,\n    });\n  };\n\n  handleTosCheckbox = (event, checked) => {\n    this.setState({\n      agreed: checked,\n    });\n  };\n\n  refUsername = (username) => {\n    this.username = username;\n  };\n\n  refEmail = (email) => {\n    this.email = email;\n  };\n\n  refPassword = (password) => {\n    this.password = password;\n  };\n\n  renderCaptcha() {\n    if (!this.props.useReCaptcha) {\n      return null;\n    }\n    return (\n      <FormGroup>\n        <ReCaptcha\n          sitekey={this.props.reCaptchaSiteKey}\n          onResponse={this.handleCaptchaResponse}\n          theme=\"dark\"\n        />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const {\n      t, error, supportsSocialAuth, useReCaptcha,\n    } = this.props;\n    const { agreed, busy, captchaResponse } = this.state;\n    const captchaOk = !useReCaptcha || !!captchaResponse;\n\n    return (\n      <Form className=\"RegisterForm\" onSubmit={this.handleSubmit}>\n        {error && <FormGroup>{error.message}</FormGroup>}\n        {supportsSocialAuth && (\n          <React.Fragment>\n            <SocialLogin />\n            <Separator />\n          </React.Fragment>\n        )}\n        <FormGroup>\n          <TextField\n            ref={this.refUsername}\n            className=\"RegisterForm-field\"\n            autocomplete=\"nickname\"\n            placeholder={t('login.username')}\n            icon={<UserIcon nativeColor=\"#9f9d9e\" />}\n            autoFocus\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            ref={this.refEmail}\n            className=\"RegisterForm-field\"\n            type=\"email\"\n            autocomplete=\"email\"\n            placeholder={t('login.email')}\n            icon={<EmailIcon nativeColor=\"#9f9d9e\" />}\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            ref={this.refPassword}\n            className=\"RegisterForm-field\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n            placeholder={t('login.password')}\n            icon={<PasswordIcon nativeColor=\"#9f9d9e\" />}\n          />\n        </FormGroup>\n\n        {this.renderCaptcha()}\n\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={agreed}\n                onChange={this.handleTosCheckbox}\n              />\n            }\n            label={\n              <Interpolate\n                i18nKey=\"login.agree\"\n                privacyPolicy={\n                  <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"/privacy.html\">\n                    {t('login.privacyPolicy')}\n                  </a>\n                }\n              />\n            }\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Button\n            className=\"RegisterForm-submit\"\n            disabled={busy || !agreed || !captchaOk}\n          >\n            {busy\n              ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div>\n              : t('login.register')\n            }\n          </Button>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default enhance(RegisterForm);\n"],"file":"RegisterForm.js"}