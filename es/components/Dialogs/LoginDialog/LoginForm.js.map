{"version":3,"sources":["components/Dialogs/LoginDialog/LoginForm.js"],"names":["React","PropTypes","translate","EmailIcon","PasswordIcon","Loader","Form","FormGroup","TextField","Button","LoginForm","state","busy","handleSubmit","event","preventDefault","setState","props","onLogin","email","value","password","handleResetPassword","onOpenResetPasswordDialog","refEmail","refPassword","componentWillReceiveProps","render","t","error","message","Component","propTypes","func","isRequired","object"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;gBAoDmB,S;SAAgB;;;iBAWhB,Y;SAAmB;;;;aASH;gBAAkB,M;QAAY;;;IArE5CC,S,WADpBR,W;;;;;;;;;;;;wJASCS,K,GAAQ,EAAEC,MAAM,KAAR,E,QAMRC,Y,GAAe,UAACC,KAAD,EAAW;AACxBA,YAAMC,cAAN;AACA,YAAKC,QAAL,CAAc,EAAEJ,MAAM,IAAR,EAAd;AACA,YAAKK,KAAL,CAAWC,OAAX,CAAmB;AACjBC,eAAO,MAAKA,KAAL,CAAWC,KADD;AAEjBC,kBAAU,MAAKA,QAAL,CAAcD;AAFP,OAAnB;AAID,K,QAEDE,mB,GAAsB,UAACR,KAAD,EAAW;AAC/BA,YAAMC,cAAN;AACA,YAAKE,KAAL,CAAWM,yBAAX;AACD,K,QAEDC,Q,GAAW,UAACL,KAAD,EAAW;AACpB,YAAKA,KAAL,GAAaA,KAAb;AACD,K,QAEDM,W,GAAc,UAACJ,QAAD,EAAc;AAC1B,YAAKA,QAAL,GAAgBA,QAAhB;AACD,K;;;sBAxBDK,yB,wCAA4B;AAC1B,SAAKV,QAAL,CAAc,EAAEJ,MAAM,KAAR,EAAd;AACD,G;;sBAwBDe,M,qBAAS;AAAA,iBACc,KAAKV,KADnB;AAAA,QACCW,CADD,UACCA,CADD;AAAA,QACIC,KADJ,UACIA,KADJ;AAAA,QAECjB,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;;;AAIP,gBACG,IADH;AAAA,iBACkB,WADlB;AAAA,gBACwC,KAAKC;AAD7C,eAEKgB,cAAU,SAAV,cAAqBA,MAAMC,OAA3B,CAFL,OAGK,SAHL,cAIM,oBAAC,SAAD;AACE,WAAK,KAAKN,QADZ;AAEE,iBAAU,iBAFZ;AAGE,YAAK,OAHP;AAIE,mBAAaI,EAAE,aAAF,CAJf;AAKE,gBALF;AAME;AANF,MAJN,QAcK,SAdL,cAeM,oBAAC,SAAD;AACE,WAAK,KAAKH,WADZ;AAEE,iBAAU,iBAFZ;AAGE,YAAK,UAHP;AAIE,mBAAaG,EAAE,gBAAF,CAJf;AAKE;AALF,MAfN,QAwBK,SAxBL,mBAyBO,MAzBP;AAAA,iBA0BkB,kBA1BlB;AAAA,gBA2BkBhB;AA3BlB,eA6BSA,eAAsEgB,EAAE,aAAF,CA7B/E,SAiCK,SAjCL;AAAA;AAAA,eAkCuB,KAAKN,mBAlC5B;AAAA,iBAkC2D;AAlC3D;AAwCD,G;;;EAhFoCtB,MAAM+B,S;SAAxBrB,S;AAAAA,S,CACZsB,S,2CAAY;AACjBJ,KAAG3B,UAAUgC,IAAV,CAAeC,UADD;AAEjBL,SAAO5B,UAAUkC,MAFA;AAGjBjB,WAASjB,UAAUgC,IAHF;AAIjBV,6BAA2BtB,UAAUgC;AAJpB,C","file":"LoginForm.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport EmailIcon from 'material-ui/svg-icons/communication/email';\nimport PasswordIcon from 'material-ui/svg-icons/action/lock';\nimport Loader from '../../Loader';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport TextField from '../../Form/TextField';\nimport Button from '../../Form/Button';\n\n@translate()\nexport default class LoginForm extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    error: PropTypes.object,\n    onLogin: PropTypes.func,\n    onOpenResetPasswordDialog: PropTypes.func\n  };\n\n  state = { busy: false };\n\n  componentWillReceiveProps() {\n    this.setState({ busy: false });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ busy: true });\n    this.props.onLogin({\n      email: this.email.value,\n      password: this.password.value\n    });\n  };\n\n  handleResetPassword = (event) => {\n    event.preventDefault();\n    this.props.onOpenResetPasswordDialog();\n  };\n\n  refEmail = (email) => {\n    this.email = email;\n  };\n\n  refPassword = (password) => {\n    this.password = password;\n  };\n\n  render() {\n    const { t, error } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Form className=\"LoginForm\" onSubmit={this.handleSubmit}>\n        {error && <FormGroup>{error.message}</FormGroup>}\n        <FormGroup>\n          <TextField\n            ref={this.refEmail}\n            className=\"LoginForm-field\"\n            type=\"email\"\n            placeholder={t('login.email')}\n            icon={<EmailIcon color=\"#9f9d9e\" />}\n            autoFocus\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <TextField\n            ref={this.refPassword}\n            className=\"LoginForm-field\"\n            type=\"password\"\n            placeholder={t('login.password')}\n            icon={<PasswordIcon color=\"#9f9d9e\" />}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Button\n            className=\"LoginForm-submit\"\n            disabled={busy}\n          >\n            {busy ? <div className=\"Button-loading\"><Loader size=\"tiny\" /></div> : t('login.login')}\n          </Button>\n        </FormGroup>\n\n        <FormGroup>\n          <a href onClick={this.handleResetPassword} className=\"LoginForm-forgot\">\n            Forgot Password?\n          </a>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n"]}