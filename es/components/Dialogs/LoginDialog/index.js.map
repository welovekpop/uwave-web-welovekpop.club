{"version":3,"sources":["components/Dialogs/LoginDialog/index.js"],"names":["cx","React","PropTypes","compose","translate","Dialog","DialogTitle","DialogContent","withMobileDialog","IconButton","CloseIcon","LoginForm","RegisterForm","ResetPasswordForm","enhance","LoginDialog","props","t","fullScreen","open","show","onCloseDialog","form","title","paper","propTypes","func","isRequired","bool","string"],"mappings":";AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,MAAP,IACEC,WADF,EAEEC,aAFF,EAGEC,gBAHF,QAIO,uBAJP;AAKA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,IAAMC,UAAUX,QACdC,WADc,EAEdI,kBAFc,CAAhB;;gBAuCa,S;;AAlCb,IAAMO,cAAc,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MAE3BC,CAF2B,GAOzBD,KAPyB,CAE3BC,CAF2B;AAAA,MAG3BC,UAH2B,GAOzBF,KAPyB,CAG3BE,UAH2B;AAAA,MAI3BC,IAJ2B,GAOzBH,KAPyB,CAI3BG,IAJ2B;AAAA,MAK3BC,IAL2B,GAOzBJ,KAPyB,CAK3BI,IAL2B;AAAA,MAM3BC,aAN2B,GAOzBL,KAPyB,CAM3BK,aAN2B;;AAQ7B,MAAIC,aAAJ;AACA,MAAIC,cAAJ;AACA,MAAIH,SAAS,UAAb,EAAyB;AACvBG,YAAQN,EAAE,gBAAF,CAAR;AACAK,WAAO,oBAAC,YAAD,EAAkBN,KAAlB,CAAP;AACD,GAHD,MAGO,IAAII,SAAS,OAAb,EAAsB;AAC3BG,YAAQ,gBAAR;AACAD,WAAO,oBAAC,iBAAD,EAAuBN,KAAvB,CAAP;AACD,GAHM,MAGA;AACLO,YAAQN,EAAE,aAAF,CAAR;AACAK,WAAO,oBAAC,SAAD,EAAeN,KAAf,CAAP;AACD;AACD,cACG,MADH;AAAA,aAEa;AACPQ,aAAOxB,GAAG,QAAH,EAAa,aAAb,EAA4BkB,cAAc,qBAA1C;AADA,KAFb;AAAA,UAKUC,IALV;AAAA,gBAMgBD,UANhB;AAAA,aAOaG,aAPb;AAAA,uBAQoB;AARpB,kBAUK,WAVL;AAAA,eAU2B,cAV3B;AAAA,QAU6C;AAV7C,aAWOE,KAXP,EAYOL,mBACE,UADF;AAAA,eACuB,cADvB;AAAA,aAC+CG;AAD/C,kBAZP,QAkBK,aAlBL;AAAA,eAkB6B;AAlB7B,aAmBOC,IAnBP;AAuBD,CA3CD;;AA6CAP,YAAYU,SAAZ,2CAAwB;AACtBR,KAAGf,UAAUwB,IAAV,CAAeC,UADI;AAEtBR,QAAMjB,UAAU0B,IAFM;AAGtBR,QAAMlB,UAAU2B,MAHM;AAItBX,cAAYhB,UAAU0B,IAAV,CAAeD,UAJL;AAKtBN,iBAAenB,UAAUwB;AALH,CAAxB;;AAQA,eAAeZ,QAAQC,WAAR,CAAf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { translate } from 'react-i18next';\nimport Dialog, {\n  DialogTitle,\n  DialogContent,\n  withMobileDialog,\n} from 'material-ui/Dialog';\nimport IconButton from 'material-ui/IconButton';\nimport CloseIcon from 'material-ui-icons/Close';\nimport LoginForm from './LoginForm';\nimport RegisterForm from './RegisterForm';\nimport ResetPasswordForm from './ResetPasswordForm';\n\nconst enhance = compose(\n  translate(),\n  withMobileDialog(),\n);\n\nconst LoginDialog = (props) => {\n  const {\n    t,\n    fullScreen,\n    open,\n    show,\n    onCloseDialog,\n  } = props;\n  let form;\n  let title;\n  if (show === 'register') {\n    title = t('login.register');\n    form = <RegisterForm {...props} />;\n  } else if (show === 'reset') {\n    title = 'Reset Password';\n    form = <ResetPasswordForm {...props} />;\n  } else {\n    title = t('login.login');\n    form = <LoginForm {...props} />;\n  }\n  return (\n    <Dialog\n      classes={{\n        paper: cx('Dialog', 'LoginDialog', fullScreen && 'LoginDialog--mobile'),\n      }}\n      open={open}\n      fullScreen={fullScreen}\n      onClose={onCloseDialog}\n      aria-labelledby=\"uw-login-title\"\n    >\n      <DialogTitle className=\"Dialog-title\" id=\"uw-login-title\">\n        {title}\n        {fullScreen && (\n          <IconButton className=\"Dialog-close\" onClick={onCloseDialog}>\n            <CloseIcon />\n          </IconButton>\n        )}\n      </DialogTitle>\n      <DialogContent className=\"Dialog-body\">\n        {form}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nLoginDialog.propTypes = {\n  t: PropTypes.func.isRequired,\n  open: PropTypes.bool,\n  show: PropTypes.string,\n  fullScreen: PropTypes.bool.isRequired,\n  onCloseDialog: PropTypes.func,\n};\n\nexport default enhance(LoginDialog);\n"]}