{"version":3,"sources":["components/Dialogs/PromptDialog/index.js"],"names":["cx","React","PropTypes","Dialog","Form","FormGroup","TextField","Button","Loader","PromptDialog","state","busy","value","props","handleSubmit","event","preventDefault","promise","onSubmit","input","then","setState","onDone","handleClose","onCancel","handleInputChange","target","refInput","render","children","icon","inputType","placeholder","submitLabel","bodyClassName","contentClassName","titleClassName","Component","defaultProps","propTypes","node","string","func","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from 'material-ui/Dialog';\n\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport TextField from '../../Form/TextField';\nimport Button from '../../Form/Button';\nimport Loader from '../../Loader';\n\nexport default class PromptDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    placeholder: PropTypes.string,\n    submitLabel: PropTypes.string,\n    inputType: PropTypes.string,\n    icon: PropTypes.node,\n    value: PropTypes.string,\n\n    bodyClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    titleClassName: PropTypes.string,\n\n    onSubmit: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    submitLabel: 'OK',\n    inputType: 'text'\n  };\n\n  state = {\n    busy: false,\n    value: this.props.value || ''\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const promise = this.props.onSubmit(this.input.value);\n    if (promise && promise.then) {\n      this.setState({ busy: true });\n      const onDone = () => {\n        this.setState({ busy: false });\n      };\n      promise.then(onDone, onDone);\n    }\n  };\n\n  handleClose = () => {\n    this.props.onCancel();\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const {\n      children,\n      icon,\n      inputType,\n      placeholder,\n      submitLabel,\n\n      bodyClassName,\n      contentClassName,\n      titleClassName,\n\n      ...props\n    } = this.props;\n    const {\n      busy,\n      value\n    } = this.state;\n\n    return (\n      <Dialog\n        {...props}\n        contentClassName={cx('Dialog', contentClassName)}\n        bodyClassName={cx('Dialog-body', bodyClassName)}\n        titleClassName={cx('Dialog-title', titleClassName)}\n        onRequestClose={this.handleClose}\n        open\n      >\n        <Form onSubmit={this.handleSubmit}>\n          {children}\n          <FormGroup>\n            <TextField\n              ref={this.refInput}\n              autoFocus\n              type={inputType}\n              placeholder={placeholder}\n              icon={icon}\n              value={value}\n              onChange={this.handleInputChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button disabled={busy}>\n              {busy ? <div className=\"Button-loading\"><Loader size=\"tiny\" /></div> : submitLabel}\n            </Button>\n          </FormGroup>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n"]}