{"version":3,"sources":["components/Dialogs/EditMediaDialog/index.js"],"names":["cx","React","PropTypes","translate","Dialog","DialogTitle","DialogContent","IconButton","uniqueId","formatDuration","ArtistIcon","TitleIcon","StartIcon","EndIcon","SwapArtistTitleIcon","Form","FormGroup","Button","TextField","parseDuration","str","split","map","parseInt","part","trim","reduce","duration","enhance","EditMediaDialog","state","errors","artist","props","media","title","start","end","labelStart","labelEnd","handleSubmit","e","preventDefault","onEditedMedia","onCloseDialog","startSeconds","endSeconds","Number","isNaN","push","length","setState","handleChangeArtist","event","target","value","handleChangeTitle","handleChangeStart","handleChangeEnd","handleSwapArtistTitle","render","t","open","bodyClassName","contentClassName","titleClassName","baseTabIndex","content","artistInput","artistTitleLabel","titleInput","fromLabel","fromInput","toLabel","toInput","error","paper","Component","propTypes","func","isRequired","bool","object","string"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport uniqueId from 'lodash/uniqueId';\nimport formatDuration from 'format-duration';\nimport ArtistIcon from '@material-ui/icons/Headset';\nimport TitleIcon from '@material-ui/icons/MusicNote';\nimport StartIcon from '@material-ui/icons/PlayArrow';\nimport EndIcon from '@material-ui/icons/Stop';\nimport SwapArtistTitleIcon from '@material-ui/icons/SwapHoriz';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\nimport TextField from '../../Form/TextField';\n\n// naive HH:mm:ss â†’ seconds\nconst parseDuration = str => str.split(':')\n  .map(part => parseInt(part.trim(), 10))\n  .reduce((duration, part) => (duration * 60) + part, 0);\n\nconst enhance = translate();\n\nclass EditMediaDialog extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    open: PropTypes.bool,\n    media: PropTypes.object,\n\n    bodyClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    titleClassName: PropTypes.string,\n\n    onEditedMedia: PropTypes.func.isRequired,\n    onCloseDialog: PropTypes.func.isRequired,\n  };\n\n  state = {\n    errors: null,\n    artist: this.props.media.artist,\n    title: this.props.media.title,\n    start: formatDuration(this.props.media.start * 1000),\n    end: formatDuration(this.props.media.end * 1000),\n  };\n\n  title = uniqueId('editmedia');\n  labelStart = uniqueId('editmedia');\n  labelEnd = uniqueId('editmedia');\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { media, onEditedMedia, onCloseDialog } = this.props;\n    const {\n      artist, title, start, end,\n    } = this.state;\n\n    const startSeconds = parseDuration(start);\n    const endSeconds = parseDuration(end);\n\n    const errors = [];\n    if (Number.isNaN(startSeconds) || startSeconds < 0) {\n      errors.push('invalidStartTime');\n    }\n    if (Number.isNaN(endSeconds) || endSeconds < 0) {\n      errors.push('invalidEndTime');\n    } else if (endSeconds < startSeconds) {\n      errors.push('endTimeBeforeStart');\n    } else if (endSeconds > media.duration) {\n      errors.push('endTimeAfterSongEnd');\n    }\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    onEditedMedia({\n      artist,\n      title,\n      start: startSeconds,\n      end: endSeconds,\n    });\n    onCloseDialog();\n  };\n\n  handleChangeArtist = (event) => {\n    this.setState({ artist: event.target.value });\n  };\n\n  handleChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleChangeStart = (event) => {\n    this.setState({ start: event.target.value });\n  };\n\n  handleChangeEnd = (event) => {\n    this.setState({ end: event.target.value });\n  };\n\n  handleSwapArtistTitle = () => {\n    this.setState({\n      artist: this.state.title,\n      title: this.state.artist,\n    });\n  };\n\n  render() {\n    const {\n      t,\n      open,\n      media,\n      onCloseDialog,\n\n      bodyClassName,\n      contentClassName,\n      titleClassName,\n    } = this.props;\n    const {\n      errors,\n      artist,\n      title,\n      start,\n      end,\n    } = this.state;\n    const baseTabIndex = 1000;\n    let content = null;\n    if (open) {\n      const artistInput = (\n        <TextField\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={t(['dialogs.editMedia.artistLabel', 'media.artist'])}\n          value={artist}\n          onChange={this.handleChangeArtist}\n          icon={<ArtistIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex}\n          autoFocus\n        />\n      );\n      const artistTitleLabel = (\n        <div className=\"EditMediaDialogGroup-label\">\n          <IconButton onClick={this.handleSwapArtistTitle}>\n            <SwapArtistTitleIcon nativeColor=\"#9f9d9e\" />\n          </IconButton>\n        </div>\n      );\n      const titleInput = (\n        <TextField\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={t(['dialogs.editMedia.titleLabel', 'media.title'])}\n          value={title}\n          onChange={this.handleChangeTitle}\n          icon={<TitleIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 1}\n        />\n      );\n\n      const fromLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label htmlFor={this.labelStart} className=\"EditMediaDialogGroup-label\">\n          {t('dialogs.editMedia.playFromLabel')}\n        </label>\n      );\n      const fromInput = (\n        <TextField\n          id={this.labelStart}\n          className=\"EditMediaDialogGroup-field\"\n          placeholder=\"0:00\"\n          value={start}\n          onChange={this.handleChangeStart}\n          icon={<StartIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 2}\n        />\n      );\n      const toLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label htmlFor={this.labelEnd} className=\"EditMediaDialogGroup-label\">\n          {t('dialogs.editMedia.playToLabel')}\n        </label>\n      );\n      const toInput = (\n        <TextField\n          id={this.labelEnd}\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={formatDuration(media.duration)}\n          value={end}\n          onChange={this.handleChangeEnd}\n          icon={<EndIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 3}\n        />\n      );\n\n      content = (\n        <Form onSubmit={this.handleSubmit}>\n          {errors && errors.length > 0 && (\n            <FormGroup>\n              {errors.map(error => <div>{t(`dialogs.editMedia.errors.${error}`)}</div>)}\n            </FormGroup>\n          )}\n\n          <div className=\"EditMediaDialogForm\">\n            <div className=\"EditMediaDialogForm-column\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {artistInput}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {fromLabel}\n                {fromInput}\n              </FormGroup>\n            </div>\n            <div className=\"EditMediaDialogForm-separator\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {artistTitleLabel}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {toLabel}\n              </FormGroup>\n            </div>\n            <div className=\"EditMediaDialogForm-column\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {titleInput}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {toInput}\n              </FormGroup>\n            </div>\n          </div>\n\n          <FormGroup className=\"FormGroup--noSpacing\">\n            <Button className=\"EditMediaDialog-submit\">\n              {t('dialogs.editMedia.save')}\n            </Button>\n          </FormGroup>\n        </Form>\n      );\n    }\n\n    return (\n      <Dialog\n        classes={{\n          paper: cx('Dialog', 'EditMediaDialog', contentClassName),\n        }}\n        open={open}\n        onClose={onCloseDialog}\n        aria-labelledby={this.title}\n      >\n        <DialogTitle id={this.title} className={cx('Dialog-title', titleClassName)}>\n          {t('dialogs.editMedia.title')}\n        </DialogTitle>\n        <DialogContent className={cx('Dialog-body', bodyClassName)}>\n          {content}\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nexport default enhance(EditMediaDialog);\n"],"file":"index.js"}