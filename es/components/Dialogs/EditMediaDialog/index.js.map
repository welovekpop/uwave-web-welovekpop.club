{"version":3,"sources":["components/Dialogs/EditMediaDialog/index.js"],"names":["cx","React","PropTypes","translate","Dialog","DialogTitle","DialogContent","IconButton","uniqueId","formatDuration","ArtistIcon","TitleIcon","StartIcon","EndIcon","SwapArtistTitleIcon","Form","FormGroup","Button","TextField","parseDuration","str","split","map","parseInt","part","trim","reduce","duration","enhance","EditMediaDialog","state","errors","artist","props","media","title","start","end","labelStart","labelEnd","handleSubmit","e","preventDefault","onEditedMedia","onCloseDialog","startSeconds","endSeconds","Number","isNaN","push","length","setState","handleChangeArtist","event","target","value","handleChangeTitle","handleChangeStart","handleChangeEnd","handleSwapArtistTitle","render","t","open","bodyClassName","contentClassName","titleClassName","baseTabIndex","content","artistInput","artistTitleLabel","titleInput","fromLabel","fromInput","toLabel","toInput","error","paper","Component","propTypes","func","isRequired","bool","object","string"],"mappings":"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","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Dialog, { DialogTitle, DialogContent } from 'material-ui/Dialog';\nimport IconButton from 'material-ui/IconButton';\nimport uniqueId from 'lodash/uniqueId';\nimport formatDuration from 'format-duration';\nimport ArtistIcon from 'material-ui-icons/Headset';\nimport TitleIcon from 'material-ui-icons/MusicNote';\nimport StartIcon from 'material-ui-icons/PlayArrow';\nimport EndIcon from 'material-ui-icons/Stop';\nimport SwapArtistTitleIcon from 'material-ui-icons/SwapHoriz';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\nimport TextField from '../../Form/TextField';\n\n// naive HH:mm:ss â†’ seconds\nconst parseDuration = str => str.split(':')\n  .map(part => parseInt(part.trim(), 10))\n  .reduce((duration, part) => (duration * 60) + part, 0);\n\nconst enhance = translate();\n\nclass EditMediaDialog extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    open: PropTypes.bool,\n    media: PropTypes.object,\n\n    bodyClassName: PropTypes.string,\n    contentClassName: PropTypes.string,\n    titleClassName: PropTypes.string,\n\n    onEditedMedia: PropTypes.func.isRequired,\n    onCloseDialog: PropTypes.func.isRequired,\n  };\n\n  state = {\n    errors: null,\n    artist: this.props.media.artist,\n    title: this.props.media.title,\n    start: formatDuration(this.props.media.start * 1000),\n    end: formatDuration(this.props.media.end * 1000),\n  };\n\n  title = uniqueId('editmedia');\n  labelStart = uniqueId('editmedia');\n  labelEnd = uniqueId('editmedia');\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { media, onEditedMedia, onCloseDialog } = this.props;\n    const {\n      artist, title, start, end,\n    } = this.state;\n\n    const startSeconds = parseDuration(start);\n    const endSeconds = parseDuration(end);\n\n    const errors = [];\n    if (Number.isNaN(startSeconds) || startSeconds < 0) {\n      errors.push('invalidStartTime');\n    }\n    if (Number.isNaN(endSeconds) || endSeconds < 0) {\n      errors.push('invalidEndTime');\n    } else if (endSeconds < startSeconds) {\n      errors.push('endTimeBeforeStart');\n    } else if (endSeconds > media.duration) {\n      errors.push('endTimeAfterSongEnd');\n    }\n\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n    onEditedMedia({\n      artist,\n      title,\n      start: startSeconds,\n      end: endSeconds,\n    });\n    onCloseDialog();\n  };\n\n  handleChangeArtist = (event) => {\n    this.setState({ artist: event.target.value });\n  };\n\n  handleChangeTitle = (event) => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleChangeStart = (event) => {\n    this.setState({ start: event.target.value });\n  };\n\n  handleChangeEnd = (event) => {\n    this.setState({ end: event.target.value });\n  };\n\n  handleSwapArtistTitle = () => {\n    this.setState({\n      artist: this.state.title,\n      title: this.state.artist,\n    });\n  };\n\n  render() {\n    const {\n      t,\n      open,\n      media,\n      onCloseDialog,\n\n      bodyClassName,\n      contentClassName,\n      titleClassName,\n    } = this.props;\n    const {\n      errors,\n      artist,\n      title,\n      start,\n      end,\n    } = this.state;\n    const baseTabIndex = 1000;\n    let content = null;\n    if (open) {\n      const artistInput = (\n        <TextField\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={t(['dialogs.editMedia.artistLabel', 'media.artist'])}\n          value={artist}\n          onChange={this.handleChangeArtist}\n          icon={<ArtistIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex}\n          autoFocus\n        />\n      );\n      const artistTitleLabel = (\n        <div className=\"EditMediaDialogGroup-label\">\n          <IconButton onClick={this.handleSwapArtistTitle}>\n            <SwapArtistTitleIcon nativeColor=\"#9f9d9e\" />\n          </IconButton>\n        </div>\n      );\n      const titleInput = (\n        <TextField\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={t(['dialogs.editMedia.titleLabel', 'media.title'])}\n          value={title}\n          onChange={this.handleChangeTitle}\n          icon={<TitleIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 1}\n        />\n      );\n\n      const fromLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label htmlFor={this.labelStart} className=\"EditMediaDialogGroup-label\">\n          {t('dialogs.editMedia.playFromLabel')}\n        </label>\n      );\n      const fromInput = (\n        <TextField\n          id={this.labelStart}\n          className=\"EditMediaDialogGroup-field\"\n          placeholder=\"0:00\"\n          value={start}\n          onChange={this.handleChangeStart}\n          icon={<StartIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 2}\n        />\n      );\n      const toLabel = (\n        // eslint-disable-next-line jsx-a11y/label-has-for\n        <label htmlFor={this.labelEnd} className=\"EditMediaDialogGroup-label\">\n          {t('dialogs.editMedia.playToLabel')}\n        </label>\n      );\n      const toInput = (\n        <TextField\n          id={this.labelEnd}\n          className=\"EditMediaDialogGroup-field\"\n          placeholder={formatDuration(media.duration)}\n          value={end}\n          onChange={this.handleChangeEnd}\n          icon={<EndIcon nativeColor=\"#9f9d9e\" />}\n          tabIndex={baseTabIndex + 3}\n        />\n      );\n\n      content = (\n        <Form onSubmit={this.handleSubmit}>\n          {errors && errors.length > 0 && (\n            <FormGroup>\n              {errors.map(error => <div>{t(`dialogs.editMedia.errors.${error}`)}</div>)}\n            </FormGroup>\n          )}\n\n          <div className=\"EditMediaDialogForm\">\n            <div className=\"EditMediaDialogForm-column\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {artistInput}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {fromLabel}\n                {fromInput}\n              </FormGroup>\n            </div>\n            <div className=\"EditMediaDialogForm-separator\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {artistTitleLabel}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {toLabel}\n              </FormGroup>\n            </div>\n            <div className=\"EditMediaDialogForm-column\">\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {titleInput}\n              </FormGroup>\n              <FormGroup className=\"EditMediaDialogGroup\">\n                {toInput}\n              </FormGroup>\n            </div>\n          </div>\n\n          <FormGroup className=\"FormGroup--noSpacing\">\n            <Button className=\"EditMediaDialog-submit\">\n              {t('dialogs.editMedia.save')}\n            </Button>\n          </FormGroup>\n        </Form>\n      );\n    }\n\n    return (\n      <Dialog\n        classes={{\n          paper: cx('Dialog', 'EditMediaDialog', contentClassName),\n        }}\n        open={open}\n        onClose={onCloseDialog}\n        aria-labelledby={this.title}\n      >\n        <DialogTitle id={this.title} className={cx('Dialog-title', titleClassName)}>\n          {t('dialogs.editMedia.title')}\n        </DialogTitle>\n        <DialogContent className={cx('Dialog-body', bodyClassName)}>\n          {content}\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nexport default enhance(EditMediaDialog);\n"]}