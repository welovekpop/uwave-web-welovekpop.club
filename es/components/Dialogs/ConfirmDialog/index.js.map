{"version":3,"sources":["components/Dialogs/ConfirmDialog/index.js"],"names":["React","PropTypes","Dialog","Form","FormGroup","Button","Loader","ConfirmDialog","state","busy","handleSubmit","event","preventDefault","handleConfirm","promise","props","onConfirm","then","setState","onDone","handleClose","onCancel","render","children","cancelLabel","confirmLabel","Component","defaultProps","propTypes","node","string","func","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;aAmE2B;;;;aAGY;gBAAkB,M;QAAY;;;IApEhDC,a;;;;;;;;;;;;wJAenBC,K,GAAQ;AACNC,YAAM;AADA,K,QAIRC,Y,GAAe,UAACC,KAAD,EAAW;AACxBA,YAAMC,cAAN;AACD,K,QAEDC,a,GAAgB,UAACF,KAAD,EAAW;AACzBA,YAAMC,cAAN;AACA,UAAME,UAAU,MAAKC,KAAL,CAAWC,SAAX,EAAhB;AACA,UAAIF,WAAWA,QAAQG,IAAvB,EAA6B;AAC3B,cAAKC,QAAL,CAAc,EAAET,MAAM,IAAR,EAAd;AACA,YAAMU,SAAS,SAATA,MAAS,GAAM;AACnB,gBAAKD,QAAL,CAAc,EAAET,MAAM,KAAR,EAAd;AACD,SAFD;AAGAK,gBAAQG,IAAR,CAAaE,MAAb,EAAqBA,MAArB;AACD;AACF,K,QAEDC,W,GAAc,UAACT,KAAD,EAAW;AACvB,UAAIA,SAASA,MAAMC,cAAnB,EAAmC;AACjCD,cAAMC,cAAN;AACD;AACD,YAAKG,KAAL,CAAWM,QAAX;AACD,K;;;0BAEDC,M,qBAAS;AAAA,iBAMH,KAAKP,KANF;AAAA,QAELQ,QAFK,UAELA,QAFK;AAAA,QAGLC,WAHK,UAGLA,WAHK;AAAA,QAILC,YAJK,UAILA,YAJK;AAAA,QAKFV,KALE;;AAAA,QAOCN,IAPD,GAOU,KAAKD,KAPf,CAOCC,IAPD;;;AASP,WACE;AAAC,YAAD;AAAA,mBACMM,KADN;AAEE,wBAAgB,KAAKK,WAFvB;AAGE;AAHF;AAAA,WAKG,IALH;AAAA,kBAKkB,KAAKV;AALvB,iBAMKa,QANL,OAOK,SAPL;AAAA,mBAOyB;AAPzB;AAAA,mBAQqB;AARrB,sBASS,MATT;AAAA,kBAS0Bd,IAT1B;AAAA,iBASyC,KAAKW;AAT9C,iBAUWI,WAVX;AAAA,mBAcqB;AAdrB,sBAeS,MAfT;AAAA,kBAe0Bf,IAf1B;AAAA,iBAeyC,KAAKI;AAf9C,iBAgBWJ,eAAsEgB,YAhBjF;AAAA,KADF;AAwBD,G;;;EA3EwCzB,MAAM0B,S;;AAA5BnB,a,CAUZoB,Y,GAAe;AACpBH,eAAa,QADO;AAEpBC,gBAAc;AAFM,C;eAVHlB,a;AAAAA,a,CACZqB,S,2CAAY;AACjBL,YAAUtB,UAAU4B,IADH;AAEjBJ,gBAAcxB,UAAU6B,MAFP;AAGjBN,eAAavB,UAAU6B,MAHN;;AAKjBd,aAAWf,UAAU8B,IAAV,CAAeC,UALT;AAMjBX,YAAUpB,UAAU8B,IAAV,CAAeC;AANR,C","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from 'material-ui/Dialog';\n\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport Button from '../../Form/Button';\nimport Loader from '../../Loader';\n\nexport default class ConfirmDialog extends React.Component {\n  static propTypes = {\n    children: PropTypes.node,\n    confirmLabel: PropTypes.string,\n    cancelLabel: PropTypes.string,\n\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    cancelLabel: 'Cancel',\n    confirmLabel: 'OK'\n  };\n\n  state = {\n    busy: false\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  handleConfirm = (event) => {\n    event.preventDefault();\n    const promise = this.props.onConfirm();\n    if (promise && promise.then) {\n      this.setState({ busy: true });\n      const onDone = () => {\n        this.setState({ busy: false });\n      };\n      promise.then(onDone, onDone);\n    }\n  };\n\n  handleClose = (event) => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.props.onCancel();\n  };\n\n  render() {\n    const {\n      children,\n      cancelLabel,\n      confirmLabel,\n      ...props\n    } = this.props;\n    const { busy } = this.state;\n\n    return (\n      <Dialog\n        {...props}\n        onRequestClose={this.handleClose}\n        open\n      >\n        <Form onSubmit={this.handleSubmit}>\n          {children}\n          <FormGroup className=\"ConfirmDialog-buttons\">\n            <div className=\"ConfirmDialog-button\">\n              <Button disabled={busy} onClick={this.handleClose}>\n                {cancelLabel}\n              </Button>\n            </div>\n            <div className=\"ConfirmDialog-spacer\" />\n            <div className=\"ConfirmDialog-button\">\n              <Button disabled={busy} onClick={this.handleConfirm}>\n                {busy ? <div className=\"Button-loading\"><Loader size=\"tiny\" /></div> : confirmLabel}\n              </Button>\n            </div>\n          </FormGroup>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n"]}