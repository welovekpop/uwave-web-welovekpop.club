{"version":3,"sources":["components/App/index.js"],"names":["React","PropTypes","DragDropContext","compose","toClass","HTML5Backend","FooterBar","HeaderBar","Video","ErrorArea","Overlays","PlaylistManager","RoomHistory","SettingsManager","About","SidePanels","Dialogs","AddToPlaylistMenu","DragLayer","App","activeOverlay","settings","hasAboutPage","onCloseOverlay","videoEnabled","videoSize","muted","volume","propTypes","string","object","isRequired","bool","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;aAUqB;gBACZ,S;aACW,Y;SACJ;;;iBAUP,S;;iBAoBF,S;aAAoB;;;;aAGR;gBACZ,U;;iBAGF,O;;iBAEA,iB;;iBACA,S;;AAnDL,IAAMC,MAAM,SAANA,GAAM;AAAA,MACVC,aADU,QACVA,aADU;AAAA,MAEVC,QAFU,QAEVA,QAFU;AAAA,MAGVC,YAHU,QAGVA,YAHU;AAAA,MAIVC,cAJU,QAIVA,cAJU;AAAA;AAAA,eAMK;AANL;AAAA,eAOO;AAPP;AAAA,eAcS;AAdT,kBAeH,KAfG;AAAA,aAgBOF,SAASG,YAhBhB;AAAA,UAiBIH,SAASI,SAjBb;AAAA,aAkBOJ,SAASK,KAlBhB;AAAA,YAmBML,SAASM;AAnBf,mBAuBL,QAvBK;AAAA,oBAuBmB,SAvBnB;AAAA,YAuBqCP;AAvBrC,aAwBHE,qBAAiB,KAAjB;AAAA,oBAEiBC;AAFjB,KACK,OADL,CAxBG,OA4BH,eA5BG;AAAA,oBA8BcA;AA9Bd,KA6BE,iBA7BF,QAgCH,WAhCG;AAAA,oBAkCcA;AAlCd,KAiCE,aAjCF,QAoCH,eApCG;AAAA,oBAsCcA;AAtCd,KAqCE,UArCF;AAAA,CAAZ;;AAuDAJ,IAAIS,SAAJ,2CAAgB;AACdR,iBAAenB,UAAU4B,MADX;AAEdR,YAAUpB,UAAU6B,MAAV,CAAiBC,UAFb;AAGdT,gBAAcrB,UAAU+B,IAHV;;AAKdT,kBAAgBtB,UAAUgC,IAAV,CAAeF;AALjB,CAAhB;;AAQA,eAAe5B,QACbD,gBAAgBG,YAAhB,CADa;AAEb;AACA;AACAD,OAJa,EAKbe,GALa,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext } from 'react-dnd';\nimport compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport FooterBar from '../../containers/FooterBar';\nimport HeaderBar from '../../containers/HeaderBar';\nimport Video from '../../containers/Video';\nimport ErrorArea from '../../containers/ErrorArea';\nimport Overlays from './Overlays';\nimport PlaylistManager from '../../containers/PlaylistManager';\nimport RoomHistory from '../../containers/RoomHistory';\nimport SettingsManager from '../../containers/SettingsManager';\nimport About from '../../containers/About';\n\nimport SidePanels from '../../containers/SidePanels';\nimport Dialogs from '../Dialogs';\nimport AddToPlaylistMenu from '../../containers/AddToPlaylistMenu';\nimport DragLayer from '../../containers/DragLayer';\n\nconst App = ({\n  activeOverlay,\n  settings,\n  hasAboutPage,\n  onCloseOverlay\n}) => (\n  <div className=\"App\">\n    <div className=\"AppColumn AppColumn--left\">\n      <div className=\"AppRow AppRow--top\">\n        <HeaderBar\n          className=\"App-header\"\n          title=\"Ã¼Wave\"\n        />\n      </div>\n      <div className=\"AppRow AppRow--middle\">\n        <Video\n          enabled={settings.videoEnabled}\n          size={settings.videoSize}\n          isMuted={settings.muted}\n          volume={settings.volume}\n        />\n        <ErrorArea />\n      </div>\n      <Overlays transitionName=\"Overlay\" active={activeOverlay}>\n        {hasAboutPage && <About\n          key=\"about\"\n          onCloseOverlay={onCloseOverlay}\n        />}\n        <PlaylistManager\n          key=\"playlistManager\"\n          onCloseOverlay={onCloseOverlay}\n        />\n        <RoomHistory\n          key=\"roomHistory\"\n          onCloseOverlay={onCloseOverlay}\n        />\n        <SettingsManager\n          key=\"settings\"\n          onCloseOverlay={onCloseOverlay}\n        />\n      </Overlays>\n      <FooterBar className=\"AppRow AppRow--bottom\" />\n    </div>\n\n    <div className=\"AppColumn AppColumn--right\">\n      <SidePanels />\n    </div>\n\n    <Dialogs />\n\n    <AddToPlaylistMenu />\n    <DragLayer />\n  </div>\n);\n\nApp.propTypes = {\n  activeOverlay: PropTypes.string,\n  settings: PropTypes.object.isRequired,\n  hasAboutPage: PropTypes.bool,\n\n  onCloseOverlay: PropTypes.func.isRequired\n};\n\nexport default compose(\n  DragDropContext(HTML5Backend),\n  // DragDropContext needs to be able to set a ref on the component, so we can't\n  // use a stateless function directly.\n  toClass\n)(App);\n"]}