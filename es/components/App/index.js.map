{"version":3,"sources":["components/App/index.js"],"names":["React","PropTypes","DragDropContext","compose","toClass","HTML5Backend","FooterBar","HeaderBar","Video","ErrorArea","Overlays","PlaylistManager","RoomHistory","SettingsManager","AdminProxy","About","ConnectionIndicator","SidePanels","Dialogs","AddToPlaylistMenu","DragLayer","App","activeOverlay","isConnected","settings","hasAboutPage","onCloseOverlay","videoEnabled","videoSize","muted","volume","propTypes","string","bool","isRequired","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;aAWqB;gBACZ,S;aACW,Y;SACJ;;;iBAUP,S;;iBAyBF,S;aAAoB;;;;aAGR;gBACZ,U;;iBAGF,O;;iBAEA,iB;;iBACA,S;;AAzDL,IAAMC,MAAM,SAANA,GAAM;AAAA,MACVC,aADU,QACVA,aADU;AAAA,MAEVC,WAFU,QAEVA,WAFU;AAAA,MAGVC,QAHU,QAGVA,QAHU;AAAA,MAIVC,YAJU,QAIVA,YAJU;AAAA,MAKVC,cALU,QAKVA,cALU;AAAA;AAAA,eAOK;AAPL;AAAA,eAQO;AARP;AAAA,eAeS;AAfT,kBAgBH,KAhBG;AAAA,aAiBOF,SAASG,YAjBhB;AAAA,UAkBIH,SAASI,SAlBb;AAAA,aAmBOJ,SAASK,KAnBhB;AAAA,YAoBML,SAASM;AApBf,kBAuBH,mBAvBG;AAAA,iBAuB8BP;AAvB9B,YAyBL,QAzBK;AAAA,oBAyBmB,SAzBnB;AAAA,YAyBqCD;AAzBrC,aA0BHG,qBAAiB,KAAjB;AAAA,oBAEiBC;AAFjB,KACK,OADL,CA1BG,OA8BH,UA9BG;AAAA,oBAgCcA;AAhCd,KA+BE,OA/BF,QAkCH,eAlCG;AAAA,oBAoCcA;AApCd,KAmCE,iBAnCF,QAsCH,WAtCG;AAAA,oBAwCcA;AAxCd,KAuCE,aAvCF,QA0CH,eA1CG;AAAA,oBA4CcA;AA5Cd,KA2CE,UA3CF;AAAA,CAAZ;;AA6DAL,IAAIU,SAAJ,2CAAgB;AACdT,iBAAerB,UAAU+B,MADX;AAEdT,eAAatB,UAAUgC,IAAV,CAAeC,UAFd;AAGdV,YAAUvB,UAAUkC,MAAV,CAAiBD,UAHb;AAIdT,gBAAcxB,UAAUgC,IAJV;;AAMdP,kBAAgBzB,UAAUmC,IAAV,CAAeF;AANjB,CAAhB;;AASA,eAAe/B,QACbD,gBAAgBG,YAAhB,CADa;AAEb;AACA;AACAD,OAJa,EAKbiB,GALa,CAAf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext } from 'react-dnd';\nimport compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport FooterBar from '../../containers/FooterBar';\nimport HeaderBar from '../../containers/HeaderBar';\nimport Video from '../../containers/Video';\nimport ErrorArea from '../../containers/ErrorArea';\nimport Overlays from './Overlays';\nimport PlaylistManager from '../../containers/PlaylistManager';\nimport RoomHistory from '../../containers/RoomHistory';\nimport SettingsManager from '../../containers/SettingsManager';\nimport AdminProxy from '../AdminProxy';\nimport About from '../../containers/About';\nimport ConnectionIndicator from '../ConnectionIndicator';\n\nimport SidePanels from '../../containers/SidePanels';\nimport Dialogs from '../Dialogs';\nimport AddToPlaylistMenu from '../../containers/AddToPlaylistMenu';\nimport DragLayer from '../../containers/DragLayer';\n\nconst App = ({\n  activeOverlay,\n  isConnected,\n  settings,\n  hasAboutPage,\n  onCloseOverlay,\n}) => (\n  <div className=\"App\">\n    <div className=\"AppColumn AppColumn--left\">\n      <div className=\"AppRow AppRow--top\">\n        <HeaderBar\n          className=\"App-header\"\n          title=\"Ã¼Wave\"\n        />\n      </div>\n      <div className=\"AppRow AppRow--middle\">\n        <Video\n          enabled={settings.videoEnabled}\n          size={settings.videoSize}\n          isMuted={settings.muted}\n          volume={settings.volume}\n        />\n        <ErrorArea />\n        <ConnectionIndicator isConnected={isConnected} />\n      </div>\n      <Overlays transitionName=\"Overlay\" active={activeOverlay}>\n        {hasAboutPage && <About\n          key=\"about\"\n          onCloseOverlay={onCloseOverlay}\n        />}\n        <AdminProxy\n          key=\"admin\"\n          onCloseOverlay={onCloseOverlay}\n        />\n        <PlaylistManager\n          key=\"playlistManager\"\n          onCloseOverlay={onCloseOverlay}\n        />\n        <RoomHistory\n          key=\"roomHistory\"\n          onCloseOverlay={onCloseOverlay}\n        />\n        <SettingsManager\n          key=\"settings\"\n          onCloseOverlay={onCloseOverlay}\n        />\n      </Overlays>\n      <FooterBar className=\"AppRow AppRow--bottom\" />\n    </div>\n\n    <div className=\"AppColumn AppColumn--right\">\n      <SidePanels />\n    </div>\n\n    <Dialogs />\n\n    <AddToPlaylistMenu />\n    <DragLayer />\n  </div>\n);\n\nApp.propTypes = {\n  activeOverlay: PropTypes.string,\n  isConnected: PropTypes.bool.isRequired,\n  settings: PropTypes.object.isRequired,\n  hasAboutPage: PropTypes.bool,\n\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  DragDropContext(HTML5Backend),\n  // DragDropContext needs to be able to set a ref on the component, so we can't\n  // use a stateless function directly.\n  toClass,\n)(App);\n"]}