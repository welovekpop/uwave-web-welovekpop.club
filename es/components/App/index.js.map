{"version":3,"sources":["components/App/index.js"],"names":["React","PropTypes","DragDropContext","compose","toClass","HTML5Backend","FooterBar","HeaderBar","Video","ErrorArea","Overlays","PlaylistManager","RoomHistory","SettingsManager","AdminProxy","About","ConnectionIndicator","SidePanels","Dialogs","AddToPlaylistMenu","DragLayer","App","activeOverlay","isConnected","settings","onCloseOverlay","videoEnabled","videoSize","muted","volume","propTypes","string","bool","isRequired","object","func"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;;;AAUM;AAAK,aAAU;AAAf,WACE,KAAC,SAAD;AACE,aAAU,YADZ;AAEE,SAAM;AAFR,EADF,C;;;;AAaE,KAAC,SAAD,K;;;;AAUF,KAAC,SAAD;AAAW,aAAU;AAArB,E;;;;AAGF;AAAK,aAAU;AAAf,WACE,KAAC,UAAD,KADF,C;;;;AAIA,KAAC,OAAD,K;;;;AAEA,KAAC,iBAAD,K;;;;AACA,KAAC,SAAD,K;;AAzCJ,IAAMC,MAAM,SAANA,GAAM;AAAA,MACVC,aADU,QACVA,aADU;AAAA,MAEVC,WAFU,QAEVA,WAFU;AAAA,MAGVC,QAHU,QAGVA,QAHU;AAAA,MAIVC,cAJU,QAIVA,cAJU;AAAA,SAMV;AAAK,eAAU;AAAf,aACE;AAAK,eAAU;AAAf,oBAOE;AAAK,eAAU;AAAf,aACE,KAAC,KAAD;AACE,aAASD,SAASE,YADpB;AAEE,UAAMF,SAASG,SAFjB;AAGE,aAASH,SAASI,KAHpB;AAIE,YAAQJ,SAASK;AAJnB,IADF,SAQE,KAAC,mBAAD;AAAqB,iBAAaN;AAAlC,IARF,CAPF,EAiBE,KAAC,QAAD;AAAU,oBAAe,SAAzB;AAAmC,YAAQD;AAA3C,aACE,KAAC,KAAD;AAAmB,oBAAgBG;AAAnC,KAAW,OAAX,CADF,EAEE,KAAC,UAAD;AAAwB,oBAAgBA;AAAxC,KAAgB,OAAhB,CAFF,EAGE,KAAC,eAAD;AAAuC,oBAAgBA;AAAvD,KAAqB,iBAArB,CAHF,EAIE,KAAC,WAAD;AAA+B,oBAAgBA;AAA/C,KAAiB,aAAjB,CAJF,EAKE,KAAC,eAAD;AAAgC,oBAAgBA;AAAhD,KAAqB,UAArB,CALF,CAjBF,QADF,6BANU;AAAA,CAAZ;;AA6CAJ,IAAIS,SAAJ,2CAAgB;AACdR,iBAAerB,UAAU8B,MADX;AAEdR,eAAatB,UAAU+B,IAAV,CAAeC,UAFd;AAGdT,YAAUvB,UAAUiC,MAAV,CAAiBD,UAHb;AAIdR,kBAAgBxB,UAAUkC,IAAV,CAAeF;AAJjB,CAAhB;AAOA,eAAe9B,QACbD,gBAAgBG,YAAhB,CADa,EAEb;AACA;AACAD,OAJa,EAKbiB,GALa,CAAf","sourcesContent":["/* global localStorage */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext } from 'react-dnd';\nimport compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport FooterBar from '../../containers/FooterBar';\nimport HeaderBar from '../../containers/HeaderBar';\nimport Video from '../../containers/Video';\nimport ErrorArea from '../../containers/ErrorArea';\nimport Overlays from './Overlays';\nimport PlaylistManager from '../../containers/PlaylistManager';\nimport RoomHistory from '../../containers/RoomHistory';\nimport SettingsManager from '../../containers/SettingsManager';\nimport AdminProxy from '../AdminProxy';\nimport About from '../../containers/About';\nimport ConnectionIndicator from '../ConnectionIndicator';\n\nimport SidePanels from '../../containers/SidePanels';\nimport Dialogs from '../Dialogs';\nimport AddToPlaylistMenu from '../../containers/AddToPlaylistMenu';\nimport DragLayer from '../../containers/DragLayer';\n\nconst App = ({\n  activeOverlay,\n  isConnected,\n  settings,\n  onCloseOverlay,\n}) => (\n  <div className=\"App\">\n    <div className=\"AppColumn AppColumn--left\">\n      <div className=\"AppRow AppRow--top\">\n        <HeaderBar\n          className=\"App-header\"\n          title=\"Ã¼Wave\"\n        />\n      </div>\n      <div className=\"AppRow AppRow--middle\">\n        <Video\n          enabled={settings.videoEnabled}\n          size={settings.videoSize}\n          isMuted={settings.muted}\n          volume={settings.volume}\n        />\n        <ErrorArea />\n        <ConnectionIndicator isConnected={isConnected} />\n      </div>\n      <Overlays transitionName=\"Overlay\" active={activeOverlay}>\n        <About key=\"about\" onCloseOverlay={onCloseOverlay} />\n        <AdminProxy key=\"admin\" onCloseOverlay={onCloseOverlay} />\n        <PlaylistManager key=\"playlistManager\" onCloseOverlay={onCloseOverlay} />\n        <RoomHistory key=\"roomHistory\" onCloseOverlay={onCloseOverlay} />\n        <SettingsManager key=\"settings\" onCloseOverlay={onCloseOverlay} />\n      </Overlays>\n      <FooterBar className=\"AppRow AppRow--bottom\" />\n    </div>\n\n    <div className=\"AppColumn AppColumn--right\">\n      <SidePanels />\n    </div>\n\n    <Dialogs />\n\n    <AddToPlaylistMenu />\n    <DragLayer />\n  </div>\n);\n\nApp.propTypes = {\n  activeOverlay: PropTypes.string,\n  isConnected: PropTypes.bool.isRequired,\n  settings: PropTypes.object.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  DragDropContext(HTML5Backend),\n  // DragDropContext needs to be able to set a ref on the component, so we can't\n  // use a stateless function directly.\n  toClass,\n)(App);\n"],"file":"index.js"}