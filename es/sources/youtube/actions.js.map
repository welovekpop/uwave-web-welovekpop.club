{"version":3,"sources":["sources/youtube/actions.js"],"names":["get","post","createPlaylistStart","createPlaylistComplete","GET_IMPORTABLE_PLAYLIST_START","GET_IMPORTABLE_PLAYLIST_COMPLETE","GET_CHANNEL_PLAYLISTS_START","GET_CHANNEL_PLAYLISTS_COMPLETE","IMPORT_PLAYLIST_START","IMPORT_PLAYLIST_COMPLETE","getImportablePlaylistStart","url","type","payload","getImportablePlaylistComplete","playlist","items","getImportablePlaylist","qs","onStart","onComplete","onError","error","meta","importPlaylistStart","id","name","dispatch","importPlaylistComplete","importPlaylist","getChannelPlaylistsStart","getChannelPlaylistsComplete","channel","playlists","getChannelPlaylists"],"mappings":"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","sourcesContent":["import { get, post } from '../../actions/RequestActionCreators';\n\nimport {\n  createPlaylistStart,\n  createPlaylistComplete,\n} from '../../actions/PlaylistActionCreators';\n\nimport {\n  GET_IMPORTABLE_PLAYLIST_START,\n  GET_IMPORTABLE_PLAYLIST_COMPLETE,\n  GET_CHANNEL_PLAYLISTS_START,\n  GET_CHANNEL_PLAYLISTS_COMPLETE,\n  IMPORT_PLAYLIST_START,\n  IMPORT_PLAYLIST_COMPLETE,\n} from './constants';\n\nfunction getImportablePlaylistStart(url) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_START,\n    payload: { url },\n  };\n}\n\nfunction getImportablePlaylistComplete(url, playlist, items) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n    payload: { url, playlist, items },\n  };\n}\n\nexport function getImportablePlaylist(url) {\n  return get('/import/youtube/playlist', {\n    qs: { url },\n    onStart: () => getImportablePlaylistStart(url),\n    onComplete: ({ playlist, items }) =>\n      getImportablePlaylistComplete(url, playlist, items),\n    onError: error => ({\n      type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url },\n    }),\n  });\n}\n\nfunction importPlaylistStart(id, name) {\n  return (dispatch) => {\n    dispatch(createPlaylistStart({ name }, `yt:${id}`));\n    dispatch({\n      type: IMPORT_PLAYLIST_START,\n      payload: { id, name },\n    });\n  };\n}\n\nfunction importPlaylistComplete(id, playlist) {\n  return (dispatch) => {\n    dispatch({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      payload: { playlist },\n      meta: { id },\n    });\n    dispatch(createPlaylistComplete(playlist, `yt:${id}`));\n  };\n}\n\nexport function importPlaylist(id, name) {\n  return post('/import/youtube/importplaylist', { id, name }, {\n    onStart: () => importPlaylistStart(id, name),\n    onComplete: playlist => importPlaylistComplete(id, playlist),\n    onError: error => ({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { id },\n    }),\n  });\n}\n\nfunction getChannelPlaylistsStart(url) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_START,\n    payload: { url },\n  };\n}\n\nfunction getChannelPlaylistsComplete(channel, playlists) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n    payload: {\n      channel,\n      playlists,\n    },\n  };\n}\n\nexport function getChannelPlaylists(url) {\n  return get('/import/youtube/channel', {\n    qs: { url },\n    onStart: () => getChannelPlaylistsStart(url),\n    onComplete: ({ channel, playlists }) =>\n      getChannelPlaylistsComplete(channel, playlists),\n    onError: error => ({\n      type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url },\n    }),\n  });\n}\n"],"file":"actions.js"}