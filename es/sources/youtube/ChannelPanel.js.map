{"version":3,"sources":["sources/youtube/ChannelPanel.js"],"names":["React","PropTypes","List","ImportPanelHeader","PlaylistRow","ChannelPanel","renderRow","index","key","playlist","props","importablePlaylists","onImportPlaylist","sourceID","name","render","importingChannelTitle","onClosePanel","length","Component","propTypes","string","isRequired","arrayOf","object","func"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAOC,iBAAP,MAA8B,2DAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEqBC,Y;;;;;;;;;;;;8GASnBC,S,GAAY,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC1B,UAAMC,WAAW,MAAKC,KAAL,CAAWC,mBAAX,CAA+BJ,KAA/B,CAAjB;AACA,aACE,KAAC,WAAD;AAEE,mBAAWA,QAAQ,CAAR,KAAc,CAAd,GAAkB,yBAAlB,GAA8C,EAF3D;AAGE,kBAAUE,QAHZ;AAIE,kBAAU;AAAA,iBAAM,MAAKC,KAAL,CAAWE,gBAAX,CAA4BH,SAASI,QAArC,EAA+CJ,SAASK,IAAxD,CAAN;AAAA;AAJZ,SACON,GADP,CADF;AAQD,K;;;;;SAEDO,M,qBAAS;AAAA,iBAKH,KAAKL,KALF;AAAA,QAELM,qBAFK,UAELA,qBAFK;AAAA,QAGLL,mBAHK,UAGLA,mBAHK;AAAA,QAILM,YAJK,UAILA,YAJK;AAOP,WACE;AAAK,iBAAU;AAAf,eACE,KAAC,iBAAD;AAAmB,oBAAcA;AAAjC,eACMD,qBADN,kBADF,EAIE;AAAK,iBAAU;AAAf,eACE,KAAC,IAAD;AACE,YAAK,SADP;AAEE,cAAQL,oBAAoBO,MAF9B;AAGE,oBAAc,KAAKZ;AAHrB,MADF,CAJF,CADF;AAcD,G;;;EA1CuCN,MAAMmB,S;;SAA3Bd,Y;AAAAA,Y,CACZe,S,2CAAY;AACjBJ,yBAAuBf,UAAUoB,MAAV,CAAiBC,UADvB;AAEjBX,uBAAqBV,UAAUsB,OAAV,CAAkBtB,UAAUuB,MAA5B,EAAoCF,UAFxC;AAIjBV,oBAAkBX,UAAUwB,IAAV,CAAeH,UAJhB;AAKjBL,gBAAchB,UAAUwB,IAAV,CAAeH;AALZ,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from 'react-list';\n\nimport ImportPanelHeader from '../../components/PlaylistManager/Import/ImportPanelHeader';\n\nimport PlaylistRow from './PlaylistRow';\n\nexport default class ChannelPanel extends React.Component {\n  static propTypes = {\n    importingChannelTitle: PropTypes.string.isRequired,\n    importablePlaylists: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    onImportPlaylist: PropTypes.func.isRequired,\n    onClosePanel: PropTypes.func.isRequired,\n  };\n\n  renderRow = (index, key) => {\n    const playlist = this.props.importablePlaylists[index];\n    return (\n      <PlaylistRow\n        key={key}\n        className={index % 2 === 0 ? 'MediaListRow--alternate' : ''}\n        playlist={playlist}\n        onImport={() => this.props.onImportPlaylist(playlist.sourceID, playlist.name)}\n      />\n    );\n  };\n\n  render() {\n    const {\n      importingChannelTitle,\n      importablePlaylists,\n      onClosePanel,\n    } = this.props;\n\n    return (\n      <div className=\"ImportPanel ChannelPanel\">\n        <ImportPanelHeader onClosePanel={onClosePanel}>\n          {`${importingChannelTitle}'s Playlists`}\n        </ImportPanelHeader>\n        <div className=\"MediaList ImportPanel-body\">\n          <List\n            type=\"uniform\"\n            length={importablePlaylists.length}\n            itemRenderer={this.renderRow}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"file":"ChannelPanel.js"}