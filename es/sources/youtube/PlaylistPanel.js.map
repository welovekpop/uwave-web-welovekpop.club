{"version":3,"sources":["sources/youtube/PlaylistPanel.js"],"names":["React","PropTypes","IconButton","ImportIcon","MediaList","AddToPlaylistAction","ImportPanelHeader","selectionOrOne","media","selection","isSelected","get","YouTubeImportPlaylistPanel","handleImportFull","props","importingPlaylist","onImportPlaylist","sourceID","name","render","importingPlaylistItems","onOpenAddMediaMenu","onClosePanel","length","position","Component","propTypes","shape","string","isRequired","arrayOf","object","func"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,mBAAP,MAAgC,kDAAhC;AACA,OAAOC,iBAAP,MAA8B,2DAA9B;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,SAAR,EAAsB;AAC3C,MAAIA,UAAUC,UAAV,CAAqBF,KAArB,CAAJ,EAAiC;AAC/B,WAAOC,UAAUE,GAAV,EAAP;AACD;AACD,SAAO,CAACH,KAAD,CAAP;AACD,CALD;;gBAgDe,U;SAAiB,M;cAAkB;;;IAzC7BI,0B;;;;;;;;;;;;wJAanBC,gB,GAAmB,YAAM;AAAA,wBAInB,MAAKC,KAJc;AAAA,UAErBC,iBAFqB,eAErBA,iBAFqB;AAAA,UAGrBC,gBAHqB,eAGrBA,gBAHqB;;AAKvBA,uBAAiBD,kBAAkBE,QAAnC,EAA6CF,kBAAkBG,IAA/D;AACD,K;;;uCAEDC,M,qBAAS;AAAA,iBAMH,KAAKL,KANF;AAAA,QAELC,iBAFK,UAELA,iBAFK;AAAA,QAGLK,sBAHK,UAGLA,sBAHK;AAAA,QAILC,kBAJK,UAILA,kBAJK;AAAA,QAKLC,YALK,UAKLA,YALK;;;AAQP;AAAA,iBACiB;AADjB,oBAEK,iBAFL;AAAA,oBAEqCA;AAFrC;AAAA,iBAGqB;AAHrB;AAAA,iBAIuB;AAJvB,eAKWP,kBAAkBG,IAL7B,QAOS,UAPT;AAAA,eAQmB,KAAKL,gBARxB;AAAA,gCASkCO,uBAAuBG,MATzD;AAAA,uBAU0B;AAV1B,6BAgBK,SAhBL;AAAA,iBAiBgB,kBAjBhB;AAAA,aAkBaH,sBAlBb;AAAA,mBAmBmB,qBAACZ,KAAD,EAAQC,SAAR;AAAA,eAAsB,MAChC,mBADgC;AAAA,iBAGxB;AAAA,mBAAYY,mBAAmBd,eAAeC,KAAf,EAAsBC,SAAtB,CAAnB,EAAqDe,QAArD,CAAZ;AAAA;AAHwB,WAE3B,KAF2B,EAAtB;AAAA;AAnBnB;AA4BD,G;;;EAzDqDxB,MAAMyB,S;;eAAzCb,0B;AAAAA,0B,CACZc,S,2CAAY;AACjBX,qBAAmBd,UAAU0B,KAAV,CAAgB;AACjCV,cAAUhB,UAAU2B,MADa;AAEjCV,UAAMjB,UAAU2B;AAFiB,GAAhB,EAGhBC,UAJc;AAKjBT,0BAAwBnB,UAAU6B,OAAV,CAAkB7B,UAAU8B,MAA5B,EAAoCF,UAL3C;;AAOjBb,oBAAkBf,UAAU+B,IAAV,CAAeH,UAPhB;AAQjBR,sBAAoBpB,UAAU+B,IAAV,CAAeH,UARlB;AASjBP,gBAAcrB,UAAU+B,IAAV,CAAeH;AATZ,C","file":"PlaylistPanel.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from 'material-ui/IconButton';\nimport ImportIcon from 'material-ui/svg-icons/av/playlist-add';\nimport MediaList from '../../components/MediaList';\nimport AddToPlaylistAction from '../../components/MediaList/Actions/AddToPlaylist';\nimport ImportPanelHeader from '../../components/PlaylistManager/Import/ImportPanelHeader';\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nexport default class YouTubeImportPlaylistPanel extends React.Component {\n  static propTypes = {\n    importingPlaylist: PropTypes.shape({\n      sourceID: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    importingPlaylistItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    onImportPlaylist: PropTypes.func.isRequired,\n    onOpenAddMediaMenu: PropTypes.func.isRequired,\n    onClosePanel: PropTypes.func.isRequired,\n  };\n\n  handleImportFull = () => {\n    const {\n      importingPlaylist,\n      onImportPlaylist,\n    } = this.props;\n    onImportPlaylist(importingPlaylist.sourceID, importingPlaylist.name);\n  };\n\n  render() {\n    const {\n      importingPlaylist,\n      importingPlaylistItems,\n      onOpenAddMediaMenu,\n      onClosePanel,\n    } = this.props;\n\n    return (\n      <div className=\"ImportPanel src-youtube-PlaylistPanel\">\n        <ImportPanelHeader onClosePanel={onClosePanel}>\n          <div className=\"src-youtube-PlaylistPanel-header\">\n            <div className=\"src-youtube-PlaylistPanel-name\">\n              {importingPlaylist.name}\n            </div>\n            <IconButton\n              onClick={this.handleImportFull}\n              tooltip={`Import All (${importingPlaylistItems.length})`}\n              tooltipPosition=\"top-center\"\n            >\n              <ImportIcon color=\"#555\" hoverColor=\"#fff\" />\n            </IconButton>\n          </div>\n        </ImportPanelHeader>\n        <MediaList\n          className=\"ImportPanel-body\"\n          media={importingPlaylistItems}\n          makeActions={(media, selection) => [\n            <AddToPlaylistAction\n              key=\"add\"\n              onAdd={position => onOpenAddMediaMenu(selectionOrOne(media, selection), position)}\n            />,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n"]}