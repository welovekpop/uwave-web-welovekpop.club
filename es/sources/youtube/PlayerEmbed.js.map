{"version":3,"sources":["sources/youtube/PlayerEmbed.js"],"names":["React","PropTypes","YouTube","YouTubePlayerEmbed","handleYTPlay","props","onPlay","handleYTPause","event","controllable","active","target","playVideo","refPlayer","player","render","media","seek","volume","sourceID","start","end","duration","Component","defaultProps","propTypes","bool","isRequired","object","number","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IAEqBC,kB;;;;;;;;;;;;8GAcnBC,Y,GAAe,YAAM;AACnB,UAAI,MAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,cAAKD,KAAL,CAAWC,MAAX;AACD;AACF,K,QAEDC,a,GAAgB,UAACC,KAAD,EAAW;AACzB,UAAI,CAAC,MAAKH,KAAL,CAAWI,YAAZ,IAA4B,MAAKJ,KAAL,CAAWK,MAA3C,EAAmD;AACjDF,cAAMG,MAAN,CAAaC,SAAb;AACD;AACF,K,QAEDC,S,GAAY,UAACC,MAAD,EAAY;AACtB,YAAKA,MAAL,GAAcA,MAAd;AACD,K;;;;;SAEDC,M,qBAAS;AAAA,sBAGH,KAAKV,KAHF;AAAA,QAELK,MAFK,eAELA,MAFK;AAAA,QAEGM,KAFH,eAEGA,KAFH;AAAA,QAEUC,IAFV,eAEUA,IAFV;AAAA,QAEgBC,MAFhB,eAEgBA,MAFhB;AAAA,QAEwBT,YAFxB,eAEwBA,YAFxB;AAKP,WACE,oBAAC,OAAD;AACE,WAAK,KAAKI,SADZ;AAEE,aAAOH,SAASM,MAAMG,QAAf,GAA0B,IAFnC;AAGE,aAAM,MAHR;AAIE,cAAO,MAJT;AAKE,oBALF;AAME,0BANF;AAOE,cAAQD,SAAS,GAPnB;AAQE,oBAAc,CARhB;AASE,gBAAUT,YATZ;AAUE,yBAAmB,KAVrB;AAWE,gBAAU,KAXZ;AAYE,mBAAa,KAZf;AAaE,oBAAc,CAACQ,QAAQ,CAAT,KAAeD,MAAMI,KAAN,IAAe,CAA9B,CAbhB;AAcE,kBAAYJ,MAAMK,GAAN,IAAaL,MAAMM,QAdjC;AAeE,eAAS,KAAKf,aAfhB;AAgBE,iBAAW,KAAKH;AAhBlB,MADF;AAoBD,G;;;EAvD6CJ,MAAMuB,S;;AAAjCpB,kB,CAUZqB,Y,GAAe;AACpBf,gBAAc;AADM,C;SAVHN,kB;AAAAA,kB,CACZsB,S,2CAAY;AACjBf,UAAQT,UAAUyB,IAAV,CAAeC,UADN;AAEjBX,SAAOf,UAAU2B,MAFA;AAGjBX,QAAMhB,UAAU4B,MAHC;AAIjBX,UAAQjB,UAAU4B,MAJD;AAKjBpB,gBAAcR,UAAUyB,IALP;AAMjBpB,UAAQL,UAAU6B;AAND,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from '@u-wave/react-youtube';\n\nexport default class YouTubePlayerEmbed extends React.Component {\n  static propTypes = {\n    active: PropTypes.bool.isRequired,\n    media: PropTypes.object,\n    seek: PropTypes.number,\n    volume: PropTypes.number,\n    controllable: PropTypes.bool,\n    onPlay: PropTypes.func,\n  };\n\n  static defaultProps = {\n    controllable: false,\n  };\n\n  handleYTPlay = () => {\n    if (this.props.onPlay) {\n      this.props.onPlay();\n    }\n  };\n\n  handleYTPause = (event) => {\n    if (!this.props.controllable && this.props.active) {\n      event.target.playVideo();\n    }\n  };\n\n  refPlayer = (player) => {\n    this.player = player;\n  };\n\n  render() {\n    const {\n      active, media, seek, volume, controllable,\n    } = this.props;\n\n    return (\n      <YouTube\n        ref={this.refPlayer}\n        video={active ? media.sourceID : null}\n        width=\"100%\"\n        height=\"100%\"\n        autoplay\n        modestBranding\n        volume={volume / 100}\n        playbackRate={1}\n        controls={controllable}\n        showRelatedVideos={false}\n        showInfo={false}\n        annotations={false}\n        startSeconds={(seek || 0) + (media.start || 0)}\n        endSeconds={media.end || media.duration}\n        onPause={this.handleYTPause}\n        onPlaying={this.handleYTPlay}\n      />\n    );\n  }\n}\n"],"file":"PlayerEmbed.js"}