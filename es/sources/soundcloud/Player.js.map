{"version":3,"sources":["sources/soundcloud/Player.js"],"names":["cx","React","PropTypes","createDebug","translate","Paper","Button","Typography","ErrorIcon","SongInfo","soundcloudLogo","debug","CLIENT_ID","getErrorMessage","err","name","code","test","message","enhance","SoundCloudPlayer","state","error","needsTap","handleError","console","setState","handlePlay","play","componentDidMount","audio","Audio","addEventListener","autoplay","componentDidUpdate","prevProps","volume","props","media","sourceID","enabled","active","stop","componentWillUnmount","doSeek","currentTime","seek","start","removeEventListener","streamUrl","sourceData","src","res","then","catch","pause","render","t","className","defaultValue","thumbnail","username","fullTitle","artistUrl","permalinkUrl","Component","propTypes","func","isRequired","string","bool","object","number"],"mappings":"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","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport createDebug from 'debug';\nimport { translate } from 'react-i18next';\nimport Paper from 'material-ui/Paper';\nimport Button from 'material-ui/Button';\nimport Typography from 'material-ui/Typography';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport SongInfo from './SongInfo';\nimport soundcloudLogo from '../../../assets/img/soundcloud-inline.png';\n\nconst debug = createDebug('uwave:component:video:soundcloud');\n\nconst CLIENT_ID = '9d883cdd4c3c54c6dddda2a5b3a11200';\n\nfunction getErrorMessage(err) {\n  if (err.name === 'MediaError') {\n    if (err.code === 2) {\n      return 'soundcloud.error.network';\n    }\n    if (err.code === 3) {\n      return 'soundcloud.error.decode';\n    }\n    if (err.code === 4 && /404|not found/i.test(err.message)) {\n      return 'soundcloud.error.notFound';\n    }\n  }\n  return err.message;\n}\n\nconst enhance = translate();\n\nclass SoundCloudPlayer extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    enabled: PropTypes.bool,\n    media: PropTypes.object,\n    seek: PropTypes.number,\n    volume: PropTypes.number,\n  };\n\n  state = {\n    error: null,\n    needsTap: false,\n  };\n\n  componentDidMount() {\n    this.audio = new Audio();\n    this.audio.addEventListener('error', () => {\n      this.handleError(this.audio.error);\n    });\n    this.audio.autoplay = true;\n    this.play();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.volume !== this.props.volume) {\n      this.audio.volume = this.props.volume / 100;\n    }\n    if (prevProps.media.sourceID !== this.props.media.sourceID ||\n        prevProps.enabled !== this.props.enabled ||\n        prevProps.active !== this.props.active) {\n      if (this.props.enabled && this.props.active) {\n        this.play();\n      } else {\n        this.stop();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  play() {\n    this.setState({ needsTap: false, error: null });\n    if (this.props.enabled && this.props.active) {\n      // In Firefox we have to wait for the \"canplaythrough\" event before\n      // seeking.\n      // http://stackoverflow.com/a/34970444\n      const doSeek = () => {\n        this.audio.currentTime = this.props.seek + (this.props.media.start || 0);\n        this.audio.volume = this.props.volume / 100;\n        this.audio.removeEventListener('canplaythrough', doSeek, false);\n      };\n\n      const { streamUrl } = this.props.media.sourceData;\n      this.audio.src = `${streamUrl}?client_id=${CLIENT_ID}`;\n      const res = this.audio.play();\n      if (res && res.then) res.catch(this.handleError);\n      debug('currentTime', this.props.seek);\n      this.audio.addEventListener('canplaythrough', doSeek, false);\n    } else {\n      this.stop();\n    }\n  }\n\n  stop() {\n    this.setState({ error: null });\n    this.audio.pause();\n  }\n\n  handleError = (error) => {\n    console.error({ error });\n    this.setState({\n      error,\n      needsTap: error.name === 'NotAllowedError',\n    });\n  };\n\n  handlePlay = () => {\n    this.play();\n  };\n\n  render() {\n    if (!this.props.active) {\n      return null;\n    }\n\n    const { t, media } = this.props;\n    const { error, needsTap } = this.state;\n    const { sourceData } = media;\n    if (!sourceData) {\n      return <div className={cx('src-soundcloud-Player', this.props.className)} />;\n    }\n\n    if (needsTap) {\n      return (\n        <div className={cx('src-soundcloud-Player', this.props.className)}>\n          <Paper className=\"src-soundcloud-Player-message\">\n            <Typography component=\"p\" paragraph>\n              {t('booth.autoplayBlocked')}\n            </Typography>\n            <Button variant=\"raised\" color=\"primary\" onClick={this.handlePlay}>\n              {t('booth.play')}\n            </Button>\n          </Paper>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className={cx('src-soundcloud-Player', this.props.className)}>\n          <Paper className=\"src-soundcloud-Player-error\">\n            <ErrorIcon className=\"src-soundcloud-Player-errorIcon\" />\n            <Typography component=\"p\">\n              {t('soundcloud.error.template', {\n                error: t(getErrorMessage(error), { defaultValue: error.message }),\n              })}\n            </Typography>\n          </Paper>\n        </div>\n      );\n    }\n\n    return (\n      <div className={cx('src-soundcloud-Player', this.props.className)}>\n        <div className=\"src-soundcloud-Player-meta\">\n          <div className=\"src-soundcloud-Player-info\">\n            <img\n              className=\"src-soundcloud-Player-art\"\n              src={media.thumbnail}\n              alt=\"\"\n            />\n            <div className=\"src-soundcloud-Player-links\">\n              <SongInfo\n                artist={sourceData.username}\n                title={sourceData.fullTitle}\n                artistUrl={sourceData.artistUrl}\n                trackUrl={sourceData.permalinkUrl}\n              />\n            </div>\n          </div>\n          <a\n            href={sourceData.permalinkUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"src-soundcloud-Player-permalink\"\n          >\n            View on{' '}\n            <img\n              src={soundcloudLogo}\n              alt=\"SoundCloud\"\n            />\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default enhance(SoundCloudPlayer);\n"],"file":"Player.js"}