{"version":3,"sources":["password-reset/containers/PasswordResetApp.js"],"names":["React","PropTypes","connect","createStructuredSelector","MuiThemeProvider","I18nextProvider","resetPassword","ErrorArea","PasswordResetPage","PasswordResetSuccessPage","muiThemeSelector","mapStateToProps","muiTheme","success","state","passwordReset","mapDispatchToProps","onSubmit","enhance","PasswordResetApp","locale","props","propTypes","object","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,wBAAP,MAAqC,wCAArC;AACA,SAASC,gBAAT,QAAiC,kCAAjC;;AAEA,IAAMC,kBAAkBR,yBAAyB;AAC/CS,YAAUF,gBADqC;AAE/CG,WAAS;AAAA,WAASC,MAAMC,aAAN,CAAoBF,OAA7B;AAAA;AAFsC,CAAzB,CAAxB;;AAKA,IAAMG,qBAAqB;AACzBC,YAAUX;AADe,CAA3B;;AAIA,IAAMY,UAAUhB,QAAQS,eAAR,EAAyBK,kBAAzB,CAAhB;;iBAOW,wB;;iBAIF,S;;AATT,IAAMG,mBAAmB,SAAnBA,gBAAmB;AAAA,MAAGP,QAAH,QAAGA,QAAH;AAAA,MAAaQ,MAAb,QAAaA,MAAb;AAAA,MAAqBP,OAArB,QAAqBA,OAArB;AAAA,MAAiCQ,KAAjC;;AAAA,cACtB,gBADsB;AAAA,cACKT;AADL,kBAEpB,eAFoB;AAAA,UAEEQ;AAFF,qCAIhBP,kBAGC,oBAAC,iBAAD,EAAuBQ,KAAvB,CAPe;AAAA,CAAzB;;AAeAF,iBAAiBG,SAAjB,2CAA6B;AAC3BV,YAAUX,UAAUsB,MAAV,CAAiBC,UADA;AAE3BJ,UAAQnB,UAAUsB,MAAV,CAAiBC,UAFE;AAG3BX,WAASZ,UAAUwB;AAHQ,CAA7B;;AAMA,eAAeP,QAAQC,gBAAR,CAAf","file":"PasswordResetApp.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { I18nextProvider } from 'react-i18next';\nimport { resetPassword } from '../actions';\nimport ErrorArea from '../../containers/ErrorArea';\nimport PasswordResetPage from '../components/PasswordResetPage';\nimport PasswordResetSuccessPage from '../components/PasswordResetSuccessPage';\nimport { muiThemeSelector } from '../../selectors/settingSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  muiTheme: muiThemeSelector,\n  success: state => state.passwordReset.success\n});\n\nconst mapDispatchToProps = {\n  onSubmit: resetPassword\n};\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nconst PasswordResetApp = ({ muiTheme, locale, success, ...props }) => (\n  <MuiThemeProvider muiTheme={muiTheme}>\n    <I18nextProvider i18n={locale}>\n      <div>\n        {success ? (\n          <PasswordResetSuccessPage />\n        ) : (\n          <PasswordResetPage {...props} />\n        )}\n        <ErrorArea />\n      </div>\n    </I18nextProvider>\n  </MuiThemeProvider>\n);\n\nPasswordResetApp.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  locale: PropTypes.object.isRequired,\n  success: PropTypes.bool\n};\n\nexport default enhance(PasswordResetApp);\n"]}