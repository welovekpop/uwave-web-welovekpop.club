{"version":3,"sources":["password-reset/app.js"],"names":["React","ReactDOM","createStore","applyMiddleware","combineReducers","Provider","parse","parseQS","thunk","AppContainer","HotContainer","createLocale","webApiRequest","reducers","setResetKey","App","config","document","querySelector","textContent","key","store","qs","location","search","slice","dispatch","then","locale","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAASC,OAAlB,QAAiC,aAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAgBC,YAAzB,QAA6C,kBAA7C;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,GAAP,MAAgB,+BAAhB;;AAEA,OAAO,WAAP;;AAEA,IAAMC,SAASC,SAASC,aAAT,CAAuB,gBAAvB,EAAyCC,WAAxD;AACA,IAAMC,MAAMH,SAASC,aAAT,CAAuB,aAAvB,EAAsCC,WAAlD;;AAEA,IAAME,QAAQnB,YACZE,gBAAgBS,QAAhB,CADY,EAEZ,EAAEG,cAAF,EAFY,EAGZb,gBACEK,KADF,EAEEI,eAFF,CAHY,CAAd;;AASA,IAAMU,KAAKf,QAAQgB,SAASC,MAAT,CAAgBC,KAAhB,CAAsB,CAAtB,CAAR,CAAX;AACAJ,MAAMK,QAAN,CAAeZ,YAAYM,OAAOE,GAAGF,GAAtB,CAAf;;AAEAT,aAAa,IAAb,EAAmBgB,IAAnB,CAAwB,UAACC,MAAD,EAAY;AAClC3B,WAAS4B,MAAT,MACG,YADH,mBAEK,QAFL;AAAA,WAEqBR;AAFrB,kBAGO,GAHP;AAAA,YAGmBO;AAHnB,QAMGX,SAASC,aAAT,CAAuB,MAAvB,CANH;AAOD,CARD","file":"app.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { parse as parseQS } from 'querystring';\nimport thunk from 'redux-thunk';\nimport { AppContainer as HotContainer } from 'react-hot-loader';\nimport createLocale from '../locale';\nimport webApiRequest from '../store/request';\nimport * as reducers from './reducers';\nimport { setResetKey } from './actions';\nimport App from './containers/PasswordResetApp';\n\nimport './app.css';\n\nconst config = document.querySelector('#u-wave-config').textContent;\nconst key = document.querySelector('#reset-data').textContent;\n\nconst store = createStore(\n  combineReducers(reducers),\n  { config },\n  applyMiddleware(\n    thunk,\n    webApiRequest()\n  ),\n);\n\nconst qs = parseQS(location.search.slice(1));\nstore.dispatch(setResetKey(key || qs.key));\n\ncreateLocale('en').then((locale) => {\n  ReactDOM.render((\n    <HotContainer>\n      <Provider store={store}>\n        <App locale={locale} />\n      </Provider>\n    </HotContainer>\n  ), document.querySelector('#app'));\n});\n"]}