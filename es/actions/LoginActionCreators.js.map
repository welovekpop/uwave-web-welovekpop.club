{"version":3,"sources":["actions/LoginActionCreators.js"],"names":["createDebug","INIT_STATE","SOCKET_CONNECT","SOCKET_RECONNECT","REGISTER_START","REGISTER_COMPLETE","LOGIN_START","LOGIN_COMPLETE","SET_TOKEN","LOGOUT_START","LOGOUT_COMPLETE","RESET_PASSWORD_COMPLETE","LOAD_ALL_PLAYLISTS_START","Session","get","post","advance","loadHistory","receiveMotd","setPlaylists","selectPlaylist","activatePlaylistComplete","syncTimestamps","closeLoginDialog","setUsers","setVoteStats","setWaitList","currentUserSelector","tokenSelector","startTutorial","debug","socketConnect","type","socketReconnect","loginComplete","jwt","user","dispatch","payload","loadedState","state","getState","motd","users","playlists","waitlist","locked","waitlistLocked","booth","historyID","stats","token","activePlaylist","initState","beforeTime","Date","now","onStart","onComplete","time","setJWT","loginStart","login","email","password","set","res","meta","onError","error","register","username","grecaptcha","data","then","matchMedia","matches","logoutStart","logoutComplete","logout","me","unset","resetPassword"],"mappings":"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","file":"LoginActionCreators.js","sourcesContent":["import createDebug from 'debug';\nimport {\n  INIT_STATE,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n\n  REGISTER_START,\n  REGISTER_COMPLETE,\n  LOGIN_START,\n  LOGIN_COMPLETE,\n  SET_TOKEN,\n  LOGOUT_START,\n  LOGOUT_COMPLETE,\n\n  RESET_PASSWORD_COMPLETE\n} from '../constants/actionTypes/auth';\nimport { LOAD_ALL_PLAYLISTS_START } from '../constants/actionTypes/playlists';\nimport * as Session from '../utils/Session';\nimport { get, post } from './RequestActionCreators';\nimport { advance, loadHistory } from './BoothActionCreators';\nimport { receiveMotd } from './ChatActionCreators';\nimport {\n  setPlaylists, selectPlaylist, activatePlaylistComplete\n} from './PlaylistActionCreators';\nimport { syncTimestamps } from './TickerActionCreators';\nimport { closeLoginDialog } from './DialogActionCreators';\nimport { setUsers } from './UserActionCreators';\nimport { setVoteStats } from './VoteActionCreators';\nimport { setWaitList } from './WaitlistActionCreators';\nimport { currentUserSelector, tokenSelector } from '../selectors/userSelectors';\nimport startTutorial from '../_wlk/startTutorial';\n\nconst debug = createDebug('uwave:actions:login');\n\nexport function socketConnect() {\n  return { type: SOCKET_CONNECT };\n}\n\nexport function socketReconnect() {\n  return { type: SOCKET_RECONNECT };\n}\n\nexport function loginComplete({ jwt, user }) {\n  return (dispatch) => {\n    dispatch({\n      type: LOGIN_COMPLETE,\n      payload: { jwt, user }\n    });\n    dispatch(closeLoginDialog());\n  };\n}\n\nexport function loadedState(state) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: INIT_STATE,\n      payload: state\n    });\n    if (state.motd) {\n      dispatch(receiveMotd(state.motd));\n    }\n    dispatch(setUsers(state.users || []));\n    dispatch(setPlaylists(state.playlists || []));\n    dispatch(setWaitList({\n      waitlist: state.waitlist,\n      locked: state.waitlistLocked\n    }));\n    if (state.booth && state.booth.historyID) {\n      // TODO don't set this when logging in _after_ entering the page?\n      dispatch(advance(state.booth));\n      dispatch(setVoteStats(state.booth.stats));\n    }\n    if (state.user) {\n      const token = tokenSelector(getState());\n      dispatch(loginComplete({\n        jwt: token,\n        user: state.user\n      }));\n    }\n    if (state.activePlaylist) {\n      dispatch(activatePlaylistComplete(state.activePlaylist));\n      dispatch(selectPlaylist(state.activePlaylist));\n    }\n  };\n}\n\nexport function initState() {\n  const beforeTime = Date.now();\n\n  return get('/now', {\n    onStart: () => ({ type: LOAD_ALL_PLAYLISTS_START }),\n    onComplete: state => (dispatch) => {\n      dispatch(syncTimestamps(beforeTime, state.time));\n      dispatch(loadedState(state));\n      dispatch(loadHistory());\n    }\n  });\n}\n\nexport function setJWT(jwt) {\n  return {\n    type: SET_TOKEN,\n    payload: { jwt }\n  };\n}\n\nfunction loginStart() {\n  return { type: LOGIN_START };\n}\n\nexport function login({ email, password }) {\n  return post('/auth/login', { email, password }, {\n    onStart: loginStart,\n    onComplete: res => (dispatch) => {\n      Session.set(res.meta.jwt);\n      dispatch(setJWT(res.meta.jwt));\n      dispatch(initState());\n    },\n    onError: error => ({\n      type: LOGIN_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n\nexport function register({ email, username, password, grecaptcha }) {\n  return post('/auth/register', { email, username, password, grecaptcha }, {\n    onStart: () => ({ type: REGISTER_START }),\n    onComplete: res => (dispatch) => {\n      const user = res.data;\n      debug('registered', user);\n      dispatch({\n        type: REGISTER_COMPLETE,\n        payload: { user }\n      });\n      dispatch(login({ email, password }))\n        .then(() => {\n          if (matchMedia('(min-width: 769px)').matches) {\n            return startTutorial();\n          }\n        });\n    },\n    onError: error => ({\n      type: REGISTER_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n\nfunction logoutStart() {\n  return { type: LOGOUT_START };\n}\n\nfunction logoutComplete() {\n  return (dispatch) => {\n    dispatch({ type: LOGOUT_COMPLETE });\n    dispatch(setPlaylists([]));\n  };\n}\n\nexport function logout() {\n  return (dispatch, getState) => {\n    const me = currentUserSelector(getState());\n    dispatch(logoutStart());\n    Session.unset();\n    if (me) {\n      dispatch(logoutComplete());\n      dispatch(socketReconnect());\n    } else {\n      dispatch(logoutComplete());\n    }\n  };\n}\n\nexport function resetPassword(email) {\n  return post('/auth/password/reset', email, {\n    onComplete: () => ({\n      type: RESET_PASSWORD_COMPLETE,\n      payload: 'Successfully sent password reset email'\n    }),\n    onError: error => ({\n      type: RESET_PASSWORD_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n"]}