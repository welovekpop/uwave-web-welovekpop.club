{"version":3,"sources":["actions/VoteActionCreators.js"],"names":["post","historyIDSelector","playlistsSelector","OPEN_ADD_MEDIA_MENU","LOAD_VOTES","FAVORITE","UPVOTE","DOWNVOTE","DO_FAVORITE_START","DO_FAVORITE_COMPLETE","DO_UPVOTE","DO_DOWNVOTE","mergeIncludedModels","flattenPlaylistItem","setVoteStats","voteStats","type","payload","favorited","userID","historyID","receiveVote","vote","doUpvote","doDownvote","openFavoriteMenu","position","dispatch","getState","playlists","meta","favoriteMediaStart","playlistID","favoriteMediaComplete","changes","added","map","newSize","playlistSize","favoriteMedia","playlist","_id","onStart","onComplete","res","onError","error"],"mappings":"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","sourcesContent":["import { post } from './RequestActionCreators';\nimport { historyIDSelector } from '../selectors/boothSelectors';\nimport { playlistsSelector } from '../selectors/playlistSelectors';\n\nimport { OPEN_ADD_MEDIA_MENU } from '../constants/actionTypes/playlists';\nimport {\n  LOAD_VOTES,\n  FAVORITE, UPVOTE, DOWNVOTE,\n  DO_FAVORITE_START, DO_FAVORITE_COMPLETE,\n  DO_UPVOTE, DO_DOWNVOTE,\n} from '../constants/actionTypes/votes';\nimport mergeIncludedModels from '../utils/mergeIncludedModels';\n\nimport { flattenPlaylistItem } from './PlaylistActionCreators';\n\nexport function setVoteStats(voteStats) {\n  return {\n    type: LOAD_VOTES,\n    payload: voteStats,\n  };\n}\n\nexport function favorited({ userID, historyID }) {\n  return {\n    type: FAVORITE,\n    payload: { userID, historyID },\n  };\n}\n\nexport function receiveVote({ userID, vote }) {\n  const type = vote > 0 ? UPVOTE : DOWNVOTE;\n  return {\n    type,\n    payload: { userID },\n  };\n}\n\nexport function doUpvote() {\n  return { type: DO_UPVOTE };\n}\n\nexport function doDownvote() {\n  return { type: DO_DOWNVOTE };\n}\n\nexport function openFavoriteMenu(position) {\n  return (dispatch, getState) => {\n    const playlists = playlistsSelector(getState());\n    const historyID = historyIDSelector(getState());\n    dispatch({\n      type: OPEN_ADD_MEDIA_MENU,\n      payload: { historyID },\n      meta: {\n        playlists,\n        position,\n        type: 'favorite',\n      },\n    });\n  };\n}\n\nexport function favoriteMediaStart(playlistID, historyID) {\n  return {\n    type: DO_FAVORITE_START,\n    payload: { historyID, playlistID },\n  };\n}\n\nexport function favoriteMediaComplete(playlistID, historyID, changes) {\n  return {\n    type: DO_FAVORITE_COMPLETE,\n    payload: {\n      historyID,\n      playlistID,\n      added: changes.added.map(flattenPlaylistItem),\n      newSize: changes.playlistSize,\n    },\n  };\n}\n\nexport function favoriteMedia(playlist, historyID) {\n  const playlistID = playlist._id;\n  return post('/booth/favorite', { historyID, playlistID }, {\n    onStart: () => favoriteMediaStart(playlistID, historyID),\n    onComplete: res =>\n      favoriteMediaComplete(playlistID, historyID, {\n        added: mergeIncludedModels(res),\n        playlistSize: res.meta.playlistSize,\n      }),\n    onError: error => ({\n      type: DO_FAVORITE_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { historyID, playlistID },\n    }),\n  });\n}\n"],"file":"VoteActionCreators.js"}