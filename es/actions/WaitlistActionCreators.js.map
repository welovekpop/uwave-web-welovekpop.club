{"version":3,"sources":["actions/WaitlistActionCreators.js"],"names":["WAITLIST_LOAD","WAITLIST_LOCK","WAITLIST_CLEAR","WAITLIST_UPDATE","WAITLIST_JOIN","WAITLIST_LEAVE","WAITLIST_MOVE","DO_JOIN_START","DO_JOIN_COMPLETE","DO_LEAVE_START","DO_LEAVE_COMPLETE","DO_LOCK_START","DO_LOCK_COMPLETE","DO_CLEAR_START","DO_CLEAR_COMPLETE","del","post","put","setWaitList","data","type","payload","waitlist","locked","setLocked","lock","clearWaitlist","updatedWaitlist","joinWaitlist","user","dispatch","userID","_id","onStart","onComplete","onError","error","joinedWaitlist","leaveWaitlist","leftWaitlist","movedInWaitlist","moderatorID","position","meta","putLock","status","clear","modLockWaitlist","modUnlockWaitlist","modClearWaitlist"],"mappings":"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","file":"WaitlistActionCreators.js","sourcesContent":["import {\n  WAITLIST_LOAD,\n  WAITLIST_LOCK,\n  WAITLIST_CLEAR,\n  WAITLIST_UPDATE,\n  WAITLIST_JOIN,\n  WAITLIST_LEAVE,\n  WAITLIST_MOVE,\n  DO_JOIN_START, DO_JOIN_COMPLETE,\n  DO_LEAVE_START, DO_LEAVE_COMPLETE,\n  DO_LOCK_START, DO_LOCK_COMPLETE,\n  DO_CLEAR_START, DO_CLEAR_COMPLETE\n} from '../constants/actionTypes/waitlist';\nimport { del, post, put } from './RequestActionCreators';\n\nexport function setWaitList(data) {\n  return {\n    type: WAITLIST_LOAD,\n    payload: {\n      waitlist: data.waitlist,\n      locked: data.locked\n    }\n  };\n}\n\nexport function setLocked(lock) {\n  return {\n    type: WAITLIST_LOCK,\n    payload: {\n      locked: lock\n    }\n  };\n}\n\nexport function clearWaitlist() {\n  return { type: WAITLIST_CLEAR };\n}\n\nexport function updatedWaitlist(waitlist) {\n  return {\n    type: WAITLIST_UPDATE,\n    payload: { waitlist }\n  };\n}\n\nexport function joinWaitlist(user) {\n  return (dispatch) => {\n    if (!user) {\n      return null;\n    }\n    // TODO don't post an object at all once the API server supports it\n    return dispatch(post('/waitlist', { userID: user._id }, {\n      onStart: () => ({ type: DO_JOIN_START }),\n      onComplete: ({ data }) => ({\n        type: DO_JOIN_COMPLETE,\n        payload: { waitlist: data }\n      }),\n      onError: error => ({\n        type: DO_JOIN_COMPLETE,\n        error: true,\n        payload: error\n      })\n    }));\n  };\n}\n\nexport function joinedWaitlist({ userID, waitlist }) {\n  return {\n    type: WAITLIST_JOIN,\n    payload: { userID, waitlist }\n  };\n}\n\nexport function leaveWaitlist(user) {\n  return (dispatch) => {\n    if (!user) {\n      return null;\n    }\n    return dispatch(del(`/waitlist/${user._id}`, {}, {\n      onStart: () => ({ type: DO_LEAVE_START }),\n      onComplete: ({ data }) => ({\n        type: DO_LEAVE_COMPLETE,\n        payload: { waitlist: data }\n      }),\n      onError: error => ({\n        type: DO_LEAVE_COMPLETE,\n        error: true,\n        payload: error\n      })\n    }));\n  };\n}\n\nexport function leftWaitlist({ userID, waitlist }) {\n  return {\n    type: WAITLIST_LEAVE,\n    payload: { userID, waitlist }\n  };\n}\n\nexport function movedInWaitlist({\n  userID, moderatorID, position, waitlist\n}) {\n  return (dispatch) => {\n    dispatch({\n      type: WAITLIST_MOVE,\n      payload: { userID, position },\n      meta: { moderatorID }\n    });\n    dispatch(updatedWaitlist(waitlist));\n  };\n}\n\nfunction putLock(status) {\n  return put('/waitlist/lock', { lock: status, clear: false }, {\n    onStart: () => ({\n      type: DO_LOCK_START,\n      payload: { locked: status }\n    }),\n    onComplete: ({ data }) => ({\n      type: DO_LOCK_COMPLETE,\n      payload: { locked: data.locked }\n    }),\n    onError: error => ({\n      type: DO_LOCK_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n\nexport function modLockWaitlist() {\n  return putLock(true);\n}\nexport function modUnlockWaitlist() {\n  return putLock(false);\n}\n\nexport function modClearWaitlist() {\n  return del('/waitlist', {}, {\n    onStart: () => ({ type: DO_CLEAR_START }),\n    onComplete: () => ({ type: DO_CLEAR_COMPLETE }),\n    onError: error => ({\n      type: DO_CLEAR_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n"]}