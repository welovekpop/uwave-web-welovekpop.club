{"version":3,"sources":["actions/UserActionCreators.js"],"names":["LOAD_ONLINE_USERS","USER_JOIN","USER_LEAVE","CHANGE_USERNAME","CHANGE_ROLE","RECEIVE_GUEST_COUNT","DO_CHANGE_USERNAME_START","DO_CHANGE_USERNAME_COMPLETE","currentUserSelector","usersSelector","put","setUsers","users","type","payload","receiveGuestCount","guests","join","user","timestamp","Date","now","leave","id","dispatch","getState","userID","changeUsername","username","doChangeUsername","_id","onStart","onComplete","data","onError","error","meta","changeUserRole","role"],"mappings":"AAAA,SACEA,iBADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,WALF,EAOEC,mBAPF,EASEC,wBATF,EAUEC,2BAVF,QAWO,gCAXP;AAYA,SACEC,mBADF,EAEEC,aAFF,QAGO,4BAHP;AAIA,SAASC,GAAT,QAAoB,yBAApB;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO;AACLC,UAAMb,iBADD;AAELc,aAAS,EAAEF,YAAF;AAFJ,GAAP;AAID;;AAED,OAAO,SAASG,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,SAAO;AACLH,UAAMR,mBADD;AAELS,aAAS,EAAEE,cAAF;AAFJ,GAAP;AAID;;AAED,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;AACzB,SAAO;AACLL,UAAMZ,SADD;AAELa,aAAS;AACPI,gBADO;AAEPC,iBAAWC,KAAKC,GAAL;AAFJ;AAFJ,GAAP;AAOD;;AAED,OAAO,SAASC,KAAT,CAAeC,EAAf,EAAmB;AACxB,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMP,OAAOT,cAAcgB,UAAd,EAA0BF,EAA1B,CAAb;AACA,WAAOC,SAAS;AACdX,YAAMX,UADQ;AAEdY,eAAS;AACPI,kBADO;AAEPQ,gBAAQH,EAFD;AAGPJ,mBAAWC,KAAKC,GAAL;AAHJ;AAFK,KAAT,CAAP;AAQD,GAVD;AAWD;;AAED,OAAO,SAASM,cAAT,CAAwBD,MAAxB,EAAgCE,QAAhC,EAA0C;AAC/C,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMP,OAAOT,cAAcgB,UAAd,EAA0BC,MAA1B,CAAb;AACA,WAAOF,SAAS;AACdX,YAAMV,eADQ;AAEdW,eAAS;AACPI,kBADO;AAEPQ,sBAFO;AAGPE,0BAHO;AAIPT,mBAAWC,KAAKC,GAAL;AAJJ;AAFK,KAAT,CAAP;AASD,GAXD;AAYD;;AAED,OAAO,SAASQ,gBAAT,CAA0BD,QAA1B,EAAoC;AACzC,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMP,OAAOV,oBAAoBiB,UAApB,CAAb;;AAEA,WAAOD,SAASd,gBAAcQ,KAAKY,GAAnB,gBAAmC,EAAEF,kBAAF,EAAnC,EAAiD;AAC/DG,eAAS;AAAA,eAAO;AACdlB,gBAAMP,wBADQ;AAEdQ,mBAAS,EAAEc,kBAAF;AAFK,SAAP;AAAA,OADsD;AAK/DI,kBAAY;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eAAe;AACzBpB,gBAAMN,2BADmB;AAEzBO,mBAAS,EAAEc,UAAUK,KAAKL,QAAjB;AAFgB,SAAf;AAAA,OALmD;AAS/DM,eAAS;AAAA,eAAU;AACjBrB,gBAAMN,2BADW;AAEjB4B,iBAAO,IAFU;AAGjBrB,mBAASqB,KAHQ;AAIjBC,gBAAM,EAAER,kBAAF;AAJW,SAAV;AAAA;AATsD,KAAjD,CAAT,CAAP;AAgBD,GAnBD;AAoBD;;AAED,OAAO,SAASS,cAAT,CAAwBX,MAAxB,EAAgCY,IAAhC,EAAsC;AAC3C,SAAO;AACLzB,UAAMT,WADD;AAELU,aAAS;AACPY,oBADO;AAEPY,gBAFO;AAGPnB,iBAAWC,KAAKC,GAAL;AAHJ;AAFJ,GAAP;AAQD","file":"UserActionCreators.js","sourcesContent":["import {\n  LOAD_ONLINE_USERS,\n  USER_JOIN,\n  USER_LEAVE,\n  CHANGE_USERNAME,\n  CHANGE_ROLE,\n\n  RECEIVE_GUEST_COUNT,\n\n  DO_CHANGE_USERNAME_START,\n  DO_CHANGE_USERNAME_COMPLETE\n} from '../constants/actionTypes/users';\nimport {\n  currentUserSelector,\n  usersSelector\n} from '../selectors/userSelectors';\nimport { put } from './RequestActionCreators';\n\nexport function setUsers(users) {\n  return {\n    type: LOAD_ONLINE_USERS,\n    payload: { users }\n  };\n}\n\nexport function receiveGuestCount(guests) {\n  return {\n    type: RECEIVE_GUEST_COUNT,\n    payload: { guests }\n  };\n}\n\nexport function join(user) {\n  return {\n    type: USER_JOIN,\n    payload: {\n      user,\n      timestamp: Date.now()\n    }\n  };\n}\n\nexport function leave(id) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[id];\n    return dispatch({\n      type: USER_LEAVE,\n      payload: {\n        user,\n        userID: id,\n        timestamp: Date.now()\n      }\n    });\n  };\n}\n\nexport function changeUsername(userID, username) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: CHANGE_USERNAME,\n      payload: {\n        user,\n        userID,\n        username,\n        timestamp: Date.now()\n      }\n    });\n  };\n}\n\nexport function doChangeUsername(username) {\n  return (dispatch, getState) => {\n    const user = currentUserSelector(getState());\n\n    return dispatch(put(`/users/${user._id}/username`, { username }, {\n      onStart: () => ({\n        type: DO_CHANGE_USERNAME_START,\n        payload: { username }\n      }),\n      onComplete: ({ data }) => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        payload: { username: data.username }\n      }),\n      onError: error => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { username }\n      })\n    }));\n  };\n}\n\nexport function changeUserRole(userID, role) {\n  return {\n    type: CHANGE_ROLE,\n    payload: {\n      userID,\n      role,\n      timestamp: Date.now()\n    }\n  };\n}\n"]}