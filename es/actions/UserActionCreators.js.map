{"version":3,"sources":["actions/UserActionCreators.js"],"names":["put","LOAD_ONLINE_USERS","USER_JOIN","USER_LEAVE","CHANGE_USERNAME","USER_ADD_ROLES","USER_REMOVE_ROLES","RECEIVE_GUEST_COUNT","DO_CHANGE_USERNAME_START","DO_CHANGE_USERNAME_COMPLETE","currentUserSelector","usersSelector","setUsers","users","type","payload","receiveGuestCount","guests","join","user","timestamp","Date","now","leave","id","dispatch","getState","userID","changeUsername","username","doChangeUsername","_id","onStart","onComplete","data","onError","error","meta","addUserRoles","roles","removeUserRoles"],"mappings":"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","sourcesContent":["import { put } from './RequestActionCreators';\nimport {\n  LOAD_ONLINE_USERS,\n  USER_JOIN,\n  USER_LEAVE,\n  CHANGE_USERNAME,\n  USER_ADD_ROLES,\n  USER_REMOVE_ROLES,\n\n  RECEIVE_GUEST_COUNT,\n\n  DO_CHANGE_USERNAME_START,\n  DO_CHANGE_USERNAME_COMPLETE,\n} from '../constants/ActionTypes';\nimport {\n  currentUserSelector,\n  usersSelector,\n} from '../selectors/userSelectors';\n\nexport function setUsers(users) {\n  return {\n    type: LOAD_ONLINE_USERS,\n    payload: { users },\n  };\n}\n\nexport function receiveGuestCount(guests) {\n  return {\n    type: RECEIVE_GUEST_COUNT,\n    payload: { guests },\n  };\n}\n\nexport function join(user) {\n  return {\n    type: USER_JOIN,\n    payload: {\n      user,\n      timestamp: Date.now(),\n    },\n  };\n}\n\nexport function leave(id) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[id];\n    return dispatch({\n      type: USER_LEAVE,\n      payload: {\n        user,\n        userID: id,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function changeUsername(userID, username) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: CHANGE_USERNAME,\n      payload: {\n        user,\n        userID,\n        username,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function doChangeUsername(username) {\n  return (dispatch, getState) => {\n    const user = currentUserSelector(getState());\n\n    return dispatch(put(`/users/${user._id}/username`, { username }, {\n      onStart: () => ({\n        type: DO_CHANGE_USERNAME_START,\n        payload: { username },\n      }),\n      onComplete: ({ data }) => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        payload: { username: data.username },\n      }),\n      onError: error => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { username },\n      }),\n    }));\n  };\n}\n\nexport function addUserRoles(userID, roles) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: USER_ADD_ROLES,\n      payload: {\n        user,\n        userID,\n        roles,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function removeUserRoles(userID, roles) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: USER_REMOVE_ROLES,\n      payload: {\n        user,\n        userID,\n        roles,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n"],"file":"UserActionCreators.js"}