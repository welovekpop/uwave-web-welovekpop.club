{"version":3,"sources":["actions/ChatActionCreators.js"],"names":["find","ms","splitargs","parseChatMarkup","flashDocumentTitle","playMentionSound","RECEIVE_MOTD","SET_MOTD_START","SET_MOTD_COMPLETE","SEND_MESSAGE","RECEIVE_MESSAGE","LOG","REMOVE_MESSAGE","REMOVE_USER_MESSAGES","REMOVE_ALL_MESSAGES","MUTE_USER","UNMUTE_USER","put","execute","muteTimeoutsSelector","mutedUserIDsSelector","currentUserMuteSelector","settingsSelector","currentUserSelector","userListSelector","currentTimeSelector","getAvailableGroupMentions","resolveMentions","hasMention","receiveMotd","text","type","payload","logIdx","Date","now","log","_id","prepareMessage","state","user","parseOpts","parsed","message","sendChat","dispatch","getState","sender","mute","timeLeft","expiresAt","long","users","mentions","map","username","inputMessage","slice","command","params","result","isMuted","userID","indexOf","receive","settings","currentUser","isMention","mentionSound","removeMessage","id","removeMessagesByUser","removeAllMessages","expireMute","muteUser","moderatorID","currentTime","expireIn","expirationTimer","setTimeout","unmuteUser","muteTimeouts","clearTimeout","setMotdStart","motd","setMotdComplete","setMotd","onStart","onComplete","data","onError","error"],"mappings":"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","file":"ChatActionCreators.js","sourcesContent":["import find from 'array-find';\nimport ms from 'ms';\nimport splitargs from 'splitargs';\nimport parseChatMarkup from 'u-wave-parse-chat-markup';\nimport flashDocumentTitle from 'flash-document-title';\nimport playMentionSound from '../utils/playMentionSound';\nimport {\n  RECEIVE_MOTD,\n  SET_MOTD_START,\n  SET_MOTD_COMPLETE,\n\n  SEND_MESSAGE,\n  RECEIVE_MESSAGE,\n\n  LOG,\n\n  REMOVE_MESSAGE,\n  REMOVE_USER_MESSAGES,\n  REMOVE_ALL_MESSAGES,\n\n  MUTE_USER,\n  UNMUTE_USER\n} from '../constants/actionTypes/chat';\nimport { put } from './RequestActionCreators';\nimport { execute } from '../utils/ChatCommands';\nimport {\n  muteTimeoutsSelector,\n  mutedUserIDsSelector,\n  currentUserMuteSelector\n} from '../selectors/chatSelectors';\nimport { settingsSelector } from '../selectors/settingSelectors';\nimport {\n  currentUserSelector,\n  userListSelector\n} from '../selectors/userSelectors';\nimport { currentTimeSelector } from '../selectors/timeSelectors';\n\nimport {\n  getAvailableGroupMentions,\n  resolveMentions,\n  hasMention\n} from '../utils/chatMentions';\n\nexport function receiveMotd(text) {\n  return {\n    type: RECEIVE_MOTD,\n    payload: parseChatMarkup(text, {})\n  };\n}\n\nlet logIdx = Date.now();\nexport function log(text) {\n  logIdx += 1;\n  return {\n    type: LOG,\n    payload: {\n      _id: logIdx,\n      text\n    }\n  };\n}\n\nexport function prepareMessage(state, user, text, parseOpts = {}) {\n  const parsed = parseChatMarkup(text, parseOpts);\n  resolveMentions(parsed, state);\n  return {\n    type: SEND_MESSAGE,\n    payload: {\n      user,\n      message: text,\n      parsed\n    }\n  };\n}\n\nexport function sendChat(text) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const sender = currentUserSelector(state);\n    const mute = currentUserMuteSelector(state);\n    if (mute) {\n      const timeLeft = ms(mute.expiresAt - Date.now(), { long: true });\n      dispatch(log(`You have been muted, and cannot chat for another ${timeLeft}.`));\n      return;\n    }\n\n    const users = userListSelector(state);\n    const message = prepareMessage(state, sender, text, {\n      mentions: [\n        ...users.map(user => user.username),\n        ...getAvailableGroupMentions(sender)\n      ]\n    });\n    dispatch(message);\n  };\n}\n\nexport function inputMessage(text) {\n  return (dispatch, getState) => {\n    if (text[0] === '/') {\n      const [ command, ...params ] = splitargs(text.slice(1));\n      if (command) {\n        const result = execute(getState(), command, params);\n        if (result) {\n          dispatch(result);\n        }\n        return;\n      }\n    }\n    dispatch(sendChat(text));\n  };\n}\n\nfunction isMuted(state, userID) {\n  return mutedUserIDsSelector(state).indexOf(userID) !== -1;\n}\n\nexport function receive(message) {\n  return (dispatch, getState) => {\n    const settings = settingsSelector(getState());\n    const currentUser = currentUserSelector(getState());\n    const users = userListSelector(getState());\n    const sender = find(users, user => user._id === message.userID);\n    const mentions = [\n      ...users.map(user => user.username),\n      ...getAvailableGroupMentions(sender)\n    ];\n\n    if (isMuted(getState(), message.userID)) {\n      return;\n    }\n\n    const parsed = parseChatMarkup(message.text, { mentions });\n    resolveMentions(parsed, getState());\n\n    const isMention = currentUser ? hasMention(parsed, currentUser._id) : false;\n\n    dispatch({\n      type: RECEIVE_MESSAGE,\n      payload: {\n        message: {\n          ...message,\n          user: sender\n        },\n        isMention,\n        parsed\n      }\n    });\n\n    if (isMention) {\n      if (settings.mentionSound) {\n        playMentionSound();\n      }\n      flashDocumentTitle(`💬 ${sender.username}`);\n    }\n  };\n}\n\nexport function removeMessage(id) {\n  return {\n    type: REMOVE_MESSAGE,\n    payload: { _id: id }\n  };\n}\n\nexport function removeMessagesByUser(userID) {\n  return {\n    type: REMOVE_USER_MESSAGES,\n    payload: { userID }\n  };\n}\n\nexport function removeAllMessages() {\n  return {\n    type: REMOVE_ALL_MESSAGES\n  };\n}\n\nfunction expireMute(userID) {\n  return {\n    type: UNMUTE_USER,\n    payload: { userID }\n  };\n}\n\nexport function muteUser(userID, { moderatorID, expiresAt }) {\n  return (dispatch, getState) => {\n    const currentTime = currentTimeSelector(getState());\n    const expireIn = expiresAt - currentTime;\n\n    dispatch({\n      type: MUTE_USER,\n      payload: {\n        userID,\n        moderatorID,\n        expiresAt,\n        expirationTimer: expireIn > 0 ?\n          setTimeout(() => dispatch(expireMute(userID)), expireIn) : null\n      }\n    });\n  };\n}\n\nexport function unmuteUser(userID, { moderatorID }) {\n  return (dispatch, getState) => {\n    const muteTimeouts = muteTimeoutsSelector(getState());\n    if (muteTimeouts && muteTimeouts[userID]) {\n      clearTimeout(muteTimeouts[userID]);\n    }\n    dispatch({\n      type: UNMUTE_USER,\n      payload: { userID, moderatorID }\n    });\n  };\n}\n\nexport function setMotdStart(motd) {\n  return {\n    type: SET_MOTD_START,\n    payload: motd\n  };\n}\n\nexport function setMotdComplete(motd) {\n  return {\n    type: SET_MOTD_COMPLETE,\n    payload: motd\n  };\n}\n\nexport function setMotd(text) {\n  return put('/motd', { motd: text }, {\n    onStart: () => setMotdStart(text),\n    onComplete: ({ data }) => (dispatch) => {\n      dispatch(setMotdComplete(data.motd));\n      dispatch(log(`Message of the Day is now: ${data.motd}`));\n    },\n    onError: error => ({\n      type: SET_MOTD_COMPLETE,\n      error: true,\n      payload: error\n    })\n  });\n}\n"]}