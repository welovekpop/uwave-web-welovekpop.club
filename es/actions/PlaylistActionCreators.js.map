{"version":3,"sources":["actions/PlaylistActionCreators.js"],"names":["LOAD_ALL_PLAYLISTS_START","LOAD_ALL_PLAYLISTS_COMPLETE","LOAD_PLAYLIST_START","LOAD_PLAYLIST_COMPLETE","FILTER_PLAYLIST_ITEMS","FILTER_PLAYLIST_ITEMS_START","FILTER_PLAYLIST_ITEMS_COMPLETE","PLAYLIST_CYCLED","SELECT_PLAYLIST","ACTIVATE_PLAYLIST_START","ACTIVATE_PLAYLIST_COMPLETE","CREATE_PLAYLIST_START","CREATE_PLAYLIST_COMPLETE","RENAME_PLAYLIST_START","RENAME_PLAYLIST_COMPLETE","DELETE_PLAYLIST_START","DELETE_PLAYLIST_COMPLETE","OPEN_ADD_MEDIA_MENU","CLOSE_ADD_MEDIA_MENU","ADD_MEDIA_START","ADD_MEDIA_COMPLETE","REMOVE_MEDIA_START","REMOVE_MEDIA_COMPLETE","MOVE_MEDIA_START","MOVE_MEDIA_COMPLETE","UPDATE_MEDIA_START","UPDATE_MEDIA_COMPLETE","SHUFFLE_PLAYLIST_START","SHUFFLE_PLAYLIST_COMPLETE","openEditMediaDialog","del","get","post","put","playlistsSelector","playlistItemsSelector","playlistItemFilterSelector","activePlaylistIDSelector","selectedPlaylistIDSelector","activePlaylistSelector","selectedPlaylistSelector","mergeIncludedModels","MEDIA_PAGE_SIZE","setPlaylists","playlists","type","payload","flattenPlaylistItem","item","media","loadPlaylistStart","playlistID","page","sneaky","meta","loadPlaylistComplete","pagination","loadPlaylist","qs","limit","onStart","onComplete","res","map","offset","pageSize","size","total","onError","error","filterPlaylistItemsStart","filter","filterPlaylistItemsComplete","loadFilteredPlaylistItems","dispatch","getState","results","filterPlaylistItems","loadAll","loadFiltered","selectPlaylist","playlistCycled","shouldLoadAfterCycle","playlist","length","every","Boolean","slice","cyclePlaylist","activePlaylist","selectedPlaylist","_id","activatePlaylistStart","activatePlaylistComplete","activatePlaylist","loadPlaylistsStart","loadPlaylistsComplete","loadPlaylists","data","createPlaylistStart","props","tempId","createPlaylistComplete","createPlaylist","name","Date","now","description","shared","isFirstPlaylist","renamePlaylist","deselectPlaylist","selectedID","activeID","deletePlaylistStart","deletePlaylistComplete","cannotDeleteActivePlaylist","Error","deletePlaylist","addMediaMenu","items","position","closeAddMediaMenu","addMediaStart","location","addMediaComplete","newSize","insert","afterID","appendedMedia","minimizePlaylistItem","sourceType","sourceID","artist","title","start","end","addMedia","after","playlistSize","editMedia","updateMediaStart","mediaID","updateMediaComplete","updateMedia","removeMediaStart","medias","removeMediaComplete","removedMedia","removeMedia","itemIDs","moveMediaStart","moveMediaComplete","resolveMoveOptions","opts","before","i","l","at","moveMedia","playlistItems","shufflePlaylistStart","shufflePlaylistComplete","shufflePlaylist","shuffleOperation","loadOperation","then"],"mappings":"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","file":"PlaylistActionCreators.js","sourcesContent":["import {\n  LOAD_ALL_PLAYLISTS_START, LOAD_ALL_PLAYLISTS_COMPLETE,\n  LOAD_PLAYLIST_START, LOAD_PLAYLIST_COMPLETE,\n  FILTER_PLAYLIST_ITEMS,\n  FILTER_PLAYLIST_ITEMS_START, FILTER_PLAYLIST_ITEMS_COMPLETE,\n  PLAYLIST_CYCLED,\n  SELECT_PLAYLIST,\n  ACTIVATE_PLAYLIST_START, ACTIVATE_PLAYLIST_COMPLETE,\n  CREATE_PLAYLIST_START, CREATE_PLAYLIST_COMPLETE,\n  RENAME_PLAYLIST_START, RENAME_PLAYLIST_COMPLETE,\n  DELETE_PLAYLIST_START, DELETE_PLAYLIST_COMPLETE,\n  OPEN_ADD_MEDIA_MENU, CLOSE_ADD_MEDIA_MENU,\n  ADD_MEDIA_START, ADD_MEDIA_COMPLETE,\n  REMOVE_MEDIA_START, REMOVE_MEDIA_COMPLETE,\n  MOVE_MEDIA_START, MOVE_MEDIA_COMPLETE,\n  UPDATE_MEDIA_START, UPDATE_MEDIA_COMPLETE,\n  SHUFFLE_PLAYLIST_START, SHUFFLE_PLAYLIST_COMPLETE,\n} from '../constants/actionTypes/playlists';\n\nimport { openEditMediaDialog } from './DialogActionCreators';\nimport { del, get, post, put } from './RequestActionCreators';\n\nimport {\n  playlistsSelector,\n  playlistItemsSelector,\n  playlistItemFilterSelector,\n  activePlaylistIDSelector,\n  selectedPlaylistIDSelector,\n  activePlaylistSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport mergeIncludedModels from '../utils/mergeIncludedModels';\n\nconst MEDIA_PAGE_SIZE = 50;\n\nexport function setPlaylists(playlists) {\n  return {\n    type: LOAD_ALL_PLAYLISTS_COMPLETE,\n    payload: { playlists },\n  };\n}\n\nexport function flattenPlaylistItem(item) {\n  return {\n    ...item.media,\n    ...item,\n  };\n}\n\nexport function loadPlaylistStart(playlistID, page, { sneaky = false } = {}) {\n  return {\n    type: LOAD_PLAYLIST_START,\n    payload: { playlistID },\n    meta: { page, sneaky },\n  };\n}\n\nexport function loadPlaylistComplete(playlistID, media, pagination) {\n  return {\n    type: LOAD_PLAYLIST_COMPLETE,\n    payload: { playlistID, media },\n    meta: pagination,\n  };\n}\n\nexport function loadPlaylist(playlistID, page = 0, meta = {}) {\n  return get(`/playlists/${playlistID}/media`, {\n    qs: { page, limit: MEDIA_PAGE_SIZE },\n    onStart: () => loadPlaylistStart(playlistID, page, meta),\n    onComplete: res => loadPlaylistComplete(\n      playlistID,\n      mergeIncludedModels(res).map(flattenPlaylistItem),\n      {\n        page: res.meta.offset / res.meta.pageSize,\n        pageSize: res.meta.pageSize,\n        size: res.meta.total,\n      },\n    ),\n    onError: error => ({\n      type: LOAD_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { page },\n    }),\n  });\n}\n\nexport function filterPlaylistItemsStart(playlistID, page, filter) {\n  return {\n    type: FILTER_PLAYLIST_ITEMS_START,\n    payload: { playlistID, filter },\n    meta: { page },\n  };\n}\n\nexport function filterPlaylistItemsComplete(playlistID, media, pagination) {\n  return {\n    type: FILTER_PLAYLIST_ITEMS_COMPLETE,\n    payload: { playlistID, media },\n    meta: pagination,\n  };\n}\n\nexport function loadFilteredPlaylistItems(playlistID, page = 0) {\n  return (dispatch, getState) => {\n    const filter = playlistItemFilterSelector(getState()) || '';\n    return dispatch(get(`/playlists/${playlistID}/media`, {\n      qs: { filter, page, limit: MEDIA_PAGE_SIZE },\n      onStart: () => filterPlaylistItemsStart(playlistID, page, filter),\n      onComplete: res => filterPlaylistItemsComplete(\n        playlistID,\n        mergeIncludedModels(res).map(flattenPlaylistItem),\n        {\n          page: res.meta.offset / res.meta.pageSize,\n          pageSize: res.meta.pageSize,\n          size: res.meta.results,\n          filter,\n        },\n      ),\n      onError: error => ({\n        type: FILTER_PLAYLIST_ITEMS_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { page },\n      }),\n    }));\n  };\n}\n\nexport function filterPlaylistItems(playlistID, filter) {\n  return (dispatch) => {\n    dispatch({\n      type: FILTER_PLAYLIST_ITEMS,\n      payload: { playlistID, filter },\n    });\n\n    const loadAll = loadPlaylist(playlistID, 0);\n    const loadFiltered = loadFilteredPlaylistItems(playlistID, 0);\n    dispatch(filter === '' ? loadAll : loadFiltered);\n  };\n}\n\nexport function selectPlaylist(playlistID) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PLAYLIST,\n      payload: { playlistID },\n    });\n\n    if (playlistID) {\n      dispatch(loadPlaylist(playlistID));\n    }\n  };\n}\n\nexport function playlistCycled(playlistID) {\n  return {\n    type: PLAYLIST_CYCLED,\n    payload: { playlistID },\n  };\n}\n\nfunction shouldLoadAfterCycle(playlist) {\n  const { media } = playlist;\n  // If the playlist was fully loaded, we can cycle naively\n  if (media.length === playlist.size && media.every(Boolean)) {\n    return false;\n  }\n  // If the first page _after_ cycle is fully loaded, we also don't need to do\n  // anything.\n  if (media.length > MEDIA_PAGE_SIZE &&\n      media.slice(1, 1 + MEDIA_PAGE_SIZE).every(Boolean)) {\n    return false;\n  }\n  // Otherwise, there will be unloaded items on the first page after cycling,\n  // so we want to eagerly load the page again.\n  return true;\n}\n\nexport function cyclePlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const activePlaylist = activePlaylistSelector(getState());\n    const selectedPlaylist = selectedPlaylistSelector(getState());\n\n    let playlist;\n\n    if (playlistID === activePlaylist._id) {\n      playlist = activePlaylist;\n    } else if (playlistID === selectedPlaylist._id) {\n      playlist = selectedPlaylist;\n    }\n\n    dispatch(playlistCycled(playlistID));\n\n    if (playlist && shouldLoadAfterCycle(playlist)) {\n      dispatch(loadPlaylist(playlistID, 0));\n    }\n  };\n}\n\nexport function activatePlaylistStart(playlistID) {\n  return {\n    type: ACTIVATE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function activatePlaylistComplete(playlistID) {\n  return {\n    type: ACTIVATE_PLAYLIST_COMPLETE,\n    payload: { playlistID },\n  };\n}\n\nexport function activatePlaylist(playlistID) {\n  return put(`/playlists/${playlistID}/activate`, {}, {\n    onStart: () => activatePlaylistStart(playlistID),\n    onComplete: () => activatePlaylistComplete(playlistID),\n    onError: error => ({\n      type: ACTIVATE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { playlistID },\n    }),\n  });\n}\n\nexport function loadPlaylistsStart() {\n  return { type: LOAD_ALL_PLAYLISTS_START };\n}\n\nexport function loadPlaylistsComplete(playlists) {\n  return {\n    type: LOAD_ALL_PLAYLISTS_COMPLETE,\n    payload: { playlists },\n  };\n}\n\nexport function loadPlaylists() {\n  return get('/playlists', {\n    onStart: loadPlaylistsStart,\n    onComplete: res => loadPlaylistsComplete(res.data),\n    onError: error => ({\n      type: LOAD_ALL_PLAYLISTS_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function createPlaylistStart(props, tempId) {\n  return {\n    type: CREATE_PLAYLIST_START,\n    payload: props,\n    meta: { tempId },\n  };\n}\n\nexport function createPlaylistComplete(playlist, tempId) {\n  return {\n    type: CREATE_PLAYLIST_COMPLETE,\n    payload: { playlist },\n    meta: { tempId },\n  };\n}\n\nexport function createPlaylist(name) {\n  const tempId = -Date.now();\n  const description = '';\n  const shared = false;\n\n  return post('/playlists', { name, description, shared }, {\n    onStart: () => createPlaylistStart({ name, description, shared }, tempId),\n    onComplete: res => (dispatch, getState) => {\n      const playlist = res.data;\n      const isFirstPlaylist = !activePlaylistIDSelector(getState());\n      dispatch(createPlaylistComplete(playlist, tempId));\n      if (isFirstPlaylist) {\n        dispatch(activatePlaylistComplete(playlist._id));\n      }\n      return playlist;\n    },\n    onError: error => ({\n      type: CREATE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { tempId },\n    }),\n  });\n}\n\nexport function renamePlaylist(playlistID, name) {\n  return put(`/playlists/${playlistID}/rename`, { name }, {\n    onStart: () => ({\n      type: RENAME_PLAYLIST_START,\n      payload: { playlistID, name },\n    }),\n    onComplete: ({ data }) => ({\n      type: RENAME_PLAYLIST_COMPLETE,\n      payload: { playlistID, name: data.name },\n    }),\n    onError: error => ({\n      type: RENAME_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { playlistID, name },\n    }),\n  });\n}\n\n/**\n * Select or activate a different playlist than the one given.\n * @return Promise\n */\n\nexport function deselectPlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const selectedID = selectedPlaylistIDSelector(getState());\n    const activeID = activePlaylistIDSelector(getState());\n    if (playlistID === selectedID) {\n      dispatch(selectPlaylist(activeID));\n    }\n  };\n}\n\nexport function deletePlaylistStart(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function deletePlaylistComplete(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_COMPLETE,\n    payload: { playlistID },\n  };\n}\n\nexport function cannotDeleteActivePlaylist(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_COMPLETE,\n    error: true,\n    payload: new Error('The active playlist cannot be deleted. ' +\n      'Activate a different playlist first, before deleting this one.'),\n    meta: { playlistID },\n  };\n}\n\nexport function deletePlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const activeID = activePlaylistIDSelector(getState());\n\n    if (playlistID === activeID) {\n      dispatch(cannotDeleteActivePlaylist(playlistID));\n      return null;\n    }\n\n    dispatch(deselectPlaylist(playlistID));\n\n    return dispatch(del(`/playlists/${playlistID}`, {}, {\n      onStart: () => deletePlaylistStart(playlistID),\n      onComplete: () => deletePlaylistComplete(playlistID),\n      onError: error => ({\n        type: DELETE_PLAYLIST_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID },\n      }),\n    }));\n  };\n}\n\nexport function addMediaMenu(items, position) {\n  return (dispatch, getState) => {\n    const playlists = playlistsSelector(getState());\n    dispatch({\n      type: OPEN_ADD_MEDIA_MENU,\n      payload: {\n        media: items,\n      },\n      meta: {\n        playlists,\n        position,\n        type: 'add',\n      },\n    });\n  };\n}\n\nexport function closeAddMediaMenu() {\n  return { type: CLOSE_ADD_MEDIA_MENU };\n}\n\nexport function addMediaStart(playlistID, media, location) {\n  return {\n    type: ADD_MEDIA_START,\n    payload: { playlistID, media, location },\n  };\n}\n\nexport function addMediaComplete(playlistID, newSize, insert) {\n  return {\n    type: ADD_MEDIA_COMPLETE,\n    payload: {\n      playlistID,\n      newSize,\n      afterID: insert.afterID,\n      appendedMedia: insert.media,\n    },\n  };\n}\n\n/**\n * Keep only the playlist item properties that are necessary to add an item to\n * a playlist. The rest (\"thumbnail\" etc) is left out for smaller payloads.\n */\n\nfunction minimizePlaylistItem(item) {\n  return {\n    sourceType: item.sourceType,\n    sourceID: item.sourceID,\n    artist: item.artist,\n    title: item.title,\n    start: item.start,\n    end: item.end,\n  };\n}\n\nexport function addMedia(playlist, items, afterID = null) {\n  const payload = {\n    items: items.map(minimizePlaylistItem),\n    after: afterID,\n  };\n\n  return post(`/playlists/${playlist._id}/media`, payload, {\n    onStart: () => addMediaStart(playlist._id, items, afterID),\n    onComplete: res => addMediaComplete(\n      playlist._id,\n      res.meta.playlistSize,\n      { afterID, media: mergeIncludedModels(res).map(flattenPlaylistItem) },\n    ),\n    onError: error => ({\n      type: ADD_MEDIA_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function editMedia(playlistID, media) {\n  return openEditMediaDialog(playlistID, media);\n}\n\nexport function updateMediaStart(playlistID, mediaID, props) {\n  return {\n    type: UPDATE_MEDIA_START,\n    payload: { playlistID, mediaID, props },\n  };\n}\n\nexport function updateMediaComplete(playlistID, mediaID, media) {\n  return {\n    type: UPDATE_MEDIA_COMPLETE,\n    payload: { playlistID, mediaID, media },\n  };\n}\n\nexport function updateMedia(playlistID, mediaID, props) {\n  return put(`/playlists/${playlistID}/media/${mediaID}`, props, {\n    onStart: () => updateMediaStart(playlistID, mediaID, props),\n    onComplete: res => updateMediaComplete(playlistID, mediaID, res.data),\n    onError: error => ({\n      type: UPDATE_MEDIA_COMPLETE,\n      payload: error,\n      error: true,\n      meta: { playlistID, mediaID, props },\n    }),\n  });\n}\n\nexport function removeMediaStart(playlistID, items) {\n  return {\n    type: REMOVE_MEDIA_START,\n    payload: { playlistID, medias: items },\n  };\n}\n\nexport function removeMediaComplete(playlistID, newSize, removedMedia) {\n  return {\n    type: REMOVE_MEDIA_COMPLETE,\n    payload: {\n      playlistID,\n      newSize,\n      removedMedia,\n    },\n  };\n}\n\nexport function removeMedia(playlistID, items) {\n  const itemIDs = items.map(media => media._id);\n  return del(`/playlists/${playlistID}/media`, { items: itemIDs }, {\n    onStart: () => removeMediaStart(playlistID, items),\n    onComplete: ({ meta }) => removeMediaComplete(\n      playlistID,\n      meta.playlistSize,\n      items,\n    ),\n    onError: error => ({\n      type: REMOVE_MEDIA_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function moveMediaStart(playlistID, items, location) {\n  return {\n    type: MOVE_MEDIA_START,\n    payload: { playlistID, location, medias: items },\n  };\n}\n\nexport function moveMediaComplete(playlistID, items, location) {\n  return {\n    type: MOVE_MEDIA_COMPLETE,\n    payload: { playlistID, location, medias: items },\n  };\n}\n\nfunction resolveMoveOptions(playlist = [], opts = {}) {\n  if (opts.after) {\n    return { after: opts.after };\n  }\n  if (opts.before) {\n    for (let i = 0, l = playlist.length; i < l; i += 1) {\n      if (playlist[i] && playlist[i]._id === opts.before) {\n        if (i === 0) {\n          return { at: 'start' };\n        }\n        return { after: playlist[i - 1]._id };\n      }\n    }\n  }\n  if (opts.at) {\n    return { at: opts.at };\n  }\n  return null;\n}\n\nexport function moveMedia(playlistID, medias, opts) {\n  return (dispatch, getState) => {\n    const playlistItems = playlistItemsSelector(getState())[playlistID];\n    const location = resolveMoveOptions(playlistItems, opts);\n\n    const items = medias.map(media => media._id);\n\n    return dispatch(put(`/playlists/${playlistID}/move`, { items, ...location }, {\n      onStart: () => moveMediaStart(playlistID, medias, location),\n      onComplete: () => moveMediaComplete(playlistID, medias, location),\n      onError: error => ({\n        type: MOVE_MEDIA_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID, medias, location },\n      }),\n    }));\n  };\n}\n\nexport function shufflePlaylistStart(playlistID) {\n  return {\n    type: SHUFFLE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function shufflePlaylistComplete(playlistID) {\n  return (dispatch) => {\n    dispatch({\n      type: SHUFFLE_PLAYLIST_COMPLETE,\n      payload: { playlistID },\n    });\n  };\n}\n\nexport function shufflePlaylist(playlistID) {\n  return (dispatch) => {\n    const shuffleOperation = post(`/playlists/${playlistID}/shuffle`, {}, {\n      onStart: () => shufflePlaylistStart(playlistID),\n      // onComplete: () => shufflePlaylistComplete(playlistID),\n      onError: error => ({\n        type: SHUFFLE_PLAYLIST_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID },\n      }),\n    });\n    const loadOperation = loadPlaylist(playlistID, 0, { sneaky: true });\n\n    return dispatch(shuffleOperation)\n      .then(() => dispatch(loadOperation))\n      .then(() => dispatch(shufflePlaylistComplete(playlistID)));\n  };\n}\n"]}