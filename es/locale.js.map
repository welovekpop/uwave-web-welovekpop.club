{"version":3,"sources":["locale.js"],"names":["i18next","en","resources","cs","cy","de","es","fr","ko","nl","pt","zh","UwaveBackend","type","cache","Promise","resolve","getResource","language","reject","Error","read","namespace","callback","then","resource","result","catch","use","init","fallbackLng","defaultNS","interpolation","escapeValue","availableLanguages","Object","keys","createLocale","locale","cloneInstance","changeLanguage"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;;AAEA,IAAMC,YAAY;AAChBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GADY;AAEhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GAFY;AAGhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GAHY;AAIhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GAJY;AAKhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GALY;AAMhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GANY;AAOhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GAPY;AAQhBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA,GARY;AAShBC,MAAI;AAAA,WAAM,OAAO,gBAAP,CAAN;AAAA;AATY,CAAlB;;IAYMC,Y;;;;SAEJC,I,GAAO,S;SACPC,K,GAAQ,EAAEb,IAAIc,QAAQC,OAAR,CAAgBf,EAAhB,CAAN,E;;;yBAERgB,W,wBAAYC,Q,EAAU;AACpB,QAAI,KAAKJ,KAAL,CAAWI,QAAX,CAAJ,EAA0B;AACxB,aAAO,KAAKJ,KAAL,CAAWI,QAAX,CAAP;AACD;AACD,QAAI,CAAChB,UAAUgB,QAAV,CAAL,EAA0B;AACxB,aAAOH,QAAQI,MAAR,CAAe,IAAIC,KAAJ,oBAA2BF,QAA3B,yBAAf,CAAP;AACD;;AAED,SAAKJ,KAAL,CAAWI,QAAX,IAAuBhB,UAAUgB,QAAV,GAAvB;;AAEA,WAAO,KAAKJ,KAAL,CAAWI,QAAX,CAAP;AACD,G;;yBAEDG,I,iBAAKH,Q,EAAUI,S,EAAWC,Q,EAAU;AAClC,SAAKN,WAAL,CAAiBC,QAAjB,EACGM,IADH,CACQ;AAAA,aAAYC,SAASH,SAAT,CAAZ;AAAA,KADR,EAEGE,IAFH,CAEQ,UAACE,MAAD,EAAY;AAChBH,eAAS,IAAT,EAAeG,MAAf;AACD,KAJH,EAKGC,KALH,CAKSJ,QALT;AAMD,G;;;;;AAzBGX,Y,CACGC,I,GAAO,S;;;AA2BhBb,QAAQ4B,GAAR,CAAY,IAAIhB,YAAJ,EAAZ;;AAEAZ,QAAQ6B,IAAR,CAAa;AACXC,eAAa,IADF;AAEXC,aAAW,OAFA;AAGXC,iBAAe;AACb;AACAC,iBAAa;AAFA;AAHJ,CAAb;;AASA,OAAO,IAAMC,sBAAuB,IAAvB,SAAgCC,OAAOC,IAAP,CAAYlC,SAAZ,CAAhC,CAAN;;AAEP,eAAe,SAASmC,YAAT,CAAsBnB,QAAtB,EAAgC;AAC7C,MAAMoB,SAAStC,QAAQuC,aAAR,EAAf;AACAD,SAAOJ,kBAAP,GAA4BA,kBAA5B;;AAEA,SAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BsB,WAAOE,cAAP,CAAsBtB,QAAtB,EAAgC,YAAM;AACpCF,cAAQsB,MAAR;AACD,KAFD;AAGD,GAJM,CAAP;AAKD","file":"locale.js","sourcesContent":["import i18next from 'i18next';\nimport * as en from '../locale/en.yaml';\n\nconst resources = {\n  cs: () => import('../locale/cs.yaml'),\n  cy: () => import('../locale/cy.yaml'),\n  de: () => import('../locale/de.yaml'),\n  es: () => import('../locale/es.yaml'),\n  fr: () => import('../locale/fr.yaml'),\n  ko: () => import('../locale/ko.yaml'),\n  nl: () => import('../locale/nl.yaml'),\n  pt: () => import('../locale/pt.yaml'),\n  zh: () => import('../locale/zh.yaml')\n};\n\nclass UwaveBackend {\n  static type = 'backend';\n  type = 'backend';\n  cache = { en: Promise.resolve(en) };\n\n  getResource(language) {\n    if (this.cache[language]) {\n      return this.cache[language];\n    }\n    if (!resources[language]) {\n      return Promise.reject(new Error(`The language \"${language}\" is not supported.`));\n    }\n\n    this.cache[language] = resources[language]();\n\n    return this.cache[language];\n  }\n\n  read(language, namespace, callback) {\n    this.getResource(language)\n      .then(resource => resource[namespace])\n      .then((result) => {\n        callback(null, result);\n      })\n      .catch(callback);\n  }\n}\n\ni18next.use(new UwaveBackend());\n\ni18next.init({\n  fallbackLng: 'en',\n  defaultNS: 'uwave',\n  interpolation: {\n    // Prevent double-escapes: React already escapes things for us\n    escapeValue: false\n  }\n});\n\nexport const availableLanguages = [ 'en', ...Object.keys(resources) ];\n\nexport default function createLocale(language) {\n  const locale = i18next.cloneInstance();\n  locale.availableLanguages = availableLanguages;\n\n  return new Promise((resolve) => {\n    locale.changeLanguage(language, () => {\n      resolve(locale);\n    });\n  });\n}\n"]}