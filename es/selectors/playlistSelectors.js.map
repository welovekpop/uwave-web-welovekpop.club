{"version":3,"sources":["selectors/playlistSelectors.js"],"names":["createSelector","naturalCmp","values","byName","a","b","name","toLowerCase","baseSelector","state","playlists","playlistsSelector","sort","playlistItemsSelector","playlistItems","activePlaylistIDSelector","activePlaylistID","activeMediaSelector","activePlaylist","mergePlaylistItems","playlist","media","activePlaylistSelector","activeID","activeMedia","selectedPlaylistIDSelector","selectedPlaylistID","selectedMediaSelector","selectedPlaylist","filterSelector","base","currentFilter","currentFilterSelector","filter","selectedID","playlistID","playlistItemFilterSelector","filteredSelectedPlaylistItemsSelector","selectedItems","items","selectedPlaylistSelector","selectedMedia","nextMediaSelector","isSelectedPlaylistLoadingSelector","Boolean","loading","isFilteredSelector"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\nimport naturalCmp from 'natural-compare';\nimport values from 'object-values';\n\nconst byName = (a, b) => naturalCmp(a.name.toLowerCase(), b.name.toLowerCase());\n\nconst baseSelector = state => state.playlists;\n\nexport const playlistsSelector = createSelector(\n  baseSelector,\n  playlists => values(playlists.playlists).sort(byName),\n);\n\nexport const playlistItemsSelector = createSelector(\n  baseSelector,\n  playlists => playlists.playlistItems,\n);\n\nexport const activePlaylistIDSelector = createSelector(\n  baseSelector,\n  playlists => playlists.activePlaylistID,\n);\n\nconst activeMediaSelector = createSelector(\n  playlistItemsSelector,\n  activePlaylistIDSelector,\n  (playlistItems, activePlaylist) => playlistItems[activePlaylist] || [],\n);\n\nfunction mergePlaylistItems(playlist, playlistItems) {\n  if (playlist) {\n    return {\n      ...playlist,\n      media: playlistItems,\n    };\n  }\n  return null;\n}\n\nexport const activePlaylistSelector = createSelector(\n  baseSelector,\n  activePlaylistIDSelector,\n  activeMediaSelector,\n  (playlists, activeID, activeMedia) =>\n    mergePlaylistItems(playlists.playlists[activeID], activeMedia),\n);\n\nexport const selectedPlaylistIDSelector = createSelector(\n  baseSelector,\n  playlists => playlists.selectedPlaylistID,\n);\n\nconst selectedMediaSelector = createSelector(\n  playlistItemsSelector,\n  selectedPlaylistIDSelector,\n  (playlistItems, selectedPlaylist) => playlistItems[selectedPlaylist] || [],\n);\n\nconst filterSelector = createSelector(\n  baseSelector,\n  base => base.currentFilter,\n);\n\nconst currentFilterSelector = createSelector(\n  filterSelector,\n  selectedPlaylistIDSelector,\n  (filter, selectedID) => {\n    if (filter && filter.playlistID === selectedID) {\n      return filter;\n    }\n    return null;\n  },\n);\n\nexport const playlistItemFilterSelector = createSelector(\n  currentFilterSelector,\n  filter => filter && filter.filter,\n);\n\nexport const filteredSelectedPlaylistItemsSelector = createSelector(\n  selectedPlaylistIDSelector,\n  selectedMediaSelector,\n  currentFilterSelector,\n  (selectedID, selectedItems, filter) => {\n    if (filter) {\n      return filter.items;\n    }\n    return selectedItems;\n  },\n);\n\nexport const selectedPlaylistSelector = createSelector(\n  baseSelector,\n  selectedPlaylistIDSelector,\n  selectedMediaSelector,\n  (playlists, selectedID, selectedMedia) =>\n    mergePlaylistItems(playlists.playlists[selectedID], selectedMedia),\n);\n\nexport const nextMediaSelector = createSelector(\n  activeMediaSelector,\n  media => (media ? media[0] : null),\n);\n\nexport const isSelectedPlaylistLoadingSelector = createSelector(\n  selectedPlaylistSelector,\n  selectedPlaylist => Boolean(selectedPlaylist.loading),\n);\n\nexport const isFilteredSelector = createSelector(\n  playlistItemFilterSelector,\n  filter => Boolean(filter),\n);\n"],"file":"playlistSelectors.js"}