{"version":3,"sources":["selectors/voteSelectors.js"],"names":["createSelector","createStructuredSelector","currentUserSelector","baseSelector","state","votes","createPropSelector","base","prop","obj","createIsSelector","type","users","me","indexOf","_id","createCountSelector","array","length","favoritesSelector","upvotesSelector","downvotesSelector","currentVotesSelector","favorites","upvotes","downvotes","isFavoriteSelector","isUpvoteSelector","isDownvoteSelector","favoritesCountSelector","upvotesCountSelector","downvotesCountSelector","currentVoteStatsSelector","isFavorite","isUpvote","isDownvote","favoritesCount","upvotesCount","downvotesCount"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,wBAAzB,QAAyD,UAAzD;AACA,SAASC,mBAAT,QAAoC,iBAApC;;AAEA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAASC,MAAMC,KAAf;AAAA,CAArB;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,IAAP;AAAA,SAAgBR,eAAeO,IAAf,EAAqB;AAAA,WAAOE,IAAID,IAAJ,CAAP;AAAA,GAArB,CAAhB;AAAA,CAA3B;AACA,IAAME,mBAAmB,SAAnBA,gBAAmB;AAAA,SAAQV,eAC/BW,IAD+B,EAE/BT,mBAF+B,EAG/B,UAACU,KAAD,EAAQC,EAAR;AAAA,WAAe,CAAC,CAACA,EAAF,IAAQD,MAAME,OAAN,CAAcD,GAAGE,GAAjB,IAAwB,CAAC,CAAhD;AAAA,GAH+B,CAAR;AAAA,CAAzB;AAKA,IAAMC,sBAAsB,SAAtBA,mBAAsB;AAAA,SAAQhB,eAClCW,IADkC,EAElC;AAAA,WAASM,MAAMC,MAAf;AAAA,GAFkC,CAAR;AAAA,CAA5B;;AAKA,OAAO,IAAMC,oBAAoBb,mBAAmBH,YAAnB,EAAiC,WAAjC,CAA1B;AACP,OAAO,IAAMiB,kBAAkBd,mBAAmBH,YAAnB,EAAiC,SAAjC,CAAxB;AACP,OAAO,IAAMkB,oBAAoBf,mBAAmBH,YAAnB,EAAiC,WAAjC,CAA1B;;AAEP,OAAO,IAAMmB,uBAAuBrB,yBAAyB;AAC3DsB,aAAWJ,iBADgD;AAE3DK,WAASJ,eAFkD;AAG3DK,aAAWJ;AAHgD,CAAzB,CAA7B;;AAMP,OAAO,IAAMK,qBAAqBhB,iBAAiBS,iBAAjB,CAA3B;AACP,OAAO,IAAMQ,mBAAmBjB,iBAAiBU,eAAjB,CAAzB;AACP,OAAO,IAAMQ,qBAAqBlB,iBAAiBW,iBAAjB,CAA3B;;AAEP,OAAO,IAAMQ,yBAAyBb,oBAAoBG,iBAApB,CAA/B;AACP,OAAO,IAAMW,uBAAuBd,oBAAoBI,eAApB,CAA7B;AACP,OAAO,IAAMW,yBAAyBf,oBAAoBK,iBAApB,CAA/B;;AAEP,OAAO,IAAMW,2BAA2B/B,yBAAyB;AAC/DgC,cAAYP,kBADmD;AAE/DQ,YAAUP,gBAFqD;AAG/DQ,cAAYP,kBAHmD;AAI/DQ,kBAAgBP,sBAJ+C;AAK/DQ,gBAAcP,oBALiD;AAM/DQ,kBAAgBP;AAN+C,CAAzB,CAAjC","file":"voteSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport { currentUserSelector } from './userSelectors';\n\nconst baseSelector = state => state.votes;\n\nconst createPropSelector = (base, prop) => createSelector(base, obj => obj[prop]);\nconst createIsSelector = type => createSelector(\n  type,\n  currentUserSelector,\n  (users, me) => !!me && users.indexOf(me._id) > -1,\n);\nconst createCountSelector = type => createSelector(\n  type,\n  array => array.length,\n);\n\nexport const favoritesSelector = createPropSelector(baseSelector, 'favorites');\nexport const upvotesSelector = createPropSelector(baseSelector, 'upvotes');\nexport const downvotesSelector = createPropSelector(baseSelector, 'downvotes');\n\nexport const currentVotesSelector = createStructuredSelector({\n  favorites: favoritesSelector,\n  upvotes: upvotesSelector,\n  downvotes: downvotesSelector,\n});\n\nexport const isFavoriteSelector = createIsSelector(favoritesSelector);\nexport const isUpvoteSelector = createIsSelector(upvotesSelector);\nexport const isDownvoteSelector = createIsSelector(downvotesSelector);\n\nexport const favoritesCountSelector = createCountSelector(favoritesSelector);\nexport const upvotesCountSelector = createCountSelector(upvotesSelector);\nexport const downvotesCountSelector = createCountSelector(downvotesSelector);\n\nexport const currentVoteStatsSelector = createStructuredSelector({\n  isFavorite: isFavoriteSelector,\n  isUpvote: isUpvoteSelector,\n  isDownvote: isDownvoteSelector,\n  favoritesCount: favoritesCountSelector,\n  upvotesCount: upvotesCountSelector,\n  downvotesCount: downvotesCountSelector,\n});\n"]}