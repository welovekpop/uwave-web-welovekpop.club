{"version":3,"sources":["selectors/chatSelectors.js"],"names":["createSelector","createStructuredSelector","objMap","getAvailableGroupMentions","availableEmojiNamesSelector","availableEmojiImagesSelector","usersSelector","currentUserSelector","notificationSettingsSelector","baseSelector","state","chat","motdSelector","motd","MAX_MESSAGES","allMessagesSelector","messages","filteredMessagesSelector","notificationSettings","filter","message","type","userJoin","userLeave","userNameChanged","messagesSelector","slice","markupCompilerOptionsSelector","availableEmoji","emojiImages","mutesSelector","mutedUsers","muteTimeoutsSelector","mutes","mute","expirationTimer","mutedUserIDsSelector","Object","keys","mutedUsersSelector","mutedIDs","users","map","userID","currentUserMuteSelector","user","_id","availableGroupMentionsSelector","emojiCompletionsSelector","images","shortcode","name","image","isModeratorSelector","canDeleteMessagesSelector"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,wBAAzB,QAAyD,UAAzD;AACA,OAAOC,MAAP,MAAmB,YAAnB;;AAEA,SACEC,yBADF,QAEO,uBAFP;AAGA,SACEC,2BADF,EAEEC,4BAFF,QAGO,mBAHP;AAIA,SACEC,aADF,EAEEC,mBAFF,QAGO,iBAHP;AAIA,SACEC,4BADF,QAEO,oBAFP;;AAIA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAASC,MAAMC,IAAf;AAAA,CAArB;;AAEA,OAAO,IAAMC,eAAeZ,eAAeS,YAAf,EAA6B;AAAA,SAAQE,KAAKE,IAAb;AAAA,CAA7B,CAArB;;AAEP,IAAMC,eAAe,GAArB;AACA,IAAMC,sBAAsBf,eAAeS,YAAf,EAA6B;AAAA,SAAQE,KAAKK,QAAb;AAAA,CAA7B,CAA5B;AACA,IAAMC,2BAA2BjB,eAC/Be,mBAD+B,EAE/BP,4BAF+B,EAG/B,UAACQ,QAAD,EAAWE,oBAAX;AAAA,SAAoCF,SAASG,MAAT,CAAgB,UAACC,OAAD,EAAa;AAC/D,QAAIA,QAAQC,IAAR,KAAiB,UAArB,EAAiC,OAAOH,qBAAqBI,QAA5B;AACjC,QAAIF,QAAQC,IAAR,KAAiB,WAArB,EAAkC,OAAOH,qBAAqBK,SAA5B;AAClC,QAAIH,QAAQC,IAAR,KAAiB,iBAArB,EAAwC,OAAOH,qBAAqBM,eAA5B;AACxC,WAAO,IAAP;AACD,GALmC,CAApC;AAAA,CAH+B,CAAjC;AAUA,OAAO,IAAMC,mBAAmBzB,eAC9BiB,wBAD8B,EAE9B;AAAA,SAAYD,SAASU,KAAT,CAAe,CAACZ,YAAhB,CAAZ;AAAA,CAF8B,CAAzB;;AAKP,OAAO,IAAMa,gCAAgC1B,yBAAyB;AACpE2B,kBAAgBxB,2BADoD;AAEpEyB,eAAaxB;AAFuD,CAAzB,CAAtC;;AAKP,IAAMyB,gBAAgB9B,eAAeS,YAAf,EAA6B;AAAA,SAAQE,KAAKoB,UAAb;AAAA,CAA7B,CAAtB;;AAEA,OAAO,IAAMC,uBAAuBhC,eAClC8B,aADkC,EAElC;AAAA,SAAS5B,OAAO+B,KAAP,EAAc;AAAA,WAAQC,KAAKC,eAAb;AAAA,GAAd,CAAT;AAAA,CAFkC,CAA7B;;AAKP,OAAO,IAAMC,uBAAuBpC,eAClC8B,aADkC,EAElC;AAAA,SAASO,OAAOC,IAAP,CAAYL,KAAZ,CAAT;AAAA,CAFkC,CAA7B;;AAKP,OAAO,IAAMM,qBAAqBvC,eAChCoC,oBADgC,EAEhC9B,aAFgC,EAGhC,UAACkC,QAAD,EAAWC,KAAX;AAAA,SAAqBD,SAASE,GAAT,CAAa;AAAA,WAAUD,MAAME,MAAN,CAAV;AAAA,GAAb,CAArB;AAAA,CAHgC,CAA3B;;AAMP,OAAO,IAAMC,0BAA0B5C,eACrCO,mBADqC,EAErCuB,aAFqC,EAGrC,UAACe,IAAD,EAAOZ,KAAP;AAAA,SAAkBY,OAAOZ,MAAMY,KAAKC,GAAX,CAAP,GAAyB,IAA3C;AAAA,CAHqC,CAAhC;;AAMP,OAAO,IAAMC,iCAAiC/C,eAC5CO,mBAD4C,EAE5C;AAAA,SAAQJ,0BAA0B0C,IAA1B,CAAR;AAAA,CAF4C,CAAvC;;AAKP,OAAO,IAAMG,2BAA2BhD,eACtCK,4BADsC,EAEtC;AAAA,SAAUgC,OAAOC,IAAP,CAAYW,MAAZ,EAAoBP,GAApB,CAAwB;AAAA,WAAS;AACzCQ,iBAAWC,IAD8B;AAEzCC,aAAOH,OAAOE,IAAP;AAFkC,KAAT;AAAA,GAAxB,CAAV;AAAA,CAFsC,CAAjC;;AAQP,SAASE,uBAAuBC,yBAAhC,QAAiE,iBAAjE","file":"chatSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport objMap from 'object.map';\n\nimport {\n  getAvailableGroupMentions\n} from '../utils/chatMentions';\nimport {\n  availableEmojiNamesSelector,\n  availableEmojiImagesSelector\n} from './configSelectors';\nimport {\n  usersSelector,\n  currentUserSelector\n} from './userSelectors';\nimport {\n  notificationSettingsSelector\n} from './settingSelectors';\n\nconst baseSelector = state => state.chat;\n\nexport const motdSelector = createSelector(baseSelector, chat => chat.motd);\n\nconst MAX_MESSAGES = 500;\nconst allMessagesSelector = createSelector(baseSelector, chat => chat.messages);\nconst filteredMessagesSelector = createSelector(\n  allMessagesSelector,\n  notificationSettingsSelector,\n  (messages, notificationSettings) => messages.filter((message) => {\n    if (message.type === 'userJoin') return notificationSettings.userJoin;\n    if (message.type === 'userLeave') return notificationSettings.userLeave;\n    if (message.type === 'userNameChanged') return notificationSettings.userNameChanged;\n    return true;\n  })\n);\nexport const messagesSelector = createSelector(\n  filteredMessagesSelector,\n  messages => messages.slice(-MAX_MESSAGES)\n);\n\nexport const markupCompilerOptionsSelector = createStructuredSelector({\n  availableEmoji: availableEmojiNamesSelector,\n  emojiImages: availableEmojiImagesSelector\n});\n\nconst mutesSelector = createSelector(baseSelector, chat => chat.mutedUsers);\n\nexport const muteTimeoutsSelector = createSelector(\n  mutesSelector,\n  mutes => objMap(mutes, mute => mute.expirationTimer)\n);\n\nexport const mutedUserIDsSelector = createSelector(\n  mutesSelector,\n  mutes => Object.keys(mutes)\n);\n\nexport const mutedUsersSelector = createSelector(\n  mutedUserIDsSelector,\n  usersSelector,\n  (mutedIDs, users) => mutedIDs.map(userID => users[userID])\n);\n\nexport const currentUserMuteSelector = createSelector(\n  currentUserSelector,\n  mutesSelector,\n  (user, mutes) => (user ? mutes[user._id] : null)\n);\n\nexport const availableGroupMentionsSelector = createSelector(\n  currentUserSelector,\n  user => getAvailableGroupMentions(user)\n);\n\nexport const emojiCompletionsSelector = createSelector(\n  availableEmojiImagesSelector,\n  images => Object.keys(images).map(name => ({\n    shortcode: name,\n    image: images[name]\n  }))\n);\n\nexport { isModeratorSelector as canDeleteMessagesSelector } from './userSelectors';\n"]}