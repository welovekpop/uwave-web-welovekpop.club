{"version":3,"sources":["selectors/userSelectors.js"],"names":["createSelector","naturalCmp","values","authSelector","state","auth","usersBaseSelector","users","usersSelector","base","authErrorSelector","error","currentUserSelector","user","isLoggedInSelector","Boolean","tokenSelector","jwt","currentRoleSelector","role","isModeratorSelector","isManagerSelector","compareUsers","a","b","username","toLowerCase","userListSelector","sort","userCountSelector","length","guestCountSelector","guests","listenerCountSelector"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAASC,MAAMC,IAAf;AAAA,CAArB;;AAEA,IAAMC,oBAAoB,SAApBA,iBAAoB;AAAA,SAASF,MAAMG,KAAf;AAAA,CAA1B;AACA,OAAO,IAAMC,gBAAgBR,eAAeM,iBAAf,EAAkC;AAAA,SAAQG,KAAKF,KAAb;AAAA,CAAlC,CAAtB;;AAEP,OAAO,IAAMG,oBAAoBV,eAAeG,YAAf,EAA6B;AAAA,SAAQE,KAAKM,KAAb;AAAA,CAA7B,CAA1B;AACP,OAAO,IAAMC,sBAAsBZ,eAAeG,YAAf,EAA6B;AAAA,SAAQE,KAAKQ,IAAb;AAAA,CAA7B,CAA5B;AACP,OAAO,IAAMC,qBAAqBd,eAAeY,mBAAf,EAAoCG,OAApC,CAA3B;AACP,OAAO,IAAMC,gBAAgBhB,eAAeG,YAAf,EAA6B;AAAA,SAAQE,KAAKY,GAAb;AAAA,CAA7B,CAAtB;;AAEP,IAAMC,sBAAsBlB,eAC1BY,mBAD0B,EAE1B;AAAA,SAASC,OAAOA,KAAKM,IAAZ,GAAmB,CAA5B;AAAA,CAF0B,CAA5B;;AAKA,OAAO,IAAMC,sBAAsBpB,eACjCkB,mBADiC,EAEjC;AAAA,SAAQC,QAAQ,CAAhB;AAAA,CAFiC,CAA5B;;AAKP,OAAO,IAAME,oBAAoBrB,eAC/BkB,mBAD+B,EAE/B;AAAA,SAAQC,QAAQ,CAAhB;AAAA,CAF+B,CAA1B;;AAKP,SAASG,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,MAAID,EAAEJ,IAAF,GAASK,EAAEL,IAAf,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD;AACD,MAAII,EAAEJ,IAAF,GAASK,EAAEL,IAAf,EAAqB;AACnB,WAAO,CAAP;AACD;AACD,SAAOlB,WAAWsB,EAAEE,QAAF,CAAWC,WAAX,EAAX,EAAqCF,EAAEC,QAAF,CAAWC,WAAX,EAArC,CAAP;AACD;;AAED,OAAO,IAAMC,mBAAmB3B,eAC9BQ,aAD8B,EAE9B;AAAA,SAASN,OAAOK,KAAP,EAAcqB,IAAd,CAAmBN,YAAnB,CAAT;AAAA,CAF8B,CAAzB;;AAKP,OAAO,IAAMO,oBAAoB7B,eAC/B2B,gBAD+B,EAE/B;AAAA,SAASpB,MAAMuB,MAAf;AAAA,CAF+B,CAA1B;;AAKP,OAAO,IAAMC,qBAAqB/B,eAChCM,iBADgC,EAEhC;AAAA,SAAQG,KAAKuB,MAAb;AAAA,CAFgC,CAA3B;;AAKP,OAAO,IAAMC,wBAAwBjC,eACnC6B,iBADmC,EAEnCE,kBAFmC,EAGnC,UAACxB,KAAD,EAAQyB,MAAR;AAAA,SAAmBzB,QAAQyB,MAA3B;AAAA,CAHmC,CAA9B","file":"userSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport naturalCmp from 'natural-compare';\nimport values from 'object-values';\n\nconst authSelector = state => state.auth;\n\nconst usersBaseSelector = state => state.users;\nexport const usersSelector = createSelector(usersBaseSelector, base => base.users);\n\nexport const authErrorSelector = createSelector(authSelector, auth => auth.error);\nexport const currentUserSelector = createSelector(authSelector, auth => auth.user);\nexport const isLoggedInSelector = createSelector(currentUserSelector, Boolean);\nexport const tokenSelector = createSelector(authSelector, auth => auth.jwt);\n\nconst currentRoleSelector = createSelector(\n  currentUserSelector,\n  user => (user ? user.role : 0)\n);\n\nexport const isModeratorSelector = createSelector(\n  currentRoleSelector,\n  role => role >= 2\n);\n\nexport const isManagerSelector = createSelector(\n  currentRoleSelector,\n  role => role >= 3\n);\n\nfunction compareUsers(a, b) {\n  if (a.role > b.role) {\n    return -1;\n  }\n  if (a.role < b.role) {\n    return 1;\n  }\n  return naturalCmp(a.username.toLowerCase(), b.username.toLowerCase());\n}\n\nexport const userListSelector = createSelector(\n  usersSelector,\n  users => values(users).sort(compareUsers)\n);\n\nexport const userCountSelector = createSelector(\n  userListSelector,\n  users => users.length\n);\n\nexport const guestCountSelector = createSelector(\n  usersBaseSelector,\n  base => base.guests\n);\n\nexport const listenerCountSelector = createSelector(\n  userCountSelector,\n  guestCountSelector,\n  (users, guests) => users + guests\n);\n"]}