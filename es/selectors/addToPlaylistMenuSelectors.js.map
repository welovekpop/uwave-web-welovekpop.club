{"version":3,"sources":["selectors/addToPlaylistMenuSelectors.js"],"names":["createSelector","createStructuredSelector","playlistsSelector","baseSelector","state","addToPlaylistMenu","isOpenSelector","menu","open","positionSelector","position","typeSelector","type","dataSelector","data","isFavoriteSelector","mediaSelector","isOpen","isFavorite","media","historyIDSelector","historyID","addToPlaylistMenuSelector","playlists"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,wBAAzB,QAAyD,UAAzD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;;AAEA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAASC,MAAMC,iBAAf;AAAA,CAArB;AACA,OAAO,IAAMC,iBAAiBN,eAAeG,YAAf,EAA6B;AAAA,SAAQI,KAAKC,IAAb;AAAA,CAA7B,CAAvB;AACP,OAAO,IAAMC,mBAAmBT,eAAeG,YAAf,EAA6B;AAAA,SAAQI,KAAKG,QAAb;AAAA,CAA7B,CAAzB;AACP,IAAMC,eAAeX,eAAeG,YAAf,EAA6B;AAAA,SAAQI,KAAKK,IAAb;AAAA,CAA7B,CAArB;AACA,IAAMC,eAAeb,eAAeG,YAAf,EAA6B;AAAA,SAAQI,KAAKO,IAAb;AAAA,CAA7B,CAArB;;AAEA,OAAO,IAAMC,qBAAqBf,eAAeW,YAAf,EAA6B;AAAA,SAAQC,SAAS,UAAjB;AAAA,CAA7B,CAA3B;;AAEP,OAAO,IAAMI,gBAAgBhB,eAC3Ba,YAD2B,EAE3BP,cAF2B,EAG3BS,kBAH2B,EAI3B,UAACD,IAAD,EAAOG,MAAP,EAAeC,UAAf;AAAA,SAA+BD,UAAU,CAACC,UAAX,GAAwBJ,KAAKK,KAA7B,GAAqC,IAApE;AAAA,CAJ2B,CAAtB;AAMP,OAAO,IAAMC,oBAAoBpB,eAC/Ba,YAD+B,EAE/BP,cAF+B,EAG/BS,kBAH+B,EAI/B,UAACD,IAAD,EAAOG,MAAP,EAAeC,UAAf;AAAA,SAA+BD,UAAUC,UAAV,GAAuBJ,KAAKO,SAA5B,GAAwC,IAAvE;AAAA,CAJ+B,CAA1B;;AAOP,OAAO,IAAMC,4BAA4BrB,yBAAyB;AAChEW,QAAMD,YAD0D;AAEhEH,QAAMF,cAF0D;AAGhEI,YAAUD,gBAHsD;AAIhEc,aAAWrB;AAJqD,CAAzB,CAAlC","file":"addToPlaylistMenuSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport { playlistsSelector } from './playlistSelectors';\n\nconst baseSelector = state => state.addToPlaylistMenu;\nexport const isOpenSelector = createSelector(baseSelector, menu => menu.open);\nexport const positionSelector = createSelector(baseSelector, menu => menu.position);\nconst typeSelector = createSelector(baseSelector, menu => menu.type);\nconst dataSelector = createSelector(baseSelector, menu => menu.data);\n\nexport const isFavoriteSelector = createSelector(typeSelector, type => type === 'favorite');\n\nexport const mediaSelector = createSelector(\n  dataSelector,\n  isOpenSelector,\n  isFavoriteSelector,\n  (data, isOpen, isFavorite) => (isOpen && !isFavorite ? data.media : null),\n);\nexport const historyIDSelector = createSelector(\n  dataSelector,\n  isOpenSelector,\n  isFavoriteSelector,\n  (data, isOpen, isFavorite) => (isOpen && isFavorite ? data.historyID : null),\n);\n\nexport const addToPlaylistMenuSelector = createStructuredSelector({\n  type: typeSelector,\n  open: isOpenSelector,\n  position: positionSelector,\n  playlists: playlistsSelector,\n});\n"]}