{"version":3,"sources":["selectors/configSelectors.js"],"names":["createSelector","memoize","configSelector","state","config","requestOptionsSelector","options","apiUrl","availableEmojiImagesSelector","emoji","availableEmojiNamesSelector","Object","keys","reCaptchaSelector","recaptcha","reCaptchaSiteKeySelector","rc","key","rolesSelector","roles","roleSelector","roleName"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,OAAO,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAASC,MAAMC,MAAf;AAAA,CAAvB;;AAEP,OAAO,IAAMC,yBAAyBL,eACpCE,cADoC,EAEpC,UAACE,MAAD,EAAY;AACV,MAAME,UAAU,EAAhB;AACA,MAAIF,OAAOG,MAAX,EAAmB;AACjBD,YAAQC,MAAR,GAAiBH,OAAOG,MAAxB;AACD;AACD,SAAOD,OAAP;AACD,CARmC,CAA/B;;AAWP,OAAO,IAAME,+BAA+BR,eAC1CE,cAD0C,EAE1C;AAAA,SAAUE,OAAOK,KAAP,IAAgB,EAA1B;AAAA,CAF0C,CAArC;;AAKP,OAAO,IAAMC,8BAA8BV,eACzCQ,4BADyC,EAEzC;AAAA,SAASG,OAAOC,IAAP,CAAYH,KAAZ,CAAT;AAAA,CAFyC,CAApC;;AAKP,IAAMI,oBAAoBb,eACxBE,cADwB,EAExB;AAAA,SAAUE,OAAOU,SAAjB;AAAA,CAFwB,CAA1B;;AAKA,OAAO,IAAMC,2BAA2Bf,eACtCa,iBADsC,EAEtC;AAAA,SAAOG,KAAKA,GAAGC,GAAR,GAAc,KAArB;AAAA,CAFsC,CAAjC;;AAKP,OAAO,IAAMC,gBAAgBlB,eAC3BE,cAD2B,EAE3B;AAAA,SAAUE,OAAOe,KAAjB;AAAA,CAF2B,CAAtB;;AAKP,OAAO,IAAMC,eAAenB,QAAQ;AAAA,SAAYD,eAC9CkB,aAD8C,EAE9C;AAAA,WAASC,MAAME,QAAN,CAAT;AAAA,GAF8C,CAAZ;AAAA,CAAR,CAArB","file":"configSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash/memoize';\n\nexport const configSelector = state => state.config;\n\nexport const requestOptionsSelector = createSelector(\n  configSelector,\n  (config) => {\n    const options = {};\n    if (config.apiUrl) {\n      options.apiUrl = config.apiUrl;\n    }\n    return options;\n  },\n);\n\nexport const availableEmojiImagesSelector = createSelector(\n  configSelector,\n  config => config.emoji || {},\n);\n\nexport const availableEmojiNamesSelector = createSelector(\n  availableEmojiImagesSelector,\n  emoji => Object.keys(emoji),\n);\n\nconst reCaptchaSelector = createSelector(\n  configSelector,\n  config => config.recaptcha,\n);\n\nexport const reCaptchaSiteKeySelector = createSelector(\n  reCaptchaSelector,\n  rc => (rc ? rc.key : false),\n);\n\nexport const rolesSelector = createSelector(\n  configSelector,\n  config => config.roles,\n);\n\nexport const roleSelector = memoize(roleName => createSelector(\n  rolesSelector,\n  roles => roles[roleName],\n));\n"]}