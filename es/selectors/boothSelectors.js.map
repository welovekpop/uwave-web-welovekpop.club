{"version":3,"sources":["selectors/boothSelectors.js"],"names":["createSelector","isPreviewMediaDialogOpenSelector","isMutedSelector","volumeSelector","currentTimeSelector","currentUserSelector","usersSelector","baseSelector","state","booth","historyIDSelector","historyID","mediaSelector","media","startTimeSelector","startTime","mediaDurationSelector","end","start","endTimeSelector","duration","timeElapsedSelector","currentTime","Math","max","timeRemainingSelector","elapsed","mediaProgressSelector","min","djSelector","users","djID","isCurrentDJSelector","dj","me","_id","ROLE_MODERATOR","canSkipSelector","isCurrentDJ","user","role","playbackVolumeSelector","volume","isMuted","isPreviewMediaDialogOpen"],"mappings":"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","file":"boothSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\n\nimport { isPreviewMediaDialogOpenSelector } from './dialogSelectors';\nimport { isMutedSelector, volumeSelector } from './settingSelectors';\nimport { currentTimeSelector } from './timeSelectors';\nimport { currentUserSelector, usersSelector } from './userSelectors';\n\nconst baseSelector = state => state.booth;\n\nexport const historyIDSelector = createSelector(baseSelector, booth => booth.historyID);\nexport const mediaSelector = createSelector(baseSelector, booth => booth.media);\nexport const startTimeSelector = createSelector(baseSelector, booth => booth.startTime || 0);\n\nexport const mediaDurationSelector = createSelector(\n  mediaSelector,\n  media => (media ? media.end - media.start : 0)\n);\n\nexport const endTimeSelector = createSelector(\n  startTimeSelector,\n  mediaDurationSelector,\n  (startTime, duration) => startTime + (duration * 1000) || 0\n);\n\nexport const timeElapsedSelector = createSelector(\n  startTimeSelector,\n  currentTimeSelector,\n  // in seconds! because media duration is in seconds, too.\n  (startTime, currentTime) => (startTime ? Math.max((currentTime - startTime) / 1000, 0) : 0)\n);\n\nexport const timeRemainingSelector = createSelector(\n  mediaDurationSelector,\n  timeElapsedSelector,\n  (duration, elapsed) => (duration > 0 ? duration - elapsed : 0)\n);\n\nexport const mediaProgressSelector = createSelector(\n  mediaDurationSelector,\n  timeElapsedSelector,\n  (duration, elapsed) => (\n    duration\n      // Ensure that the result is between 0 and 1\n      ? Math.max(0, Math.min(1, elapsed / duration))\n      : 0\n  )\n);\n\nexport const djSelector = createSelector(\n  baseSelector,\n  usersSelector,\n  (booth, users) => users[booth.djID]\n);\n\nexport const isCurrentDJSelector = createSelector(\n  djSelector,\n  currentUserSelector,\n  (dj, me) => (\n    dj && me ? dj._id === me._id : false\n  )\n);\n\n// TODO use a permissions-based system instead of role IDs:\n// \"user.can('booth.skip')\"\nconst ROLE_MODERATOR = 2;\nexport const canSkipSelector = createSelector(\n  historyIDSelector,\n  isCurrentDJSelector,\n  currentUserSelector,\n  (historyID, isCurrentDJ, user) => {\n    if (!historyID || !user) {\n      return false;\n    }\n    return isCurrentDJ || user.role >= ROLE_MODERATOR;\n  }\n);\n\nexport const playbackVolumeSelector = createSelector(\n  volumeSelector,\n  isMutedSelector,\n  isPreviewMediaDialogOpenSelector,\n  (volume, isMuted, isPreviewMediaDialogOpen) =>\n    (isMuted || isPreviewMediaDialogOpen ? 0 : volume)\n);\n"]}