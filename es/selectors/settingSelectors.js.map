{"version":3,"sources":["selectors/settingSelectors.js"],"names":["find","createSelector","getMuiTheme","availableLanguages","getAvailableLanguage","languages","indexOf","lang","getDefaultLanguage","window","navigator","browserLanguage","settingsBaseSelector","state","settings","themeSelector","theme","muiThemeSelector","volumeSelector","volume","isMutedSelector","muted","languageSelector","defaultLanguage","language","videoSizeSelector","videoSize","settingsSelector","base","notificationSettingsSelector","notifications"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,kBAAT,QAAmC,WAAnC;;AAEA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AACvC,SAAOL,KAAKK,SAAL,EAAgB;AAAA,WACrBF,mBAAmBG,OAAnB,CAA2BC,IAA3B,MAAqC,CAAC,CADjB;AAAA,GAAhB,CAAP;AAGD;;AAED,SAASC,kBAAT,GAA8B;AAC5B,MAAI,QAAOC,MAAP,yCAAOA,MAAP,OAAkB,QAAlB,IAA8BA,OAAOC,SAArC,IAAkDD,OAAOC,SAAP,CAAiBL,SAAvE,EAAkF;AAChF,QAAMM,kBAAkBP,qBAAqBK,OAAOC,SAAP,CAAiBL,SAAtC,CAAxB;AACA,QAAIM,eAAJ,EAAqB;AACnB,aAAOA,eAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,IAAMC,uBAAuB,SAAvBA,oBAAuB;AAAA,SAASC,MAAMC,QAAf;AAAA,CAA7B;;AAEA,OAAO,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,SAASF,MAAMG,KAAf;AAAA,CAAtB;;AAEP,OAAO,IAAMC,mBAAmBhB,eAC9Bc,aAD8B,EAE9B;AAAA,SAASb,YAAYc,KAAZ,CAAT;AAAA,CAF8B,CAAzB;;AAKP,OAAO,IAAME,iBAAiBjB,eAC5BW,oBAD4B,EAE5B;AAAA,SAAYE,SAASK,MAArB;AAAA,CAF4B,CAAvB;;AAKP,OAAO,IAAMC,kBAAkBnB,eAC7BW,oBAD6B,EAE7B;AAAA,SAAYE,SAASO,KAArB;AAAA,CAF6B,CAAxB;;AAKP,OAAO,IAAMC,mBAAmBrB,eAC9BW,oBAD8B,EAE9BJ,kBAF8B,EAG9B,UAACM,QAAD,EAAWS,eAAX;AAAA,SAA+BT,SAASU,QAAT,IAAqBD,eAApD;AAAA,CAH8B,CAAzB;;AAMP,OAAO,IAAME,oBAAoBxB,eAC/BW,oBAD+B,EAE/B;AAAA,SAAYE,SAASY,SAArB;AAAA,CAF+B,CAA1B;;AAKP;AACA;AACA,OAAO,IAAMC,mBAAmB1B,eAC9BW,oBAD8B,EAE9BM,cAF8B,EAG9BE,eAH8B,EAI9BK,iBAJ8B,EAK9BH,gBAL8B,EAM9B,UAACM,IAAD,EAAOT,MAAP,EAAeE,KAAf,EAAsBK,SAAtB,EAAiCF,QAAjC;AAAA,sBACKI,IADL;AAEET,kBAFF;AAGEE,gBAHF;AAIEK,wBAJF;AAKEF;AALF;AAAA,CAN8B,CAAzB;;AAeP,OAAO,IAAMK,+BAA+B5B,eAC1C0B,gBAD0C,EAE1C;AAAA,SAAYb,SAASgB,aAArB;AAAA,CAF0C,CAArC","file":"settingSelectors.js","sourcesContent":["/* global window */\nimport find from 'array-find';\nimport { createSelector } from 'reselect';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport { availableLanguages } from '../locale';\n\nfunction getAvailableLanguage(languages) {\n  return find(languages, lang => (\n    availableLanguages.indexOf(lang) !== -1\n  ));\n}\n\nfunction getDefaultLanguage() {\n  if (typeof window === 'object' && window.navigator && window.navigator.languages) {\n    const browserLanguage = getAvailableLanguage(window.navigator.languages);\n    if (browserLanguage) {\n      return browserLanguage;\n    }\n  }\n  return 'en';\n}\n\nconst settingsBaseSelector = state => state.settings;\n\nexport const themeSelector = state => state.theme;\n\nexport const muiThemeSelector = createSelector(\n  themeSelector,\n  theme => getMuiTheme(theme)\n);\n\nexport const volumeSelector = createSelector(\n  settingsBaseSelector,\n  settings => settings.volume\n);\n\nexport const isMutedSelector = createSelector(\n  settingsBaseSelector,\n  settings => settings.muted\n);\n\nexport const languageSelector = createSelector(\n  settingsBaseSelector,\n  getDefaultLanguage,\n  (settings, defaultLanguage) => settings.language || defaultLanguage\n);\n\nexport const videoSizeSelector = createSelector(\n  settingsBaseSelector,\n  settings => settings.videoSize\n);\n\n// Settings with selected values (from selectors above) rather than \"saved\"\n// values (from localStorage).\nexport const settingsSelector = createSelector(\n  settingsBaseSelector,\n  volumeSelector,\n  isMutedSelector,\n  videoSizeSelector,\n  languageSelector,\n  (base, volume, muted, videoSize, language) => ({\n    ...base,\n    volume,\n    muted,\n    videoSize,\n    language\n  })\n);\n\nexport const notificationSettingsSelector = createSelector(\n  settingsSelector,\n  settings => settings.notifications\n);\n"]}