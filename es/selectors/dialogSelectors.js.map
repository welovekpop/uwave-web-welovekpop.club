{"version":3,"sources":["selectors/dialogSelectors.js"],"names":["assign","createSelector","reCaptchaSiteKeySelector","volumeSelector","authErrorSelector","supportsSocialAuthSelector","baseSelector","state","dialogs","merge","dialog","payload","open","loginDialogSelector","error","siteKey","supportsSocialAuth","login","useReCaptcha","reCaptchaSiteKey","editMediaDialogSelector","editMedia","previewMediaDialogSelector","volume","previewMedia","isPreviewMediaDialogOpenSelector"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,eAAnB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,iBAAT,EAA4BC,0BAA5B,QAA8D,iBAA9D;;AAEA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAASC,MAAMC,OAAf;AAAA,CAArB;;AAEA,IAAMC,QAAQ,SAARA,KAAQ;AAAA,sBAAgBC,OAAOC,OAAvB,IAAgCC,MAAMF,OAAOE,IAA7C;AAAA,CAAd;;AAEA,OAAO,IAAMC,sBAAsBZ,eACjCK,YADiC,EAEjCF,iBAFiC,EAGjCF,wBAHiC,EAIjCG,0BAJiC,EAKjC,UAACG,OAAD,EAAUM,KAAV,EAAiBC,OAAjB,EAA0BC,kBAA1B;AAAA,SAAiDhB,OAAOS,MAAMD,QAAQS,KAAd,CAAP,EAA6B;AAC5EH,gBAD4E;AAE5EI,kBAAc,CAAC,CAACH,OAF4D;AAG5EI,sBAAkBJ,WAAW,IAH+C;AAI5EC;AAJ4E,GAA7B,CAAjD;AAAA,CALiC,CAA5B;;AAaP,OAAO,IAAMI,0BAA0BnB,eACrCK,YADqC,EAErC;AAAA,SAAWG,MAAMD,QAAQa,SAAd,CAAX;AAAA,CAFqC,CAAhC;;AAKP,OAAO,IAAMC,6BAA6BrB,eACxCK,YADwC,EAExCH,cAFwC,EAGxC,UAACK,OAAD,EAAUe,MAAV;AAAA,sBACKd,MAAMD,QAAQgB,YAAd,CADL;AAEED;AAFF;AAAA,CAHwC,CAAnC;;AASP,OAAO,IAAME,mCAAmCxB,eAC9CK,YAD8C,EAE9C;AAAA,SAAWE,QAAQgB,YAAR,IAAwB,CAAC,CAAChB,QAAQgB,YAAR,CAAqBZ,IAA1D;AAAA,CAF8C,CAAzC","file":"dialogSelectors.js","sourcesContent":["import assign from 'object-assign';\nimport { createSelector } from 'reselect';\nimport { reCaptchaSiteKeySelector } from './configSelectors';\nimport { volumeSelector } from './settingSelectors';\nimport { authErrorSelector, supportsSocialAuthSelector } from './userSelectors';\n\nconst baseSelector = state => state.dialogs;\n\nconst merge = dialog => ({ ...dialog.payload, open: dialog.open });\n\nexport const loginDialogSelector = createSelector(\n  baseSelector,\n  authErrorSelector,\n  reCaptchaSiteKeySelector,\n  supportsSocialAuthSelector,\n  (dialogs, error, siteKey, supportsSocialAuth) => assign(merge(dialogs.login), {\n    error,\n    useReCaptcha: !!siteKey,\n    reCaptchaSiteKey: siteKey || null,\n    supportsSocialAuth,\n  }),\n);\n\nexport const editMediaDialogSelector = createSelector(\n  baseSelector,\n  dialogs => merge(dialogs.editMedia),\n);\n\nexport const previewMediaDialogSelector = createSelector(\n  baseSelector,\n  volumeSelector,\n  (dialogs, volume) => ({\n    ...merge(dialogs.previewMedia),\n    volume,\n  }),\n);\n\nexport const isPreviewMediaDialogOpenSelector = createSelector(\n  baseSelector,\n  dialogs => dialogs.previewMedia && !!dialogs.previewMedia.open,\n);\n"]}