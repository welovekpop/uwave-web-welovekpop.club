{"version":3,"sources":["containers/ChatInput.js"],"names":["React","PropTypes","bindActionCreators","compose","withProps","connect","withBus","createStructuredSelector","inputMessage","availableGroupMentionsSelector","emojiCompletionsSelector","userListSelector","isLoggedInSelector","ChatInput","mapStateToProps","isLoggedIn","mentionableUsers","mentionableGroups","availableEmoji","mapDispatchToProps","onSend","dispatch","enhance","bus","onScroll","emit","direction","ChatInputContainer","props","propTypes","bool","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,YADF,QAEO,+BAFP;AAGA,SACEC,8BADF,EAEEC,wBAFF,QAGO,4BAHP;AAIA,SACEC,gBADF,EAEEC,kBAFF,QAGO,4BAHP;;AAKA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,IAAMC,kBAAkBP,yBAAyB;AAC/CQ,cAAYH,kBADmC;AAE/CI,oBAAkBL,gBAF6B;AAG/CM,qBAAmBR,8BAH4B;AAI/CS,kBAAgBR;AAJ+B,CAAzB,CAAxB;;AAOA,IAAMS,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYjB,mBAAmB;AACxDkB,YAAQZ;AADgD,GAAnB,EAEpCa,QAFoC,CAAZ;AAAA,CAA3B;;AAIA,IAAMC,UAAUnB,QACdE,QAAQS,eAAR,EAAyBK,kBAAzB,CADc,EAEdb,SAFc,EAGdF,UAAU;AAAA,MAAGmB,GAAH,QAAGA,GAAH;AAAA,SAAc;AACtBC,cAAU;AAAA,aAAaD,IAAIE,IAAJ,CAAS,aAAT,EAAwBC,SAAxB,CAAb;AAAA;AADY,GAAd;AAAA,CAAV,CAHc,CAAhB;;;;AAQA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,MAAGZ,UAAH,SAAGA,UAAH;AAAA,MAAkBa,KAAlB;;AAAA,SACzBb,aACI,oBAAC,SAAD,EAAea,KAAf,CADJ,QADyB;AAAA,CAA3B;;AAMAD,mBAAmBE,SAAnB,2CAA+B;AAC7Bd,cAAYd,UAAU6B,IAAV,CAAeC;AADE,CAA/B;;AAIA,eAAeT,QAAQK,kBAAR,CAAf","file":"ChatInput.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport compose from 'recompose/compose';\nimport withProps from 'recompose/withProps';\nimport { connect } from 'react-redux';\nimport { withBus } from 'react-bus';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  inputMessage\n} from '../actions/ChatActionCreators';\nimport {\n  availableGroupMentionsSelector,\n  emojiCompletionsSelector\n} from '../selectors/chatSelectors';\nimport {\n  userListSelector,\n  isLoggedInSelector\n} from '../selectors/userSelectors';\n\nimport ChatInput from '../components/Chat/Input';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoggedIn: isLoggedInSelector,\n  mentionableUsers: userListSelector,\n  mentionableGroups: availableGroupMentionsSelector,\n  availableEmoji: emojiCompletionsSelector\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onSend: inputMessage\n}, dispatch);\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withBus(),\n  withProps(({ bus }) => ({\n    onScroll: direction => bus.emit('chat:scroll', direction)\n  }))\n);\n\nconst ChatInputContainer = ({ isLoggedIn, ...props }) => (\n  isLoggedIn\n    ? <ChatInput {...props} />\n    : <span />\n);\n\nChatInputContainer.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n};\n\nexport default enhance(ChatInputContainer);\n"]}