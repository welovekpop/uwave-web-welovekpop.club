{"version":3,"sources":["containers/EditMediaDialog.js"],"names":["React","PropTypes","bindActionCreators","connect","TransitionGroup","updateMedia","closeEditMediaDialog","editMediaDialogSelector","EditMediaDialog","mapDispatchToProps","onUpdateMedia","onCloseDialog","dispatch","DIALOG_ANIMATION_DURATION","enhance","EditMediaDialogContainer","playlistID","media","props","_id","update","propTypes","string","object","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAEA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYP,mBAAmB;AACxDQ,mBAAeL,WADyC;AAExDM,mBAAeL;AAFyC,GAAnB,EAGpCM,QAHoC,CAAZ;AAAA,CAA3B;;AAKA,IAAMC,4BAA4B,GAAlC,C,CAAuC;;AAEvC,IAAMC,UAAUX,QAAQI,uBAAR,EAAiCE,kBAAjC,CAAhB;;AAEA,IAAMM,2BAA2B,SAA3BA,wBAA2B;AAAA,MAC/BL,aAD+B,QAC/BA,aAD+B;AAAA,MAE/BM,UAF+B,QAE/BA,UAF+B;AAAA,MAG/BC,KAH+B,QAG/BA,KAH+B;AAAA,MAI5BC,KAJ4B;;AAAA,cAM9B,eAN8B;AAAA,oBAOd,QAPc;AAAA,4BAQLL,yBARK;AAAA,4BASLA;AATK,aAW5BI,SACC,oBAAC,eAAD,eACMC,KADN;AAEE,WAAOD,KAFT;AAGE,mBAAe;AAAA,aAAUP,cAAcM,UAAd,EAA0BC,MAAME,GAAhC,EAAqCC,MAArC,CAAV;AAAA;AAHjB,KAZ2B;AAAA,CAAjC;;AAqBAL,yBAAyBM,SAAzB,2CAAqC;AACnCL,cAAYf,UAAUqB,MADa;AAEnCL,SAAOhB,UAAUsB,MAFkB;AAGnCb,iBAAeT,UAAUuB,IAAV,CAAeC;AAHK,CAArC;;AAMA,eAAeX,QAAQC,wBAAR,CAAf","file":"EditMediaDialog.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport TransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { updateMedia } from '../actions/PlaylistActionCreators';\nimport { closeEditMediaDialog } from '../actions/DialogActionCreators';\n\nimport { editMediaDialogSelector } from '../selectors/dialogSelectors';\nimport EditMediaDialog from '../components/Dialogs/EditMediaDialog';\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onUpdateMedia: updateMedia,\n  onCloseDialog: closeEditMediaDialog\n}, dispatch);\n\nconst DIALOG_ANIMATION_DURATION = 450; // ms\n\nconst enhance = connect(editMediaDialogSelector, mapDispatchToProps);\n\nconst EditMediaDialogContainer = ({\n  onUpdateMedia,\n  playlistID,\n  media,\n  ...props\n}) => (\n  <TransitionGroup\n    transitionName=\"Dialog\"\n    transitionEnterTimeout={DIALOG_ANIMATION_DURATION}\n    transitionLeaveTimeout={DIALOG_ANIMATION_DURATION}\n  >\n    {media && (\n      <EditMediaDialog\n        {...props}\n        media={media}\n        onEditedMedia={update => onUpdateMedia(playlistID, media._id, update)}\n      />\n    )}\n  </TransitionGroup>\n);\n\nEditMediaDialogContainer.propTypes = {\n  playlistID: PropTypes.string,\n  media: PropTypes.object,\n  onUpdateMedia: PropTypes.func.isRequired\n};\n\nexport default enhance(EditMediaDialogContainer);\n"]}