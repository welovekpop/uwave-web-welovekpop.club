{"version":3,"sources":["containers/SettingsManager.js"],"names":["bindActionCreators","connect","createStructuredSelector","set","setSetting","setLanguage","doChangeUsername","logout","currentUserSelector","settingsSelector","createLazyOverlay","mapStateToProps","settings","user","mapDispatchToProps","onSettingChange","onChangeUsername","onChangeLanguage","onLogout","dispatch","enhance","SettingsManager","loader","title","t"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,OAAOC,UADT,EAEEC,WAFF,QAGO,mCAHP;AAIA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,IAAMC,kBAAkBT,yBAAyB;AAC/CU,YAAUH,gBADqC;AAE/CI,QAAML;AAFyC,CAAzB,CAAxB;;AAKA,IAAMM,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYd,mBAAmB;AACxDe,qBAAiBX,UADuC;AAExDY,sBAAkBV,gBAFsC;AAGxDW,sBAAkBZ,WAHsC;AAIxDa,cAAUX;AAJ8C,GAAnB,EAKpCY,QALoC,CAAZ;AAAA,CAA3B;;AAOA,IAAMC,UAAUnB,QAAQU,eAAR,EAAyBG,kBAAzB,CAAhB;AAEA,IAAMO,kBAAkBX,kBAAkB;AACxCY,UAAQ;AAAA,WAAM,OAAO;AAAgC;AAAvC,KAAN;AAAA,GADgC;AAExCC,SAAO;AAAA,WAAKC,EAAE,gBAAF,CAAL;AAAA;AAFiC,CAAlB,CAAxB;AAKA,eAAeJ,QAAQC,eAAR,CAAf","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  set as setSetting,\n  setLanguage,\n} from '../actions/SettingsActionCreators';\nimport { doChangeUsername } from '../actions/UserActionCreators';\nimport { logout } from '../actions/LoginActionCreators';\nimport { currentUserSelector } from '../selectors/userSelectors';\nimport { settingsSelector } from '../selectors/settingSelectors';\nimport createLazyOverlay from '../components/LazyOverlay';\n\nconst mapStateToProps = createStructuredSelector({\n  settings: settingsSelector,\n  user: currentUserSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onSettingChange: setSetting,\n  onChangeUsername: doChangeUsername,\n  onChangeLanguage: setLanguage,\n  onLogout: logout,\n}, dispatch);\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nconst SettingsManager = createLazyOverlay({\n  loader: () => import('../components/SettingsManager' /* webpackChunkName: \"settings\" */),\n  title: t => t('settings.title'),\n});\n\nexport default enhance(SettingsManager);\n"],"file":"SettingsManager.js"}