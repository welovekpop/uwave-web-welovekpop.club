{"version":3,"sources":["containers/SearchResultsPanel.js"],"names":["bindActionCreators","connect","createStructuredSelector","openPreviewMediaDialog","addMediaMenu","searchQuerySelector","searchResultsSelector","searchLoadingStateSelector","SearchResults","mapStateToProps","query","results","loadingState","selectionOrOne","media","selection","isSelected","get","onOpenAddMediaMenu","position","mapDispatchToProps","onOpenPreviewMediaDialog","dispatch"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,sBAAT,QAAuC,iCAAvC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AAEA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,0BAHF,QAIO,8BAJP;AAKA,OAAOC,aAAP,MAA0B,6CAA1B;AAEA,IAAMC,kBAAkBP,yBAAyB;AAC/CQ,SAAOL,mBADwC;AAE/CM,WAASL,qBAFsC;AAG/CM,gBAAcL;AAHiC,CAAzB,CAAxB;;AAMA,IAAMM,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,SAAR,EAAsB;AAC3C,MAAIA,UAAUC,UAAV,CAAqBF,KAArB,CAAJ,EAAiC;AAC/B,WAAOC,UAAUE,GAAV,EAAP;AACD;;AACD,SAAO,CAACH,KAAD,CAAP;AACD,CALD;;AAOA,IAAMI,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWL,KAAX,EAAkBC,SAAlB;AAAA,SACzBX,aAAaS,eAAeC,KAAf,EAAsBC,SAAtB,CAAb,EAA+CI,QAA/C,CADyB;AAAA,CAA3B;;AAGA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYpB,mBAAmB;AACxDkB,0CADwD;AAExDG,8BAA0BlB;AAF8B,GAAnB,EAGpCmB,QAHoC,CAAZ;AAAA,CAA3B;;AAKA,eAAerB,QAAQQ,eAAR,EAAyBW,kBAAzB,EAA6CZ,aAA7C,CAAf","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\n\nimport {\n  searchQuerySelector,\n  searchResultsSelector,\n  searchLoadingStateSelector,\n} from '../selectors/searchSelectors';\nimport SearchResults from '../components/PlaylistManager/SearchResults';\n\nconst mapStateToProps = createStructuredSelector({\n  query: searchQuerySelector,\n  results: searchResultsSelector,\n  loadingState: searchLoadingStateSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n"],"file":"SearchResultsPanel.js"}