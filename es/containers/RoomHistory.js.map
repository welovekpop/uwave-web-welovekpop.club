{"version":3,"sources":["containers/RoomHistory.js"],"names":["bindActionCreators","connect","createStructuredSelector","withProps","openPreviewMediaDialog","addMediaMenu","roomHistoryWithVotesSelector","Overlay","createLazyOverlay","selectionOrOne","media","selection","isSelected","get","map","item","mapStateToProps","onOpenAddMediaMenu","position","mapDispatchToProps","onOpenPreviewMediaDialog","dispatch","enhance","RoomHistory","loader","title","t","OverlayComponent","direction"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,4BAAT,QAA6C,mCAA7C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,SAAR,EAAsB;AAC3C;AACA,MAAIA,UAAUC,UAAV,CAAqBF,KAArB,CAAJ,EAAiC;AAC/B,WAAOC,UAAUE,GAAV,GAAgBC,GAAhB,CAAoB;AAAA,aAAQC,KAAKL,KAAb;AAAA,KAApB,CAAP;AACD;;AACD,SAAO,CAACA,MAAMA,KAAP,CAAP;AACD,CAND;;AAQA,IAAMM,kBAAkBd,yBAAyB;AAC/CQ,SAAOJ;AADwC,CAAzB,CAAxB;;AAIA,IAAMW,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAWR,KAAX,EAAkBC,SAAlB;AAAA,SACzBN,aAAaI,eAAeC,KAAf,EAAsBC,SAAtB,CAAb,EAA+CO,QAA/C,CADyB;AAAA,CAA3B;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYnB,mBAAmB;AACxDiB,0CADwD;AAExDG,8BAA0BhB;AAF8B,GAAnB,EAGpCiB,QAHoC,CAAZ;AAAA,CAA3B;;AAKA,IAAMC,UAAUrB,QAAQe,eAAR,EAAyBG,kBAAzB,CAAhB;AAEA,IAAMI,cAAcf,kBAAkB;AACpCgB,UAAQ;AAAA,WAAM,OAAO;AAA4B;AAAnC,KAAN;AAAA,GAD4B;AAEpCC,SAAO;AAAA,WAAKC,EAAE,eAAF,CAAL;AAAA,GAF6B;AAGpCC,oBAAkBxB,UAAU;AAC1ByB,eAAW;AADe,GAAV,EAEfrB,OAFe;AAHkB,CAAlB,CAApB;AAQA,eAAee,QAAQC,WAAR,CAAf","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport withProps from 'recompose/withProps';\nimport { openPreviewMediaDialog } from '../actions/DialogActionCreators';\nimport { addMediaMenu } from '../actions/PlaylistActionCreators';\nimport { roomHistoryWithVotesSelector } from '../selectors/roomHistorySelectors';\nimport Overlay from '../components/Overlay';\nimport createLazyOverlay from '../components/LazyOverlay';\n\nconst selectionOrOne = (media, selection) => {\n  // History entries store the played media on their `.media` property\n  if (selection.isSelected(media)) {\n    return selection.get().map(item => item.media);\n  }\n  return [media.media];\n};\n\nconst mapStateToProps = createStructuredSelector({\n  media: roomHistoryWithVotesSelector,\n});\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nconst RoomHistory = createLazyOverlay({\n  loader: () => import('../components/RoomHistory' /* webpackChunkName: \"history\" */),\n  title: t => t('history.title'),\n  OverlayComponent: withProps({\n    direction: 'top',\n  })(Overlay),\n});\n\nexport default enhance(RoomHistory);\n"],"file":"RoomHistory.js"}