{"version":3,"sources":["containers/AddToPlaylistMenu.js"],"names":["React","PropTypes","bindActionCreators","connect","createStructuredSelector","createPlaylist","addMedia","closeAddMediaMenu","favoriteMedia","isFavoriteSelector","isOpenSelector","positionSelector","mediaSelector","historyIDSelector","playlistsSelector","AddToPlaylistMenu","mapDispatchToProps","onClose","onCreatePlaylist","onAddMedia","onFavoriteMedia","dispatch","mapStateToProps","isFavorite","isOpen","position","playlists","media","historyID","AddToPlaylistMenuContainer","onSelect","playlist","propTypes","bool","shape","x","number","isRequired","y","arrayOf","object","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SACEC,cADF,EAEEC,QAFF,EAGEC,iBAHF,QAIO,mCAJP;AAKA,SAASC,aAAT,QAA8B,+BAA9B;AAEA,SACEC,kBADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,aAJF,EAKEC,iBALF,QAMO,yCANP;AAOA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAEA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYd,mBAAmB;AACxDe,aAASV,iBAD+C;AAExDW,sBAAkBb,cAFsC;AAGxDc,gBAAYb,QAH4C;AAIxDc,qBAAiBZ;AAJuC,GAAnB,EAKpCa,QALoC,CAAZ;AAAA,CAA3B;;AAOA,IAAMC,kBAAkBlB,yBAAyB;AAC/CmB,cAAYd,kBADmC;AAE/Ce,UAAQd,cAFuC;AAG/Ce,YAAUd,gBAHqC;AAI/Ce,aAAWZ,iBAJoC;AAK/Ca,SAAOf,aALwC;AAM/CgB,aAAWf;AANoC,CAAzB,CAAxB;;;;AAsBW,gB;;AAbX,IAAMgB,6BAA6B,SAA7BA,0BAA6B,OAW7B;AAAA,MAVJL,MAUI,QAVJA,MAUI;AAAA,MATJC,QASI,QATJA,QASI;AAAA,MARJF,UAQI,QARJA,UAQI;AAAA,MAPJG,SAOI,QAPJA,SAOI;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJV,gBAII,QAJJA,gBAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJH,OACI,QADJA,OACI;;AACJ,MAAI,CAACO,MAAL,EAAa;AACX;AACD;;AAED,MAAMM,WAAW,SAAXA,QAAW;AAAA,WACfP,aACIH,gBAAgBW,QAAhB,EAA0BH,SAA1B,CADJ,GAEIT,WAAWY,QAAX,EAAqBJ,KAArB,CAHW;AAAA,GAAjB;;AAMA,SACE,KAAC,iBAAD;AACE,UAAMH,MADR;AAEE,cAAUC,QAFZ;AAGE,eAAWC,SAHb;AAIE,aAAST,OAJX;AAKE,sBAAkBC,gBALpB;AAME,cAAUY;AANZ,IADF;AAUD,CAhCD;;AAkCAD,2BAA2BG,SAA3B,2CAAuC;AACrCT,cAAYtB,UAAUgC,IADe;AAErCT,UAAQvB,UAAUgC,IAFmB;AAGrCR,YAAUxB,UAAUiC,KAAV,CAAgB;AACxBC,OAAGlC,UAAUmC,MAAV,CAAiBC,UADI;AAExBC,OAAGrC,UAAUmC,MAAV,CAAiBC;AAFI,GAAhB,CAH2B;AAOrCX,aAAWzB,UAAUsC,OAAV,CAAkBtC,UAAUuC,MAA5B,CAP0B;AASrCb,SAAO1B,UAAUsC,OAAV,CAAkBtC,UAAUuC,MAA5B,CAT8B;AAUrCZ,aAAW3B,UAAUwC,MAVgB;AAYrCxB,WAAShB,UAAUyC,IAAV,CAAeL,UAZa;AAarCnB,oBAAkBjB,UAAUyC,IAAV,CAAeL,UAbI;AAcrClB,cAAYlB,UAAUyC,IAAV,CAAeL,UAdU;AAerCjB,mBAAiBnB,UAAUyC,IAAV,CAAeL;AAfK,CAAvC;AAkBA,eAAelC,QAAQmB,eAAR,EAAyBN,kBAAzB,EAA6Ca,0BAA7C,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  createPlaylist,\n  addMedia,\n  closeAddMediaMenu,\n} from '../actions/PlaylistActionCreators';\nimport { favoriteMedia } from '../actions/VoteActionCreators';\n\nimport {\n  isFavoriteSelector,\n  isOpenSelector,\n  positionSelector,\n  mediaSelector,\n  historyIDSelector,\n} from '../selectors/addToPlaylistMenuSelectors';\nimport { playlistsSelector } from '../selectors/playlistSelectors';\nimport AddToPlaylistMenu from '../components/AddToPlaylistMenu';\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onClose: closeAddMediaMenu,\n  onCreatePlaylist: createPlaylist,\n  onAddMedia: addMedia,\n  onFavoriteMedia: favoriteMedia,\n}, dispatch);\n\nconst mapStateToProps = createStructuredSelector({\n  isFavorite: isFavoriteSelector,\n  isOpen: isOpenSelector,\n  position: positionSelector,\n  playlists: playlistsSelector,\n  media: mediaSelector,\n  historyID: historyIDSelector,\n});\n\nconst AddToPlaylistMenuContainer = ({\n  isOpen,\n  position,\n  isFavorite,\n  playlists,\n  media,\n  historyID,\n  onCreatePlaylist,\n  onAddMedia,\n  onFavoriteMedia,\n  onClose,\n}) => {\n  if (!isOpen) {\n    return <span />;\n  }\n\n  const onSelect = playlist => (\n    isFavorite\n      ? onFavoriteMedia(playlist, historyID)\n      : onAddMedia(playlist, media)\n  );\n\n  return (\n    <AddToPlaylistMenu\n      open={isOpen}\n      position={position}\n      playlists={playlists}\n      onClose={onClose}\n      onCreatePlaylist={onCreatePlaylist}\n      onSelect={onSelect}\n    />\n  );\n};\n\nAddToPlaylistMenuContainer.propTypes = {\n  isFavorite: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  position: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n  playlists: PropTypes.arrayOf(PropTypes.object),\n\n  media: PropTypes.arrayOf(PropTypes.object),\n  historyID: PropTypes.string,\n\n  onClose: PropTypes.func.isRequired,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onAddMedia: PropTypes.func.isRequired,\n  onFavoriteMedia: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToPlaylistMenuContainer);\n"],"file":"AddToPlaylistMenu.js"}