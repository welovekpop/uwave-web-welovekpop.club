{"version":3,"sources":["containers/HeaderBar.js"],"names":["PropTypes","bindActionCreators","connect","compose","getContext","mapProps","except","createStructuredSelector","setVolume","mute","unmute","toggleRoomHistory","toggleAbout","djSelector","mediaSelector","mediaProgressSelector","timeRemainingSelector","volumeSelector","isMutedSelector","HeaderBar","mapStateToProps","mediaProgress","mediaTimeRemaining","media","dj","volume","muted","hasAboutPage","state","props","uwave","getAboutPageComponent","mapDispatchToProps","onVolumeChange","onVolumeMute","onVolumeUnmute","onToggleRoomHistory","onToggleAboutOverlay","dispatch","object"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,mCAAxC;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,kCAA/C;;AAEA,SACEC,UADF,EAEEC,aAFF,EAGEC,qBAHF,EAIEC,qBAJF,QAKO,6BALP;AAMA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,+BAAhD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,kBAAkBb,yBAAyB;AAC/Cc,iBAAeN,qBADgC;AAE/CO,sBAAoBN,qBAF2B;AAG/CO,SAAOT,aAHwC;AAI/CU,MAAIX,UAJ2C;AAK/CY,UAAQR,cALuC;AAM/CS,SAAOR,eANwC;AAO/CS,gBAAc,sBAACC,KAAD,EAAQC,KAAR;AAAA,WACZA,MAAMC,KAAN,CAAYC,qBAAZ,OAAwC,IAD5B;AAAA;AAPiC,CAAzB,CAAxB;;AAYA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAY/B,mBAAmB;AACxDgC,oBAAgBzB,SADwC;AAExD0B,kBAAczB,IAF0C;AAGxD0B,oBAAgBzB,MAHwC;AAIxD0B,yBAAqBzB,iBAJmC;AAKxD0B,0BAAsBzB;AALkC,GAAnB,EAMpC0B,QANoC,CAAZ;AAAA,CAA3B;;AAQA,eAAenC,QACbC,WAAW,EAAE0B,OAAO9B,UAAUuC,MAAnB,EAAX,CADa,EAEbrC,QAAQkB,eAAR,EAAyBY,kBAAzB,CAFa;AAGb;AACA3B,SAAS;AAAA,SAASC,OAAOuB,KAAP,EAAc,OAAd,CAAT;AAAA,CAAT,CAJa,EAKbV,SALa,CAAf","file":"HeaderBar.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport mapProps from 'recompose/mapProps';\nimport except from 'except';\nimport { createStructuredSelector } from 'reselect';\nimport { setVolume, mute, unmute } from '../actions/PlaybackActionCreators';\nimport { toggleRoomHistory, toggleAbout } from '../actions/OverlayActionCreators';\n\nimport {\n  djSelector,\n  mediaSelector,\n  mediaProgressSelector,\n  timeRemainingSelector\n} from '../selectors/boothSelectors';\nimport { volumeSelector, isMutedSelector } from '../selectors/settingSelectors';\nimport HeaderBar from '../components/HeaderBar';\n\nconst mapStateToProps = createStructuredSelector({\n  mediaProgress: mediaProgressSelector,\n  mediaTimeRemaining: timeRemainingSelector,\n  media: mediaSelector,\n  dj: djSelector,\n  volume: volumeSelector,\n  muted: isMutedSelector,\n  hasAboutPage: (state, props) => (\n    props.uwave.getAboutPageComponent() !== null\n  )\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onVolumeChange: setVolume,\n  onVolumeMute: mute,\n  onVolumeUnmute: unmute,\n  onToggleRoomHistory: toggleRoomHistory,\n  onToggleAboutOverlay: toggleAbout\n}, dispatch);\n\nexport default compose(\n  getContext({ uwave: PropTypes.object }),\n  connect(mapStateToProps, mapDispatchToProps),\n  // Remove the \"uwave\" propâ€”it was only necessary for the selector.\n  mapProps(props => except(props, 'uwave'))\n)(HeaderBar);\n"]}