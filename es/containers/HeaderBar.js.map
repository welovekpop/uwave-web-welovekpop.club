{"version":3,"sources":["containers/HeaderBar.js"],"names":["PropTypes","bindActionCreators","connect","compose","getContext","mapProps","except","createStructuredSelector","setVolume","mute","unmute","toggleRoomHistory","toggleAbout","djSelector","mediaSelector","mediaProgressSelector","timeRemainingSelector","volumeSelector","isMutedSelector","HeaderBar","mapStateToProps","mediaProgress","mediaTimeRemaining","media","dj","volume","muted","mapDispatchToProps","onVolumeChange","onVolumeMute","onVolumeUnmute","onToggleRoomHistory","onToggleAboutOverlay","dispatch","uwave","object","props"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,mCAAxC;AACA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,kCAA/C;AAEA,SACEC,UADF,EAEEC,aAFF,EAGEC,qBAHF,EAIEC,qBAJF,QAKO,6BALP;AAMA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,+BAAhD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AAEA,IAAMC,kBAAkBb,yBAAyB;AAC/Cc,iBAAeN,qBADgC;AAE/CO,sBAAoBN,qBAF2B;AAG/CO,SAAOT,aAHwC;AAI/CU,MAAIX,UAJ2C;AAK/CY,UAAQR,cALuC;AAM/CS,SAAOR;AANwC,CAAzB,CAAxB;;AASA,IAAMS,qBAAqB,SAArBA,kBAAqB;AAAA,SAAY1B,mBAAmB;AACxD2B,oBAAgBpB,SADwC;AAExDqB,kBAAcpB,IAF0C;AAGxDqB,oBAAgBpB,MAHwC;AAIxDqB,yBAAqBpB,iBAJmC;AAKxDqB,0BAAsBpB;AALkC,GAAnB,EAMpCqB,QANoC,CAAZ;AAAA,CAA3B;;AAQA,eAAe9B,QACbC,WAAW;AAAE8B,SAAOlC,UAAUmC;AAAnB,CAAX,CADa,EAEbjC,QAAQkB,eAAR,EAAyBO,kBAAzB,CAFa,EAGb;AACAtB,SAAS;AAAA,SAASC,OAAO8B,KAAP,EAAc,OAAd,CAAT;AAAA,CAAT,CAJa,EAKbjB,SALa,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport mapProps from 'recompose/mapProps';\nimport except from 'except';\nimport { createStructuredSelector } from 'reselect';\nimport { setVolume, mute, unmute } from '../actions/PlaybackActionCreators';\nimport { toggleRoomHistory, toggleAbout } from '../actions/OverlayActionCreators';\n\nimport {\n  djSelector,\n  mediaSelector,\n  mediaProgressSelector,\n  timeRemainingSelector,\n} from '../selectors/boothSelectors';\nimport { volumeSelector, isMutedSelector } from '../selectors/settingSelectors';\nimport HeaderBar from '../components/HeaderBar';\n\nconst mapStateToProps = createStructuredSelector({\n  mediaProgress: mediaProgressSelector,\n  mediaTimeRemaining: timeRemainingSelector,\n  media: mediaSelector,\n  dj: djSelector,\n  volume: volumeSelector,\n  muted: isMutedSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onVolumeChange: setVolume,\n  onVolumeMute: mute,\n  onVolumeUnmute: unmute,\n  onToggleRoomHistory: toggleRoomHistory,\n  onToggleAboutOverlay: toggleAbout,\n}, dispatch);\n\nexport default compose(\n  getContext({ uwave: PropTypes.object }),\n  connect(mapStateToProps, mapDispatchToProps),\n  // Remove the \"uwave\" propâ€”it was only necessary for the selector.\n  mapProps(props => except(props, 'uwave')),\n)(HeaderBar);\n"],"file":"HeaderBar.js"}