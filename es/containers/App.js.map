{"version":3,"sources":["containers/App.js"],"names":["React","PropTypes","nest","connect","createStructuredSelector","MuiThemeProvider","I18nextProvider","Provider","BusProvider","Mobile","Desktop","ClockProvider","closeAll","settingsSelector","languageSelector","themeSelector","isConnectedSelector","DesktopApp","MobileApp","SimpleProviders","mapStateToProps","activeOverlay","state","isConnected","settings","language","theme","hasAboutPage","props","uwave","getAboutPageComponent","mapDispatchToProps","onCloseOverlay","enhance","AppContainer","renderApp","getChildContext","mediaSources","componentWillReceiveProps","nextProps","locale","changeLanguage","render","Component","childContextTypes","object","propTypes","isRequired","string"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,YAAYC,WAArB,QAAwC,WAAxC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,0BAAhC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,aAHF,QAIO,+BAJP;AAKA,SAASC,mBAAT,QAAoC,8BAApC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;;AAEA,IAAMC,kBAAkBjB,KAAKM,WAAL,EAAkBG,aAAlB,CAAxB;;AAEA,IAAMS,kBAAkBhB,yBAAyB;AAC/CiB,iBAAe;AAAA,WAASC,MAAMD,aAAf;AAAA,GADgC;AAE/CE,eAAaP,mBAFkC;AAG/CQ,YAAUX,gBAHqC;AAI/CY,YAAUX,gBAJqC;AAK/CY,SAAOX,aALwC;AAM/CY,gBAAc,sBAACL,KAAD,EAAQM,KAAR;AAAA,WACZA,MAAMC,KAAN,CAAYC,qBAAZ,OAAwC,IAD5B;AAAA;AANiC,CAAzB,CAAxB;;AAWA,IAAMC,qBAAqB;AACzBC,kBAAgBpB;AADS,CAA3B;;AAIA,IAAMqB,UAAU9B,QAAQiB,eAAR,EAAyBW,kBAAzB,CAAhB;;IAEMG,Y;;;;;;;;;;;;wJA2BJC,S,GAAY;AAAA,kBACT,MAAM,QADG,mBAEP,MAFO,cAGN,oBAAC,SAAD,EAAe,MAAKP,KAApB,CAHM,QAKP,OALO,cAMN,oBAAC,UAAD,EAAgB,MAAKA,KAArB,CANM;AAAA,K;;;yBAbZQ,e,8BAAkB;AAChB,WAAO;AACLC,oBAAc,KAAKT,KAAL,CAAWS,YADpB;AAELR,aAAO,KAAKD,KAAL,CAAWC;AAFb,KAAP;AAID,G;;yBAEDS,yB,sCAA0BC,S,EAAW;AACnC,QAAI,KAAKX,KAAL,CAAWH,QAAX,KAAwBc,UAAUd,QAAtC,EAAgD;AAC9C,WAAKG,KAAL,CAAWY,MAAX,CAAkBC,cAAlB,CAAiCF,UAAUd,QAA3C;AACD;AACF,G;;yBAaDiB,M,qBAAS;AACP,gBACG,gBADH;AAAA,aAC2B,KAAKd,KAAL,CAAWF;AADtC,oBAEK,eAFL;AAAA,YAE2B,KAAKE,KAAL,CAAWY;AAFtC,oBAGO,eAHP,cAIS,KAAKL,SAAL,EAJT;AASD,G;;;EAhDwBnC,MAAM2C,S;;AAA3BT,Y,CASGU,iB,GAAoB;AACzBP,gBAAcpC,UAAU4C,MADC;AAEzBhB,SAAO5B,UAAU4C;AAFQ,C;AATvBX,Y,CACGY,S,2CAAY;AACjBT,gBAAcpC,UAAU4C,MAAV,CAAiBE,UADd;AAEjBlB,SAAO5B,UAAU4C,MAFA;AAGjBpB,YAAUxB,UAAU+C,MAHH;AAIjBtB,SAAOzB,UAAU4C,MAJA;AAKjBL,UAAQvC,UAAU4C,MAAV,CAAiBE;AALR,C;;;AAkDrB,eAAed,QAAQC,YAAR,CAAf","file":"App.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport nest from 'recompose/nest';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider as BusProvider } from 'react-bus';\nimport { Mobile, Desktop } from '../components/Responsive';\nimport ClockProvider from '../components/ClockProvider';\nimport { closeAll } from '../actions/OverlayActionCreators';\nimport {\n  settingsSelector,\n  languageSelector,\n  themeSelector,\n} from '../selectors/settingSelectors';\nimport { isConnectedSelector } from '../selectors/serverSelectors';\nimport DesktopApp from '../components/App';\nimport MobileApp from '../mobile/components/App';\n\nconst SimpleProviders = nest(BusProvider, ClockProvider);\n\nconst mapStateToProps = createStructuredSelector({\n  activeOverlay: state => state.activeOverlay,\n  isConnected: isConnectedSelector,\n  settings: settingsSelector,\n  language: languageSelector,\n  theme: themeSelector,\n  hasAboutPage: (state, props) => (\n    props.uwave.getAboutPageComponent() !== null\n  ),\n});\n\nconst mapDispatchToProps = {\n  onCloseOverlay: closeAll,\n};\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nclass AppContainer extends React.Component {\n  static propTypes = {\n    mediaSources: PropTypes.object.isRequired,\n    uwave: PropTypes.object,\n    language: PropTypes.string,\n    theme: PropTypes.object,\n    locale: PropTypes.object.isRequired,\n  };\n\n  static childContextTypes = {\n    mediaSources: PropTypes.object,\n    uwave: PropTypes.object,\n  };\n\n  getChildContext() {\n    return {\n      mediaSources: this.props.mediaSources,\n      uwave: this.props.uwave,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.language !== nextProps.language) {\n      this.props.locale.changeLanguage(nextProps.language);\n    }\n  }\n\n  renderApp = () => (\n    <React.Fragment>\n      <Mobile>\n        <MobileApp {...this.props} />\n      </Mobile>\n      <Desktop>\n        <DesktopApp {...this.props} />\n      </Desktop>\n    </React.Fragment>\n  );\n\n  render() {\n    return (\n      <MuiThemeProvider theme={this.props.theme}>\n        <I18nextProvider i18n={this.props.locale}>\n          <SimpleProviders>\n            {this.renderApp()}\n          </SimpleProviders>\n        </I18nextProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default enhance(AppContainer);\n"]}