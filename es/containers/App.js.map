{"version":3,"sources":["containers/App.js"],"names":["React","PropTypes","nest","connect","createStructuredSelector","MuiThemeProvider","I18nextProvider","Provider","BusProvider","Mobile","Desktop","ClockProvider","closeAll","settingsSelector","languageSelector","themeSelector","isConnectedSelector","DesktopApp","MobileApp","FatalError","SimpleProviders","mapStateToProps","activeOverlay","state","isConnected","settings","language","theme","mapDispatchToProps","onCloseOverlay","enhance","AppContainer","error","renderApp","props","getChildContext","mediaSources","uwave","componentDidUpdate","prevProps","locale","changeLanguage","componentDidCatch","info","setState","bugsnag","notify","metaData","componentStack","render","Component","childContextTypes","object","propTypes","isRequired","string"],"mappings":"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","sourcesContent":["/* global bugsnag */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport nest from 'recompose/nest';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { I18nextProvider } from 'react-i18next';\nimport { Provider as BusProvider } from 'react-bus';\nimport { Mobile, Desktop } from '../components/Responsive';\nimport ClockProvider from '../components/ClockProvider';\nimport { closeAll } from '../actions/OverlayActionCreators';\nimport {\n  settingsSelector,\n  languageSelector,\n  themeSelector,\n} from '../selectors/settingSelectors';\nimport { isConnectedSelector } from '../selectors/serverSelectors';\nimport DesktopApp from '../components/App';\nimport MobileApp from '../mobile/components/App';\nimport FatalError from '../components/FatalError';\n\nconst SimpleProviders = nest(BusProvider, ClockProvider);\n\nconst mapStateToProps = createStructuredSelector({\n  activeOverlay: state => state.activeOverlay,\n  isConnected: isConnectedSelector,\n  settings: settingsSelector,\n  language: languageSelector,\n  theme: themeSelector,\n});\n\nconst mapDispatchToProps = {\n  onCloseOverlay: closeAll,\n};\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nclass AppContainer extends React.Component {\n  static propTypes = {\n    mediaSources: PropTypes.object.isRequired,\n    uwave: PropTypes.object,\n    language: PropTypes.string,\n    theme: PropTypes.object,\n    locale: PropTypes.object.isRequired,\n  };\n\n  static childContextTypes = {\n    mediaSources: PropTypes.object,\n    uwave: PropTypes.object,\n  };\n\n  state = {\n    error: null,\n  };\n\n  getChildContext() {\n    return {\n      mediaSources: this.props.mediaSources,\n      uwave: this.props.uwave,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.language !== prevProps.language) {\n      this.props.locale.changeLanguage(this.props.language);\n    }\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ error });\n\n    bugsnag.notify(error, {\n      metaData: {\n        componentStack: info.componentStack,\n      },\n    });\n  }\n\n  renderApp = () => (\n    <React.Fragment>\n      <Mobile>\n        <MobileApp {...this.props} />\n      </Mobile>\n      <Desktop>\n        <DesktopApp {...this.props} />\n      </Desktop>\n    </React.Fragment>\n  );\n\n  render() {\n    if (this.state.error) {\n      // Let's hope the ThemeProvider works at least...\n      return (\n        <MuiThemeProvider theme={this.props.theme}>\n          <FatalError error={this.state.error} />\n        </MuiThemeProvider>\n      );\n    }\n\n    return (\n      <MuiThemeProvider theme={this.props.theme}>\n        <I18nextProvider i18n={this.props.locale}>\n          <SimpleProviders>\n            {this.renderApp()}\n          </SimpleProviders>\n        </I18nextProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default enhance(AppContainer);\n"],"file":"App.js"}