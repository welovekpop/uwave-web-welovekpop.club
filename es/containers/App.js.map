{"version":3,"sources":["containers/App.js"],"names":["React","PropTypes","bindActionCreators","connect","createStructuredSelector","MuiThemeProvider","I18nextProvider","closeAll","createTimer","stopTimer","settingsSelector","languageSelector","muiThemeSelector","App","mapStateToProps","activeOverlay","state","settings","language","muiTheme","hasAboutPage","props","uwave","getAboutPageComponent","mapDispatchToProps","onCloseOverlay","dispatch","AppContainer","getChildContext","timerCallbacks","mediaSources","componentWillMount","componentWillReceiveProps","nextProps","locale","changeLanguage","componentWillUnmount","render","Component","childContextTypes","arrayOf","func","object","propTypes","isRequired","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iCAAvC;;AAEA,SACEC,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,+BAJP;AAKA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,IAAMC,kBAAkBV,yBAAyB;AAC/CW,iBAAe;AAAA,WAASC,MAAMD,aAAf;AAAA,GADgC;AAE/CE,YAAUP,gBAFqC;AAG/CQ,YAAUP,gBAHqC;AAI/CQ,YAAUP,gBAJqC;AAK/CQ,gBAAc,sBAACJ,KAAD,EAAQK,KAAR;AAAA,WACZA,MAAMC,KAAN,CAAYC,qBAAZ,OAAwC,IAD5B;AAAA;AALiC,CAAzB,CAAxB;;AAUA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SAAYtB,mBAAmB;AACxDM,4BADwD;AAExDC,wBAFwD;AAGxDgB,oBAAgBlB;AAHwC,GAAnB,EAIpCmB,QAJoC,CAAZ;AAAA,CAA3B;;IAOqBC,Y,WADpBxB,QAAQW,eAAR,EAAyBU,kBAAzB,C;;;;;;;;;yBAkBCI,e,8BAAkB;AAChB,WAAO;AACLC,sBAAgB,KAAKA,cADhB;AAELC,oBAAc,KAAKT,KAAL,CAAWS,YAFpB;AAGLR,aAAO,KAAKD,KAAL,CAAWC;AAHb,KAAP;AAKD,G;;AAED;;;yBACAS,kB,iCAAqB;AACnB;AACA;AACA,SAAKF,cAAL,GAAsB,KAAKR,KAAL,CAAWb,WAAX,EAAtB;AACD,G;;yBAEDwB,yB,sCAA0BC,S,EAAW;AACnC,QAAI,KAAKZ,KAAL,CAAWH,QAAX,KAAwBe,UAAUf,QAAtC,EAAgD;AAC9C,WAAKG,KAAL,CAAWa,MAAX,CAAkBC,cAAlB,CAAiCF,UAAUf,QAA3C;AACD;AACF,G;;yBAEDkB,oB,mCAAuB;AACrB,SAAKP,cAAL,GAAsB,EAAtB;AACA,SAAKR,KAAL,CAAWZ,SAAX;AACD,G;;yBAED4B,M,qBAAS;AACP,gBACG,gBADH;AAAA,gBAC8B,KAAKhB,KAAL,CAAWF;AADzC,oBAEK,eAFL;AAAA,YAE2B,KAAKE,KAAL,CAAWa;AAFtC,eAGM,oBAAC,GAAD,EAAS,KAAKb,KAAd,CAHN;AAOD,G;;;EAnDuCrB,MAAMsC,S,WAWvCC,iB,GAAoB;AACzBV,kBAAgB5B,UAAUuC,OAAV,CAAkBvC,UAAUwC,IAA5B,CADS;AAEzBX,gBAAc7B,UAAUyC,MAFC;AAGzBpB,SAAOrB,UAAUyC;AAHQ,C;SAXRf,Y;AAAAA,Y,CACZgB,S,2CAAY;AACjBb,gBAAc7B,UAAUyC,MAAV,CAAiBE,UADd;AAEjBtB,SAAOrB,UAAUyC,MAFA;AAGjBxB,YAAUjB,UAAU4C,MAHH;AAIjBX,UAAQjC,UAAUyC,MAAV,CAAiBE,UAJR;AAKjBzB,YAAUlB,UAAUyC,MALH;AAMjBlC,eAAaP,UAAUwC,IAAV,CAAeG,UANX;AAOjBnC,aAAWR,UAAUwC,IAAV,CAAeG;AAPT,C","file":"App.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { I18nextProvider } from 'react-i18next';\nimport { closeAll } from '../actions/OverlayActionCreators';\nimport { createTimer, stopTimer } from '../actions/TickerActionCreators';\n\nimport {\n  settingsSelector,\n  languageSelector,\n  muiThemeSelector\n} from '../selectors/settingSelectors';\nimport App from '../components/App';\n\nconst mapStateToProps = createStructuredSelector({\n  activeOverlay: state => state.activeOverlay,\n  settings: settingsSelector,\n  language: languageSelector,\n  muiTheme: muiThemeSelector,\n  hasAboutPage: (state, props) => (\n    props.uwave.getAboutPageComponent() !== null\n  )\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  createTimer,\n  stopTimer,\n  onCloseOverlay: closeAll\n}, dispatch);\n\n@connect(mapStateToProps, mapDispatchToProps)\nexport default class AppContainer extends React.Component {\n  static propTypes = {\n    mediaSources: PropTypes.object.isRequired,\n    uwave: PropTypes.object,\n    language: PropTypes.string,\n    locale: PropTypes.object.isRequired,\n    muiTheme: PropTypes.object,\n    createTimer: PropTypes.func.isRequired,\n    stopTimer: PropTypes.func.isRequired\n  };\n\n  static childContextTypes = {\n    timerCallbacks: PropTypes.arrayOf(PropTypes.func),\n    mediaSources: PropTypes.object,\n    uwave: PropTypes.object\n  };\n\n  getChildContext() {\n    return {\n      timerCallbacks: this.timerCallbacks,\n      mediaSources: this.props.mediaSources,\n      uwave: this.props.uwave\n    };\n  }\n\n  // TODO move this to constructor?\n  componentWillMount() {\n    // Start the clock! Ã¼Wave stores the current time in the application state\n    // primarily to make sure that different timers in the UI update simultaneously.\n    this.timerCallbacks = this.props.createTimer();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.language !== nextProps.language) {\n      this.props.locale.changeLanguage(nextProps.language);\n    }\n  }\n\n  componentWillUnmount() {\n    this.timerCallbacks = [];\n    this.props.stopTimer();\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={this.props.muiTheme}>\n        <I18nextProvider i18n={this.props.locale}>\n          <App {...this.props} />\n        </I18nextProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n"]}