{"version":3,"sources":["containers/DragLayer.js"],"names":["React","PropTypes","DragLayer","MEDIA","WAITLIST_USER","MediaDragPreview","enhance","items","monitor","getItem","type","getItemType","currentOffset","getClientOffset","isDragging","DragLayerContainer","renderPreview","props","render","Component","propTypes","oneOf","object","bool","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,0BAArC;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AAEA,IAAMC,UAAUJ,UAAU;AAAA,SAAY;AACpCK,WAAOC,QAAQC,OAAR,EAD6B;AAEpCC,UAAMF,QAAQG,WAAR,EAF8B;AAGpCC,mBAAeJ,QAAQK,eAAR,EAHqB;AAIpCC,gBAAYN,QAAQM,UAAR;AAJwB,GAAZ;AAAA,CAAV,CAAhB;;IAOMC,kB;;;;;;;;;;;SAOJC,a,4BAAgB;AACd,YAAQ,KAAKC,KAAL,CAAWP,IAAnB;AACE,WAAKP,KAAL;AACE,eAAO,oBAAC,gBAAD,EAAsB,KAAKc,KAA3B,CAAP;;AACF;AACE,eAAO,IAAP;AAJJ;AAMD,G;;SAEDC,M,qBAAS;AAAA,iBACuB,KAAKD,KAD5B;AAAA,QACCH,UADD,UACCA,UADD;AAAA,QACaP,KADb,UACaA,KADb;;AAEP,QAAI,CAACO,UAAD,IAAe,CAACP,KAApB,EAA2B;AACzB,aAAO,IAAP;AACD;;AAED,WACE;AAAK,iBAAU;AAAf,eACG,KAAKS,aAAL,EADH,CADF;AAKD,G;;;EA3B8BhB,MAAMmB,S;;AAAjCJ,kB,CACGK,S,2CAAY;AACjBV,QAAMT,UAAUoB,KAAV,CAAgB,CAAClB,KAAD,EAAQC,aAAR,CAAhB,CADW;AAEjBG,SAAON,UAAUqB,MAFA;AAGjBR,cAAYb,UAAUsB,IAAV,CAAeC;AAHV,C;AA6BrB,eAAelB,QAAQS,kBAAR,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragLayer } from 'react-dnd';\nimport { MEDIA, WAITLIST_USER } from '../constants/DDItemTypes';\nimport MediaDragPreview from '../components/MediaList/MediaDragPreview';\n\nconst enhance = DragLayer(monitor => ({\n  items: monitor.getItem(),\n  type: monitor.getItemType(),\n  currentOffset: monitor.getClientOffset(),\n  isDragging: monitor.isDragging(),\n}));\n\nclass DragLayerContainer extends React.Component {\n  static propTypes = {\n    type: PropTypes.oneOf([MEDIA, WAITLIST_USER]),\n    items: PropTypes.object,\n    isDragging: PropTypes.bool.isRequired,\n  };\n\n  renderPreview() {\n    switch (this.props.type) {\n      case MEDIA:\n        return <MediaDragPreview {...this.props} />;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { isDragging, items } = this.props;\n    if (!isDragging || !items) {\n      return null;\n    }\n\n    return (\n      <div className=\"DragLayerContainer\">\n        {this.renderPreview()}\n      </div>\n    );\n  }\n}\n\nexport default enhance(DragLayerContainer);\n"],"file":"DragLayer.js"}