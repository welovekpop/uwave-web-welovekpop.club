{"version":3,"sources":["Uwave.js"],"names":["api","Uwave","_this","options","arguments","length","undefined","session","readSession","sources","sessionToken","renderTarget","aboutPageComponent","ready","Promise","resolve","resolveReady","Object","assign","constants","components","actions","module","hot","getComponent","call","uw","accept","renderToDOM","prototype","use","plugin","source","sourceType","sourcePlugin","opts","sourceFactory","default","type","TypeError","setAboutPageComponent","AboutPageComponent","getAboutPageComponent","build","_this2","store","configureStore","config","mediaSources","socketUrl","localePromise","createLocale","languageSelector","getState","dispatch","setSessionToken","socketConnect","all","initState","then","_ref","locale","uwave","target","render"],"mappings":"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","file":"Uwave.js","sourcesContent":["// Polyfills for browsers that might not yet support Promises or the Fetch API\n// (newer & better XMLHttpRequest).\nimport 'lie/polyfill';\nimport 'whatwg-fetch';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { AppContainer as HotContainer } from 'react-hot-loader';\nimport createLocale from './locale';\nimport AppContainer from './containers/App';\nimport { get as readSession } from './utils/Session';\nimport configureStore from './store/configureStore';\nimport { initState, socketConnect, setSessionToken } from './actions/LoginActionCreators';\nimport { languageSelector } from './selectors/settingSelectors';\nimport * as api from './api';\n\n// Register default chat commands.\nimport './utils/commands';\n\nexport default class Uwave {\n  options = {};\n  sources = {};\n  sessionToken = null;\n  renderTarget = null;\n  aboutPageComponent = null;\n\n  constructor(options = {}, session = readSession()) {\n    this.options = options;\n    this.sessionToken = session;\n    this.ready = new Promise((resolve) => {\n      this.resolveReady = resolve;\n    });\n\n    Object.assign(this, api.constants);\n    Object.assign(this, api.components);\n    Object.assign(this, api.actions);\n\n    if (module.hot) {\n      const { getComponent } = this;\n      this.getComponent = () => (\n        <HotContainer>{getComponent.call(this)}</HotContainer>\n      );\n      const uw = this;\n      module.hot.accept('./containers/App', () => {\n        if (uw.renderTarget) {\n          uw.renderToDOM(uw.renderTarget);\n        }\n      });\n    }\n  }\n\n  use(plugin) {\n    plugin(this);\n    return this;\n  }\n\n  source(sourceType, sourcePlugin, opts = {}) {\n    const sourceFactory = sourcePlugin.default || sourcePlugin;\n\n    const type = typeof sourceFactory;\n    if (type !== 'function' && type !== 'object') {\n      throw new TypeError(`Source plugin should be a function, got ${type}`);\n    }\n\n    const source = type === 'function'\n      ? sourceFactory(this, opts)\n      : sourceFactory;\n\n    this.sources[sourceType] = source;\n\n    return source;\n  }\n\n  setAboutPageComponent(AboutPageComponent) {\n    this.aboutPageComponent = AboutPageComponent;\n  }\n  getAboutPageComponent() {\n    return this.aboutPageComponent;\n  }\n\n  build() {\n    this.store = configureStore(\n      { config: this.options },\n      { mediaSources: this.sources, socketUrl: this.options.socketUrl },\n    );\n\n    const localePromise = createLocale(languageSelector(this.store.getState()));\n\n    if (this.sessionToken) {\n      this.store.dispatch(setSessionToken(this.sessionToken));\n      this.sessionToken = null;\n    }\n\n    this.store.dispatch(socketConnect());\n    return Promise.all([\n      localePromise,\n      this.store.dispatch(initState()),\n    ]).then(([locale]) => {\n      this.locale = locale;\n      this.resolveReady();\n    });\n  }\n\n  getComponent() {\n    return (\n      <Provider store={this.store}>\n        <AppContainer\n          mediaSources={this.sources}\n          locale={this.locale}\n          uwave={this}\n        />\n      </Provider>\n    );\n  }\n\n  renderToDOM(target) {\n    if (!this.store) {\n      this.build();\n    }\n\n    this.renderTarget = target;\n    render(this.getComponent(), target);\n  }\n}\n"]}