{"version":3,"sources":["Uwave.js"],"names":["api","injectTapEventPlugin","Uwave","_this","options","arguments","length","undefined","session","readSession","sources","jwt","renderTarget","aboutPageComponent","ready","Promise","resolve","resolveReady","Object","assign","constants","components","actions","module","hot","_getComponent","getComponent","accept","renderToDOM","prototype","use","plugin","source","sourceType","sourcePlugin","opts","sourceFactory","default","type","TypeError","setAboutPageComponent","AboutPageComponent","getAboutPageComponent","build","_this2","store","configureStore","config","mediaSources","socketUrl","dispatch","setJWT","socketConnect","initState","then","uwave","target","render"],"mappings":"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","file":"Uwave.js","sourcesContent":["// Polyfills for browsers that might not yet support Promises or the Fetch API\n// (newer & better XMLHttpRequest).\nimport 'es6-promise';\nimport 'whatwg-fetch';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { AppContainer as HotContainer } from 'react-hot-loader';\nimport injectTapEventPlugin from 'react-tap-event-plugin';\nimport AppContainer from './containers/App';\nimport { get as readSession } from './utils/Session';\nimport configureStore from './store/configureStore';\nimport { initState, socketConnect, setJWT } from './actions/LoginActionCreators';\nimport * as api from './api';\n\n// Register default chat commands.\nimport './utils/commands';\n\n// A Material-UI dependency, removes the delay from tap events on some mobile\n// devices. Ã¼Wave currently isn't compatible with mobile yet, but material-ui\n// wants this!\ninjectTapEventPlugin();\n\nexport default class Uwave {\n  options = {};\n  sources = {};\n  jwt = null;\n  renderTarget = null;\n  aboutPageComponent = null;\n\n  constructor(options = {}, session = readSession()) {\n    this.options = options;\n    this.jwt = session;\n    this.ready = new Promise((resolve) => {\n      this.resolveReady = resolve;\n    });\n\n    Object.assign(this, api.constants);\n    Object.assign(this, api.components);\n    Object.assign(this, api.actions);\n\n    if (module.hot) {\n      this._getComponent = this.getComponent;\n      this.getComponent = () => (\n        <HotContainer>{this._getComponent()}</HotContainer>\n      );\n      module.hot.accept('./containers/App', () => {\n        if (this.renderTarget) {\n          this.renderToDOM(this.renderTarget);\n        }\n      });\n    }\n  }\n\n  use(plugin) {\n    plugin(this);\n    return this;\n  }\n\n  source(sourceType, sourcePlugin, opts = {}) {\n    const sourceFactory = sourcePlugin.default || sourcePlugin;\n\n    const type = typeof sourceFactory;\n    if (type !== 'function' && type !== 'object') {\n      throw new TypeError(`Source plugin should be a function, got ${type}`);\n    }\n\n    const source = type === 'function'\n      ? sourceFactory(this, opts)\n      : sourceFactory;\n\n    this.sources[sourceType] = source;\n\n    return source;\n  }\n\n  setAboutPageComponent(AboutPageComponent) {\n    this.aboutPageComponent = AboutPageComponent;\n  }\n  getAboutPageComponent() {\n    return this.aboutPageComponent;\n  }\n\n  build() {\n    this.store = configureStore(\n      { config: this.options },\n      { mediaSources: this.sources, socketUrl: this.options.socketUrl }\n    );\n\n    if (this.jwt) {\n      this.store.dispatch(setJWT(this.jwt));\n      this.jwt = null;\n    }\n\n    this.store.dispatch(socketConnect());\n    return this.store.dispatch(initState()).then(() => {\n      this.resolveReady();\n    });\n  }\n\n  getComponent() {\n    return (\n      <Provider store={this.store}>\n        <AppContainer\n          mediaSources={this.sources}\n          uwave={this}\n        />\n      </Provider>\n    );\n  }\n\n  renderToDOM(target) {\n    if (!this.store) {\n      this.build();\n    }\n\n    this.renderTarget = target;\n    render(this.getComponent(), target);\n  }\n}\n"]}