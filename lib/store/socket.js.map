{"version":3,"sources":["store/socket.js"],"names":["middleware","debug","defaultUrl","port","location","protocol","hostname","actions","chatMessage","_ref","id","userID","message","timestamp","_id","text","chatDelete","chatDeleteByID","_ref2","chatDeleteByUser","_ref3","chatMute","_ref4","expiresAt","moderatorID","chatUnmute","_ref5","advance","booth","favorite","_ref6","historyID","vote","_ref7","value","waitlistJoin","_ref8","waitlist","waitlistLeave","_ref9","waitlistUpdate","waitlistLock","_ref10","locked","waitlistMove","_ref11","position","waitlistAdd","_ref12","waitlistRemove","_ref13","waitlistClear","playlistCycle","_ref14","playlistID","join","user","leave","nameChange","_ref15","username","roleChange","_ref16","role","guests","wlkShouldRandomize","_ref17","type","payload","_ref18","arguments","length","undefined","_ref18$url","url","_ref19","dispatch","getState","socket","queue","sentJWT","opened","isOpen","sendJWT","jwt","send","maybeAuthenticateOnConnect","state","auth","command","data","JSON","stringify","push","drainQueuedMessages","messages","forEach","msg","onOpen","onClose","onMessage","pack","_JSON$parse","parse","action","next","close","keepClosed","addEventListener"],"mappings":"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","file":"socket.js","sourcesContent":["import createDebug from 'debug';\nimport WebSocket from 'reconnecting-websocket';\n\nimport {\n  LOGIN_COMPLETE,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n  SOCKET_DISCONNECTED,\n  SOCKET_CONNECTED\n} from '../constants/actionTypes/auth';\nimport {\n  SEND_MESSAGE\n} from '../constants/actionTypes/chat';\nimport {\n  DO_UPVOTE,\n  DO_DOWNVOTE\n} from '../constants/actionTypes/votes';\nimport {\n  SHOULD_RANDOMIZE\n} from '../_wlk/constants';\n\nimport { advance } from '../actions/BoothActionCreators';\nimport {\n  receive as chatReceive,\n  removeMessage,\n  removeMessagesByUser,\n  removeAllMessages,\n  muteUser as chatMute,\n  unmuteUser as chatUnmute\n} from '../actions/ChatActionCreators';\nimport { cyclePlaylist } from '../actions/PlaylistActionCreators';\nimport {\n  join as userJoin,\n  leave as userLeave,\n  changeUsername,\n  changeUserRole,\n  receiveGuestCount\n} from '../actions/UserActionCreators';\nimport {\n  clearWaitlist,\n  joinedWaitlist,\n  leftWaitlist,\n  updatedWaitlist,\n  movedInWaitlist,\n  setLocked as setWaitlistLocked\n} from '../actions/WaitlistActionCreators';\nimport { favorited, receiveVote } from '../actions/VoteActionCreators';\n\nconst debug = createDebug('uwave:websocket');\n\nfunction defaultUrl() {\n  const port = location.port || (location.protocol === 'https:' ? 443 : 80);\n  const protocol = location.protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${protocol}//${location.hostname}:${port}`;\n}\n\nconst actions = {\n  chatMessage({ id, userID, message, timestamp }) {\n    return chatReceive({\n      _id: id,\n      userID,\n      text: message,\n      timestamp\n    });\n  },\n  chatDelete() {\n    return removeAllMessages();\n  },\n  chatDeleteByID({ _id }) {\n    return removeMessage(_id);\n  },\n  chatDeleteByUser({ userID }) {\n    return removeMessagesByUser(userID);\n  },\n  chatMute({ userID, expiresAt, moderatorID }) {\n    return chatMute(userID, { moderatorID, expiresAt });\n  },\n  chatUnmute({ userID, moderatorID }) {\n    return chatUnmute(userID, { moderatorID });\n  },\n  advance(booth) {\n    return advance(booth);\n  },\n  favorite({ userID, historyID }) {\n    return favorited({ userID, historyID });\n  },\n  vote({ _id, value }) {\n    return receiveVote({ userID: _id, vote: value });\n  },\n  waitlistJoin({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistLeave({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistUpdate(waitlist) {\n    return updatedWaitlist(waitlist);\n  },\n  waitlistLock({ locked }) {\n    return setWaitlistLocked(locked);\n  },\n  waitlistMove({ userID, moderatorID, position, waitlist }) {\n    return movedInWaitlist({ userID, moderatorID, position, waitlist });\n  },\n  // TODO Treat moderator force-add and force-remove differently from voluntary\n  // joins and leaves.\n  waitlistAdd({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistRemove({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistClear() {\n    return clearWaitlist();\n  },\n  playlistCycle({ playlistID }) {\n    return cyclePlaylist(playlistID);\n  },\n  join(user) {\n    return userJoin(user);\n  },\n  leave(userID) {\n    return userLeave(userID);\n  },\n  nameChange({ userID, username }) {\n    return changeUsername(userID, username);\n  },\n  roleChange({ userID, role }) {\n    return changeUserRole(userID, role);\n  },\n  guests: receiveGuestCount,\n\n  'wlk:shouldRandomize': ({ value }) => ({\n    type: SHOULD_RANDOMIZE,\n    payload: value\n  })\n};\n\nexport default function middleware({ url = defaultUrl() } = {}) {\n  return ({ dispatch, getState }) => {\n    let socket;\n    let queue = [];\n    let sentJWT = false;\n    let opened = false;\n\n    function isOpen() {\n      return socket && opened;\n    }\n\n    function sendJWT(jwt) {\n      socket.send(jwt);\n      sentJWT = true;\n    }\n\n    function maybeAuthenticateOnConnect(state) {\n      const jwt = state.auth.jwt;\n      debug('open', jwt);\n      if (jwt) {\n        sendJWT(jwt);\n      } else {\n        sentJWT = false;\n      }\n    }\n\n    function send(command, data) {\n      if (isOpen()) {\n        socket.send(JSON.stringify({ command, data }));\n      } else {\n        queue.push({ command, data });\n      }\n    }\n\n    function drainQueuedMessages() {\n      const messages = queue;\n      queue = [];\n      messages.forEach((msg) => {\n        send(msg.command, msg.data);\n      });\n    }\n\n    function onOpen() {\n      opened = true;\n      dispatch({ type: SOCKET_CONNECTED });\n      maybeAuthenticateOnConnect(getState());\n    }\n\n    function onClose() {\n      opened = false;\n      dispatch({ type: SOCKET_DISCONNECTED });\n    }\n\n    function onMessage(pack) {\n      // Ignore keepalive messages.\n      if (pack.data === '-') return;\n\n      const { command, data } = JSON.parse(pack.data);\n      debug(command, data);\n\n      if (command === 'authenticated') {\n        drainQueuedMessages();\n        return;\n      }\n\n      if (typeof actions[command] === 'function') {\n        const action = actions[command](data);\n        if (action) {\n          dispatch(action);\n          return;\n        }\n      }\n      debug('!unknown socket message type');\n    }\n\n    return next => (action) => {\n      const { type, payload } = action;\n      switch (type) {\n      case SOCKET_RECONNECT:\n        if (socket) {\n          socket.close(undefined, undefined, { keepClosed: true });\n        }\n        // fall through\n      case SOCKET_CONNECT:\n        socket = new WebSocket(url);\n        socket.addEventListener('message', onMessage);\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('connecting', onClose);\n        break;\n      case SEND_MESSAGE:\n        send('sendChat', payload.message);\n        break;\n      case DO_UPVOTE:\n        send('vote', 1);\n        break;\n      case DO_DOWNVOTE:\n        send('vote', -1);\n        break;\n      case LOGIN_COMPLETE:\n        if (!sentJWT && isOpen()) {\n          sendJWT(payload.jwt);\n        }\n        break;\n      default:\n        break;\n      }\n      next(action);\n    };\n  };\n}\n"]}