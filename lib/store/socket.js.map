{"version":3,"sources":["store/socket.js"],"names":["middleware","debug","defaultUrl","loc","window","location","port","protocol","hostname","actions","chatMessage","_ref","id","userID","message","timestamp","_id","text","chatDelete","chatDeleteByID","_ref2","chatDeleteByUser","_ref3","chatMute","_ref4","expiresAt","moderatorID","chatUnmute","_ref5","advance","booth","skip","_ref6","reason","favorite","_ref7","historyID","vote","_ref8","value","waitlistJoin","_ref9","waitlist","waitlistLeave","_ref10","waitlistUpdate","waitlistLock","_ref11","locked","waitlistMove","_ref12","position","waitlistAdd","_ref13","waitlistRemove","_ref14","waitlistClear","playlistCycle","_ref15","playlistID","join","user","leave","nameChange","_ref16","username","roleChange","_ref17","role","guests","wlkShouldRandomize","_ref18","type","payload","_ref19","arguments","length","undefined","_ref19$url","url","_ref20","dispatch","getState","socket","queue","sentJWT","opened","isOpen","sendJWT","jwt","send","maybeAuthenticateOnConnect","state","auth","command","data","JSON","stringify","push","drainQueuedMessages","messages","forEach","msg","onOpen","onClose","onMessage","pack","_JSON$parse","parse","action","next","error","close","keepClosed","addEventListener"],"mappings":"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","file":"socket.js","sourcesContent":["import createDebug from 'debug';\nimport WebSocket from 'reconnecting-websocket';\n\nimport {\n  LOGIN_COMPLETE,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n  SOCKET_DISCONNECTED,\n  SOCKET_CONNECTED\n} from '../constants/actionTypes/auth';\nimport {\n  SEND_MESSAGE\n} from '../constants/actionTypes/chat';\nimport {\n  DO_UPVOTE,\n  DO_DOWNVOTE\n} from '../constants/actionTypes/votes';\nimport {\n  SHOULD_RANDOMIZE\n} from '../_wlk/constants';\n\nimport {\n  advance,\n  skipped\n} from '../actions/BoothActionCreators';\nimport {\n  receive as chatReceive,\n  removeMessage,\n  removeMessagesByUser,\n  removeAllMessages,\n  muteUser as chatMute,\n  unmuteUser as chatUnmute\n} from '../actions/ChatActionCreators';\nimport { cyclePlaylist } from '../actions/PlaylistActionCreators';\nimport {\n  join as userJoin,\n  leave as userLeave,\n  changeUsername,\n  changeUserRole,\n  receiveGuestCount\n} from '../actions/UserActionCreators';\nimport {\n  clearWaitlist,\n  joinedWaitlist,\n  leftWaitlist,\n  updatedWaitlist,\n  movedInWaitlist,\n  setLocked as setWaitlistLocked\n} from '../actions/WaitlistActionCreators';\nimport { favorited, receiveVote } from '../actions/VoteActionCreators';\n\nconst debug = createDebug('uwave:websocket');\n\nfunction defaultUrl() {\n  const loc = window.location;\n  const port = loc.port || (loc.protocol === 'https:' ? 443 : 80);\n  const protocol = loc.protocol === 'https:' ? 'wss:' : 'ws:';\n  return `${protocol}//${loc.hostname}:${port}`;\n}\n\nconst actions = {\n  chatMessage({\n    id, userID, message, timestamp\n  }) {\n    return chatReceive({\n      _id: id,\n      userID,\n      text: message,\n      timestamp\n    });\n  },\n  chatDelete() {\n    return removeAllMessages();\n  },\n  chatDeleteByID({ _id }) {\n    return removeMessage(_id);\n  },\n  chatDeleteByUser({ userID }) {\n    return removeMessagesByUser(userID);\n  },\n  chatMute({ userID, expiresAt, moderatorID }) {\n    return chatMute(userID, { moderatorID, expiresAt });\n  },\n  chatUnmute({ userID, moderatorID }) {\n    return chatUnmute(userID, { moderatorID });\n  },\n  advance(booth) {\n    return advance(booth);\n  },\n  skip({ userID, moderatorID, reason }) {\n    return skipped({ userID, moderatorID, reason });\n  },\n  favorite({ userID, historyID }) {\n    return favorited({ userID, historyID });\n  },\n  vote({ _id, value }) {\n    return receiveVote({ userID: _id, vote: value });\n  },\n  waitlistJoin({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistLeave({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistUpdate(waitlist) {\n    return updatedWaitlist(waitlist);\n  },\n  waitlistLock({ locked }) {\n    return setWaitlistLocked(locked);\n  },\n  waitlistMove({\n    userID, moderatorID, position, waitlist\n  }) {\n    return movedInWaitlist({\n      userID, moderatorID, position, waitlist\n    });\n  },\n  // TODO Treat moderator force-add and force-remove differently from voluntary\n  // joins and leaves.\n  waitlistAdd({ userID, waitlist }) {\n    return joinedWaitlist({ userID, waitlist });\n  },\n  waitlistRemove({ userID, waitlist }) {\n    return leftWaitlist({ userID, waitlist });\n  },\n  waitlistClear() {\n    return clearWaitlist();\n  },\n  playlistCycle({ playlistID }) {\n    return cyclePlaylist(playlistID);\n  },\n  join(user) {\n    return userJoin(user);\n  },\n  leave(userID) {\n    return userLeave(userID);\n  },\n  nameChange({ userID, username }) {\n    return changeUsername(userID, username);\n  },\n  roleChange({ userID, role }) {\n    return changeUserRole(userID, role);\n  },\n  guests: receiveGuestCount,\n\n  'wlk:shouldRandomize': ({ value }) => ({\n    type: SHOULD_RANDOMIZE,\n    payload: value\n  })\n};\n\nexport default function middleware({ url = defaultUrl() } = {}) {\n  return ({ dispatch, getState }) => {\n    let socket;\n    let queue = [];\n    let sentJWT = false;\n    let opened = false;\n\n    function isOpen() {\n      return socket && opened;\n    }\n\n    function sendJWT(jwt) {\n      socket.send(jwt);\n      sentJWT = true;\n    }\n\n    function maybeAuthenticateOnConnect(state) {\n      const { jwt } = state.auth;\n      debug('open', jwt);\n      if (jwt) {\n        sendJWT(jwt);\n      } else {\n        sentJWT = false;\n      }\n    }\n\n    function send(command, data) {\n      if (isOpen()) {\n        socket.send(JSON.stringify({ command, data }));\n      } else {\n        queue.push({ command, data });\n      }\n    }\n\n    function drainQueuedMessages() {\n      const messages = queue;\n      queue = [];\n      messages.forEach((msg) => {\n        send(msg.command, msg.data);\n      });\n    }\n\n    function onOpen() {\n      opened = true;\n      dispatch({ type: SOCKET_CONNECTED });\n      maybeAuthenticateOnConnect(getState());\n    }\n\n    function onClose() {\n      opened = false;\n      dispatch({ type: SOCKET_DISCONNECTED });\n    }\n\n    function onMessage(pack) {\n      // Ignore keepalive messages.\n      if (pack.data === '-') return;\n\n      const { command, data } = JSON.parse(pack.data);\n      debug(command, data);\n\n      if (command === 'authenticated') {\n        drainQueuedMessages();\n        return;\n      }\n\n      if (typeof actions[command] === 'function') {\n        const action = actions[command](data);\n        if (action) {\n          dispatch(action);\n          return;\n        }\n      }\n      debug('!unknown socket message type');\n    }\n\n    return next => (action) => {\n      const { type, payload, error } = action;\n\n      if (error) {\n        next(action);\n        return;\n      }\n\n      switch (type) {\n      case SOCKET_RECONNECT:\n        if (socket) {\n          socket.close(undefined, undefined, { keepClosed: true });\n        }\n        // fall through\n      case SOCKET_CONNECT:\n        socket = new WebSocket(url);\n        socket.addEventListener('message', onMessage);\n        socket.addEventListener('open', onOpen);\n        socket.addEventListener('close', onClose);\n        socket.addEventListener('connecting', onClose);\n        break;\n      case SEND_MESSAGE:\n        send('sendChat', payload.message);\n        break;\n      case DO_UPVOTE:\n        send('vote', 1);\n        break;\n      case DO_DOWNVOTE:\n        send('vote', -1);\n        break;\n      case LOGIN_COMPLETE:\n        if (!sentJWT && isOpen()) {\n          sendJWT(payload.jwt);\n        }\n        break;\n      default:\n        break;\n      }\n      next(action);\n    };\n  };\n}\n"]}