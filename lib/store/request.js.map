{"version":3,"sources":["store/request.js"],"names":["isEmpty","object","Object","keys","length","makeUrl","path","params","uri","indexOf","rejectNonOK","response","status","json","then","res","Error","errors","error","map","err","title","join","defaultOptions","apiUrl","middleware","middlewareOptions","_ref","dispatch","getState","next","action","type","REQUEST_START","opts","token","_action$payload","payload","method","url","qs","data","_action$meta","meta","id","onStart","onComplete","onError","completedMeta","requestUrl","requestOptions","headers","Accept","credentials","Authorization","body","JSON","stringify","fetch","responseValue","catch"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAO,CAACA,MAAD,IAAWC,OAAOC,IAAP,CAAYF,MAAZ,EAAoBG,MAApB,KAA+B,CAAjD;AACD;;AAED,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC7B,MAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBA,aAAS,EAAT;AACD;;AAED,MAAIC,MAAMF,IAAV;;AAEA,MAAI,CAACN,QAAQO,MAAR,CAAL,EAAsB;AACpB;AACAC,WAAO,CAACA,IAAIC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,GAA0B,GAA1B,GAAgC,GAAjC,IAAwC,0BAAYF,MAAZ,CAA/C;AACD;;AAED,SAAOC,GAAP;AACD;;AAED,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIA,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOD,SAASE,IAAT,GAAgBC,IAAhB,CAAqB,UAAUC,GAAV,EAAe;AACzC,UAAI,EAAE,YAAYA,GAAd,CAAJ,EAAwB;AACtB,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,UAAIC,SAASF,IAAIE,MAAjB;AACA,UAAIC,QAAQ,2BAAO,IAAIF,KAAJ,CAAUC,OAAOE,GAAP,CAAW,UAAUC,GAAV,EAAe;AACrD,eAAOA,IAAIC,KAAX;AACD,OAF4B,EAE1BC,IAF0B,CAErB,IAFqB,CAAV,CAAP,EAEI;AACdX,kBAAUA,QADI;AAEdM,gBAAQA;AAFM,OAFJ,CAAZ;AAMA,YAAMC,KAAN;AACD,KAbM,CAAP;AAcD;;AAED,SAAOP,QAAP;AACD;;AAED,IAAIY,iBAAiB;AACnBC,UAAQ;AADW,CAArB;;AAGe,SAASC,UAAT,CAAoBC,iBAApB,EAAuC;AACpD,MAAIA,sBAAsB,KAAK,CAA/B,EAAkC;AAChCA,wBAAoB,EAApB;AACD;;AAED,SAAO,UAAUC,IAAV,EAAgB;AACrB,QAAIC,WAAWD,KAAKC,QAApB;AAAA,QACIC,WAAWF,KAAKE,QADpB;AAEA,WAAO,UAAUC,IAAV,EAAgB;AACrB,aAAO,UAAUC,MAAV,EAAkB;AACvB,YAAIA,OAAOC,IAAP,KAAgBC,sBAApB,EAAmC;AACjC,iBAAOH,KAAKC,MAAL,CAAP;AACD;;AAED,YAAIG,OAAO,4BAAc,EAAd,EAAkBX,cAAlB,EAAkCG,iBAAlC,EAAqD,6CAAuBG,UAAvB,CAArD,CAAX;AAEA,YAAIM,QAAQ,kCAAcN,UAAd,CAAZ;AACA,YAAIO,kBAAkBL,OAAOM,OAA7B;AAAA,YACIC,SAASF,gBAAgBE,MAD7B;AAAA,YAEIC,MAAMH,gBAAgBG,GAF1B;AAAA,YAGIC,KAAKJ,gBAAgBI,EAHzB;AAAA,YAIIC,OAAOL,gBAAgBK,IAJ3B;AAKA,YAAIC,eAAeX,OAAOY,IAA1B;AAAA,YACIC,KAAKF,aAAaE,EADtB;AAAA,YAEIC,UAAUH,aAAaG,OAF3B;AAAA,YAGIC,aAAaJ,aAAaI,UAH9B;AAAA,YAIIC,UAAUL,aAAaK,OAJ3B;AAKA,YAAIC,gBAAgB;AAClBJ,cAAIA,EADc;AAElBN,kBAAQA,MAFU;AAGlBC,eAAKA,GAHa;AAIlBC,cAAIA,EAJc;AAKlBC,gBAAMA;AALY,SAApB;AAOA,YAAIQ,aAAa5C,QAAQ6B,KAAKV,MAAL,GAAce,GAAtB,EAA2BC,EAA3B,CAAjB;AACA,YAAIU,iBAAiB;AACnBZ,kBAAQA,MADW;AAEnBa,mBAAS;AACPC,oBAAQ,kBADD;AAEP,4BAAgB;AAFT,WAFU;AAMnBC,uBAAa;AANM,SAArB;;AASA,YAAIlB,SAASA,UAAU,QAAvB,EAAiC;AAC/Be,yBAAeC,OAAf,CAAuBG,aAAvB,GAAuC,SAASnB,KAAhD;AACD;;AAED,YAAIG,WAAW,KAAf,EAAsB;AACpBY,yBAAeK,IAAf,GAAsBC,KAAKC,SAAL,CAAehB,IAAf,CAAtB;AACD;;AAED,YAAII,OAAJ,EAAa;AACXjB,mBAASiB,SAAT;AACD;;AAED,eAAOa,MAAMT,UAAN,EAAkBC,cAAlB,EAAkCpC,IAAlC,CAAuCJ,WAAvC,EAAoDI,IAApD,CAAyD,UAAUC,GAAV,EAAe;AAC7E,iBAAOA,IAAIF,IAAJ,EAAP;AACD,SAFM,EAEJC,IAFI,CAEC,UAAUC,GAAV,EAAe;AACrB,cAAI4C,gBAAgB5C,GAApB;;AAEA,cAAI+B,UAAJ,EAAgB;AACda,4BAAgB/B,SAASkB,WAAWa,aAAX,CAAT,CAAhB;AACD;;AAED/B,mBAAS,4CAAgBb,GAAhB,EAAqBiC,aAArB,CAAT;AACA,iBAAOW,aAAP;AACD,SAXM,EAWJC,KAXI,CAWE,UAAU1C,KAAV,EAAiB;AACxB,cAAI6B,OAAJ,EAAa;AACXnB,qBAASmB,QAAQ7B,KAAR,CAAT;AACD;;AAEDU,mBAAS,iDAAqBV,KAArB,EAA4B8B,aAA5B,CAAT;AACA,gBAAM9B,KAAN;AACD,SAlBM,CAAP;AAmBD,OAlED;AAmED,KApED;AAqED,GAxED;AAyED,C,CACD","file":"request.js","sourcesContent":["import assign from 'object-assign';\nimport qsStringify from 'qs-stringify';\n\nimport { REQUEST_START } from '../constants/actionTypes/request';\nimport {\n  requestComplete,\n  requestCompleteError,\n} from '../actions/RequestActionCreators';\nimport { requestOptionsSelector } from '../selectors/configSelectors';\nimport { tokenSelector } from '../selectors/userSelectors';\n\nfunction isEmpty(object) {\n  return !object || Object.keys(object).length === 0;\n}\n\nfunction makeUrl(path, params = {}) {\n  let uri = path;\n\n  if (!isEmpty(params)) {\n    // hehâ€¦\n    uri += (uri.indexOf('?') !== -1 ? '&' : '?') + qsStringify(params);\n  }\n\n  return uri;\n}\n\nfunction rejectNonOK(response) {\n  if (response.status !== 200) {\n    return response.json().then((res) => {\n      if (!('errors' in res)) {\n        throw new Error('An unknown error occurred.');\n      }\n      const { errors } = res;\n      const error = assign(new Error(errors.map(err => err.title).join(', ')), {\n        response,\n        errors,\n      });\n      throw error;\n    });\n  }\n  return response;\n}\n\nconst defaultOptions = {\n  apiUrl: '/api',\n};\n\nexport default function middleware(middlewareOptions = {}) {\n  return ({ dispatch, getState }) => next => (action) => {\n    if (action.type !== REQUEST_START) {\n      return next(action);\n    }\n\n    const opts = {\n      ...defaultOptions,\n      ...middlewareOptions,\n      ...requestOptionsSelector(getState()),\n    };\n\n    const token = tokenSelector(getState());\n    const {\n      method,\n      url,\n      qs,\n      data,\n    } = action.payload;\n    const {\n      id,\n      onStart,\n      onComplete,\n      onError,\n    } = action.meta;\n\n    const completedMeta = {\n      id,\n      method,\n      url,\n      qs,\n      data,\n    };\n\n    const requestUrl = makeUrl(opts.apiUrl + url, qs);\n\n    const requestOptions = {\n      method,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    };\n\n    if (token && token !== 'cookie') {\n      requestOptions.headers.Authorization = `JWT ${token}`;\n    }\n\n    if (method !== 'get') {\n      requestOptions.body = JSON.stringify(data);\n    }\n\n    if (onStart) {\n      dispatch(onStart());\n    }\n\n    return fetch(requestUrl, requestOptions)\n      .then(rejectNonOK)\n      .then(res => res.json())\n      .then((res) => {\n        let responseValue = res;\n        if (onComplete) {\n          responseValue = dispatch(onComplete(responseValue));\n        }\n        dispatch(requestComplete(res, completedMeta));\n        return responseValue;\n      })\n      .catch((error) => {\n        if (onError) {\n          dispatch(onError(error));\n        }\n        dispatch(requestCompleteError(error, completedMeta));\n        throw error;\n      });\n  };\n}\n"]}