{"version":3,"sources":["components/RoomHistory/Row.js"],"names":["inSelection","selection","media","some","item","_id","mediaSource","beginDrag","_ref","collect","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","enhance","MEDIA","HistoryRow","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","showActions","handleMouseEnter","setState","handleMouseLeave","handleDoubleClick","props","onOpenPreviewMediaDialog","handleKeyPress","event","code","onClick","_proto","prototype","componentDidMount","render","_this$props","historyEntry","className","selected","makeActions","timestamp","user","stats","selectedClass","thumbnail","src","alt","onMouseEnter","onMouseLeave","onDoubleClick","onKeyPress","SongTitle","size","artist","title","React","createElement","HistoryVotes","username","dateTime","TimeAgo","Actions","Component","defaultProps","propTypes","process","env","NODE_ENV","PropTypes","string","func","isRequired","object","bool","array"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport { getEmptyImage } from 'react-dnd-html5-backend';\nimport { MEDIA } from '../../constants/DDItemTypes';\n\nimport Actions from '../MediaList/Actions';\nimport SongTitle from '../SongTitle';\nimport TimeAgo from '../TimeAgo';\n\nimport HistoryVotes from './Votes';\n\nconst inSelection = (selection, media) =>\n  selection.some(item => item._id === media._id);\n\nconst mediaSource = {\n  beginDrag({ selection, media }) {\n    return {\n      media: inSelection(selection, media.media) ? selection : [media.media],\n    };\n  },\n};\n\nconst collect = connect => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n});\n\nconst enhance = DragSource(MEDIA, mediaSource, collect);\n\nclass HistoryRow extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDragPreview: PropTypes.func.isRequired,\n    media: PropTypes.object,\n    selected: PropTypes.bool,\n    selection: PropTypes.array,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    onClick: PropTypes.func,\n    makeActions: PropTypes.func,\n  };\n\n  static defaultProps = {\n    selected: false,\n  };\n\n  state = { showActions: false };\n\n  componentDidMount() {\n    this.props.connectDragPreview(getEmptyImage());\n  }\n\n  handleMouseEnter = () => {\n    this.setState({ showActions: true });\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ showActions: false });\n  };\n\n  handleDoubleClick = () => {\n    this.props.onOpenPreviewMediaDialog(this.props.media.media);\n  };\n\n  handleKeyPress = (event) => {\n    if (event.code === 'Space') {\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    const {\n      media: historyEntry,\n      className,\n      selection,\n      selected,\n      connectDragSource,\n      // actions\n      makeActions,\n      // etc\n      onClick,\n    } = this.props;\n    const {\n      media, timestamp, user, stats,\n    } = historyEntry;\n    const { showActions } = this.state;\n    const selectedClass = selected ? 'is-selected' : '';\n    const thumbnail = (\n      <div className=\"MediaListRow-thumb\">\n        <img\n          className=\"MediaListRow-image\"\n          src={media.thumbnail}\n          alt=\"\"\n        />\n      </div>\n    );\n    return connectDragSource((\n      // See PlaylistManager/Panel/Row.js\n      // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n      <div\n        className={cx('MediaListRow', 'HistoryRow', className, selectedClass)}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        onDoubleClick={this.handleDoubleClick}\n        onKeyPress={this.handleKeyPress}\n        onClick={onClick}\n      >\n        {thumbnail}\n        <SongTitle\n          className=\"HistoryRow-song\"\n          size=\"mediaRow\"\n          artist={media.artist}\n          title={media.title}\n        />\n        <div className=\"HistoryRow-votes\">\n          <HistoryVotes {...stats} />\n        </div>\n        <div className=\"HistoryRow-user\">\n          {user.username}\n        </div>\n        <div className=\"HistoryRow-time\" dateTime={timestamp}>\n          <TimeAgo timestamp={timestamp} />\n        </div>\n        {showActions && (\n          <Actions\n            className={cx('MediaListRow-actions', selectedClass)}\n            selection={selection}\n            media={media}\n            makeActions={makeActions}\n          />\n        )}\n      </div>\n    ));\n  }\n}\n\nexport default enhance(HistoryRow);\n"]}