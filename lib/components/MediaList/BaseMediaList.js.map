{"version":3,"sources":["components/MediaList/BaseMediaList.js"],"names":["didMediaChange","prev","next","some","item","i","_id","BaseMediaList","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","selection","props","media","renderList","items","ref","ListComponent","listComponent","createElement","renderRow","index","_makeActions","makeActions","rowProps","selected","isSelectedIndex","className","MediaRow","rowComponent","isAlternate","key","get","onClick","e","selectItem","onOpenPreviewMediaDialog","prototype","componentWillReceiveProps","nextProps","getIndices","mediaChanged","setState","preventDefault","shiftKey","selectRange","ctrlKey","selectToggle","select","render","_props","size","onRequestPage","list","itemsRenderer","itemRenderer","type","forceUpdateOnMediaChange","forceUpdateOnSelectionChange","pageSize","Component","_ref","defaultProps","propTypes","process","env","NODE_ENV","string","array","number","func","oneOfType","isRequired","object"],"mappings":"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","file":"BaseMediaList.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseList from 'react-list';\nimport LazyList from 'react-list-lazy-load';\nimport itemSelection from 'item-selection/immutable';\nimport LoadingRow from './LoadingRow';\n\n/**\n * Check if two media lists are different, taking into account\n * pagination. If the new media list contains items where the previous\n * list doesn't, but every other item is identical, we assume\n * the new list has just loaded a page that wasn't loaded in the\n * previous one, and decide that the list is not really different.\n */\nfunction didMediaChange(prev, next) {\n  return prev.some((item, i) => item && next[i] && item._id !== next[i]._id);\n}\n\nexport default class BaseMediaList extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    media: PropTypes.array,\n    size: PropTypes.number,\n    onRequestPage: PropTypes.func,\n    listComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n    rowComponent: PropTypes.func.isRequired,\n    rowProps: PropTypes.object,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    makeActions: PropTypes.func,\n  };\n\n  static defaultProps = {\n    // The `size` property is only necessary for lazy loading.\n    size: null,\n    makeActions: () => <span />,\n  };\n\n  state = { selection: itemSelection(this.props.media) };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.media !== this.props.media) {\n      const selection = this.state.selection.getIndices();\n      const mediaChanged = didMediaChange(this.props.media, nextProps.media);\n      this.setState({\n        selection: mediaChanged\n          ? itemSelection(nextProps.media)\n          : itemSelection(nextProps.media, selection),\n      });\n    }\n  }\n\n  selectItem(index, e) {\n    e.preventDefault();\n\n    let { selection } = this.state;\n\n    if (e.shiftKey) {\n      selection = selection.selectRange(index);\n    } else if (e.ctrlKey) {\n      selection = selection.selectToggle(index);\n    } else {\n      selection = selection.select(index);\n    }\n\n    this.setState({ selection });\n  }\n\n  renderList = (items, ref) => {\n    const ListComponent = this.props.listComponent;\n\n    return (\n      <ListComponent ref={ref}>\n        {items}\n      </ListComponent>\n    );\n  };\n\n  renderRow = (index) => {\n    const { makeActions } = this.props;\n    const props = this.props.rowProps || {};\n    const media = this.props.media[index];\n    const { selection } = this.state;\n    const selected = selection.isSelectedIndex(index);\n    if (!media) {\n      return (\n        <LoadingRow\n          key={index}\n          className=\"MediaList-row\"\n          selected={selected}\n        />\n      );\n    }\n    const MediaRow = this.props.rowComponent;\n    const isAlternate = index % 2 === 0;\n    return (\n      <MediaRow\n        key={media ? media._id : index}\n        {...props}\n        className={cx('MediaList-row', isAlternate && 'MediaListRow--alternate')}\n        media={media}\n        selected={selected}\n        selection={selection.get()}\n        onClick={e => this.selectItem(index, e)}\n        onOpenPreviewMediaDialog={this.props.onOpenPreviewMediaDialog}\n        makeActions={() => makeActions(media, selection, index)}\n      />\n    );\n  };\n\n  render() {\n    const {\n      className, media, size, onRequestPage,\n    } = this.props;\n    let list = (\n      <BaseList\n        itemsRenderer={this.renderList}\n        itemRenderer={this.renderRow}\n        length={size || media.length}\n        type=\"uniform\"\n        forceUpdateOnMediaChange={media}\n        forceUpdateOnSelectionChange={this.state.selection}\n      />\n    );\n    if (onRequestPage) {\n      list = (\n        <LazyList\n          items={media}\n          length={size || media.length}\n          pageSize={50}\n          onRequestPage={onRequestPage}\n        >\n          {list}\n        </LazyList>\n      );\n    }\n    return (\n      <div className={cx('MediaList', className)}>\n        {list}\n      </div>\n    );\n  }\n}\n"]}