{"version":3,"sources":["components/MediaList/BaseMediaList.js"],"names":["didMediaChange","prev","next","some","item","i","_id","BaseMediaList","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","selection","props","media","renderList","items","ref","ListComponent","listComponent","React","createElement","renderRow","index","_makeActions","makeActions","rowProps","selected","isSelectedIndex","LoadingRow","className","MediaRow","rowComponent","isAlternate","key","get","onClick","e","selectItem","onOpenPreviewMediaDialog","_proto","prototype","componentWillReceiveProps","nextProps","getIndices","mediaChanged","setState","preventDefault","shiftKey","selectRange","ctrlKey","selectToggle","select","render","_props","size","onRequestPage","list","BaseList","itemsRenderer","itemRenderer","type","forceUpdateOnMediaChange","forceUpdateOnSelectionChange","LazyList","pageSize","Component","_ref","defaultProps","propTypes","process","env","NODE_ENV","PropTypes","string","array","number","func","oneOfType","isRequired","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;;;;AAQA,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AAClC,SAAOD,KAAKE,IAAL,CAAU,UAAUC,IAAV,EAAgBC,CAAhB,EAAmB;AAClC,WAAOD,QAAQF,KAAKG,CAAL,CAAR,IAAmBD,KAAKE,GAAL,KAAaJ,KAAKG,CAAL,EAAQC,GAA/C;AACD,GAFM,CAAP;AAGD;;AAED,IAAIC;AACJ;AACA,UAAUC,gBAAV,EAA4B;AAC1B,+BAAeD,aAAf,EAA8BC,gBAA9B;;AAEA,WAASD,aAAT,GAAyB;AACvB,QAAIE,KAAJ,EAAWC,KAAX;;AAEA,SAAK,IAAIC,OAAOC,UAAUC,MAArB,EAA6BC,OAAO,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,OAAO,CAAjE,EAAoEA,OAAOL,IAA3E,EAAiFK,MAAjF,EAAyF;AACvFF,WAAKE,IAAL,IAAaJ,UAAUI,IAAV,CAAb;AACD;;AAED,WAAO,CAACP,QAAQC,QAAQF,iBAAiBS,IAAjB,CAAsBC,KAAtB,CAA4BV,gBAA5B,EAA8C,CAAC,IAAD,EAAOW,MAAP,CAAcL,IAAd,CAA9C,KAAsE,IAAtF,EAA4FJ,MAAMU,KAAN,GAAc;AAChHC,iBAAW,wBAAcX,MAAMY,KAAN,CAAYC,KAA1B;AADqG,KAA1G,EAELb,MAAMc,UAAN,GAAmB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC1C,UAAIC,gBAAgBjB,MAAMY,KAAN,CAAYM,aAAhC;AACA,aAAOC,eAAMC,aAAN,CAAoBH,aAApB,EAAmC;AACxCD,aAAKA;AADmC,OAAnC,EAEJD,KAFI,CAAP;AAGD,KAPO,EAOLf,MAAMqB,SAAN,GAAkB,UAAUC,KAAV,EAAiB;AACpC,UAAIC,eAAevB,MAAMY,KAAN,CAAYY,WAA/B;AACA,UAAIZ,QAAQZ,MAAMY,KAAN,CAAYa,QAAZ,IAAwB,EAApC;AACA,UAAIZ,QAAQb,MAAMY,KAAN,CAAYC,KAAZ,CAAkBS,KAAlB,CAAZ;AACA,UAAIX,YAAYX,MAAMU,KAAN,CAAYC,SAA5B;AACA,UAAIe,WAAWf,UAAUgB,eAAV,CAA0BL,KAA1B,CAAf;;AAEA,UAAI,CAACT,KAAL,EAAY;AACV,eAAO,mBAAKe,mBAAL,EAAiB;AACtBC,qBAAW,eADW;AAEtBH,oBAAUA;AAFY,SAAjB,EAGJJ,KAHI,CAAP;AAID;;AAED,UAAIQ,WAAW9B,MAAMY,KAAN,CAAYmB,YAA3B;AACA,UAAIC,cAAcV,QAAQ,CAAR,KAAc,CAAhC;AACA,aAAOH,eAAMC,aAAN,CAAoBU,QAApB,EAA8B,uBAAS;AAC5CG,aAAKpB,QAAQA,MAAMjB,GAAd,GAAoB0B;AADmB,OAAT,EAElCV,KAFkC,EAE3B;AACRiB,mBAAW,yBAAG,eAAH,EAAoBG,eAAe,yBAAnC,CADH;AAERnB,eAAOA,KAFC;AAGRa,kBAAUA,QAHF;AAIRf,mBAAWA,UAAUuB,GAAV,EAJH;AAKRC,iBAAS,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;AAC3B,iBAAOpC,MAAMqC,UAAN,CAAiBf,KAAjB,EAAwBc,CAAxB,CAAP;AACD,SAPO;AAQRE,kCAA0BtC,MAAMY,KAAN,CAAY0B,wBAR9B;AASRd,qBAAa,SAASA,WAAT,GAAuB;AAClC,iBAAOD,aAAaV,KAAb,EAAoBF,SAApB,EAA+BW,KAA/B,CAAP;AACD;AAXO,OAF2B,CAA9B,CAAP;AAeD,KAtCO,EAsCLvB,KAtCI,KAsCM,qCAAuBC,KAAvB,CAtCb;AAuCD;;AAED,MAAIuC,SAAS1C,cAAc2C,SAA3B;;AAEAD,SAAOE,yBAAP,GAAmC,SAASA,yBAAT,CAAmCC,SAAnC,EAA8C;AAC/E,QAAIA,UAAU7B,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACxC,UAAIF,YAAY,KAAKD,KAAL,CAAWC,SAAX,CAAqBgC,UAArB,EAAhB;AACA,UAAIC,eAAetD,eAAe,KAAKsB,KAAL,CAAWC,KAA1B,EAAiC6B,UAAU7B,KAA3C,CAAnB;AACA,WAAKgC,QAAL,CAAc;AACZlC,mBAAWiC,eAAe,wBAAcF,UAAU7B,KAAxB,CAAf,GAAgD,wBAAc6B,UAAU7B,KAAxB,EAA+BF,SAA/B;AAD/C,OAAd;AAGD;AACF,GARD;;AAUA4B,SAAOF,UAAP,GAAoB,SAASA,UAAT,CAAoBf,KAApB,EAA2Bc,CAA3B,EAA8B;AAChDA,MAAEU,cAAF;AACA,QAAInC,YAAY,KAAKD,KAAL,CAAWC,SAA3B;;AAEA,QAAIyB,EAAEW,QAAN,EAAgB;AACdpC,kBAAYA,UAAUqC,WAAV,CAAsB1B,KAAtB,CAAZ;AACD,KAFD,MAEO,IAAIc,EAAEa,OAAN,EAAe;AACpBtC,kBAAYA,UAAUuC,YAAV,CAAuB5B,KAAvB,CAAZ;AACD,KAFM,MAEA;AACLX,kBAAYA,UAAUwC,MAAV,CAAiB7B,KAAjB,CAAZ;AACD;;AAED,SAAKuB,QAAL,CAAc;AACZlC,iBAAWA;AADC,KAAd;AAGD,GAfD;;AAiBA4B,SAAOa,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,SAAS,KAAKzC,KAAlB;AAAA,QACIiB,YAAYwB,OAAOxB,SADvB;AAAA,QAEIhB,QAAQwC,OAAOxC,KAFnB;AAAA,QAGIyC,OAAOD,OAAOC,IAHlB;AAAA,QAIIC,gBAAgBF,OAAOE,aAJ3B;AAMA,QAAIC,OAAO,mBAAKC,kBAAL,EAAe;AACxBC,qBAAe,KAAK5C,UADI;AAExB6C,oBAAc,KAAKtC,SAFK;AAGxBlB,cAAQmD,QAAQzC,MAAMV,MAHE;AAIxByD,YAAM,SAJkB;AAKxBC,gCAA0BhD,KALF;AAMxBiD,oCAA8B,KAAKpD,KAAL,CAAWC;AANjB,KAAf,CAAX;;AASA,QAAI4C,aAAJ,EAAmB;AACjBC,aAAO,mBAAKO,0BAAL,EAAe;AACpBhD,eAAOF,KADa;AAEpBV,gBAAQmD,QAAQzC,MAAMV,MAFF;AAGpB6D,kBAAU,EAHU;AAIpBT,uBAAeA;AAJK,OAAf,EAKJ,KAAK,CALD,EAKIC,IALJ,CAAP;AAMD;;AAED,WAAO,mBAAK,KAAL,EAAY;AACjB3B,iBAAW,yBAAG,WAAH,EAAgBA,SAAhB;AADM,KAAZ,EAEJ,KAAK,CAFD,EAEI2B,IAFJ,CAAP;AAGD,GA5BD;;AA8BA,SAAO3D,aAAP;AACD,CA/GD,CA+GEsB,eAAM8C,SA/GR,CAFA;;;;AAmHA,IAAIC;AACJ;AACA,mBAAK,MAAL,EAAa,EAAb,CAFA;;AAIArE,cAAcsE,YAAd,GAA6B;AAC3B;AACAb,QAAM,IAFqB;AAG3B9B,eAAa,SAASA,WAAT,GAAuB;AAClC,WAAO0C,IAAP;AACD;AAL0B,CAA7B;AAQArE,cAAcuE,SAAd,GAA0BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAChE1C,aAAW2C,mBAAUC,MAD2C;AAEhE5D,SAAO2D,mBAAUE,KAF+C;AAGhEpB,QAAMkB,mBAAUG,MAHgD;AAIhEpB,iBAAeiB,mBAAUI,IAJuC;AAKhE1D,iBAAesD,mBAAUK,SAAV,CAAoB,CAACL,mBAAUC,MAAX,EAAmBD,mBAAUI,IAA7B,CAApB,EAAwDE,UALP;AAMhE/C,gBAAcyC,mBAAUI,IAAV,CAAeE,UANmC;AAOhErD,YAAU+C,mBAAUO,MAP4C;AAQhEzC,4BAA0BkC,mBAAUI,IAR4B;AAShEpD,eAAagD,mBAAUI;AATyC,CAAxC,GAUtB,EAVJ,C,CAWA","file":"BaseMediaList.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseList from 'react-list';\nimport LazyList from 'react-list-lazy-load';\nimport itemSelection from 'item-selection/immutable';\nimport LoadingRow from './LoadingRow';\n\n/**\n * Check if two media lists are different, taking into account\n * pagination. If the new media list contains items where the previous\n * list doesn't, but every other item is identical, we assume\n * the new list has just loaded a page that wasn't loaded in the\n * previous one, and decide that the list is not really different.\n */\nfunction didMediaChange(prev, next) {\n  return prev.some((item, i) => item && next[i] && item._id !== next[i]._id);\n}\n\nexport default class BaseMediaList extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    media: PropTypes.array,\n    size: PropTypes.number,\n    onRequestPage: PropTypes.func,\n    listComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n    rowComponent: PropTypes.func.isRequired,\n    rowProps: PropTypes.object,\n\n    onOpenPreviewMediaDialog: PropTypes.func,\n    makeActions: PropTypes.func,\n  };\n\n  static defaultProps = {\n    // The `size` property is only necessary for lazy loading.\n    size: null,\n    makeActions: () => <span />,\n  };\n\n  state = { selection: itemSelection(this.props.media) };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.media !== this.props.media) {\n      const selection = this.state.selection.getIndices();\n      const mediaChanged = didMediaChange(this.props.media, nextProps.media);\n      this.setState({\n        selection: mediaChanged\n          ? itemSelection(nextProps.media)\n          : itemSelection(nextProps.media, selection),\n      });\n    }\n  }\n\n  selectItem(index, e) {\n    e.preventDefault();\n\n    let { selection } = this.state;\n\n    if (e.shiftKey) {\n      selection = selection.selectRange(index);\n    } else if (e.ctrlKey) {\n      selection = selection.selectToggle(index);\n    } else {\n      selection = selection.select(index);\n    }\n\n    this.setState({ selection });\n  }\n\n  renderList = (items, ref) => {\n    const ListComponent = this.props.listComponent;\n\n    return (\n      <ListComponent ref={ref}>\n        {items}\n      </ListComponent>\n    );\n  };\n\n  renderRow = (index) => {\n    const { makeActions } = this.props;\n    const props = this.props.rowProps || {};\n    const media = this.props.media[index];\n    const { selection } = this.state;\n    const selected = selection.isSelectedIndex(index);\n    if (!media) {\n      return (\n        <LoadingRow\n          key={index}\n          className=\"MediaList-row\"\n          selected={selected}\n        />\n      );\n    }\n    const MediaRow = this.props.rowComponent;\n    const isAlternate = index % 2 === 0;\n    return (\n      <MediaRow\n        key={media ? media._id : index}\n        {...props}\n        className={cx('MediaList-row', isAlternate && 'MediaListRow--alternate')}\n        media={media}\n        selected={selected}\n        selection={selection.get()}\n        onClick={e => this.selectItem(index, e)}\n        onOpenPreviewMediaDialog={this.props.onOpenPreviewMediaDialog}\n        makeActions={() => makeActions(media, selection, index)}\n      />\n    );\n  };\n\n  render() {\n    const {\n      className, media, size, onRequestPage,\n    } = this.props;\n    let list = (\n      <BaseList\n        itemsRenderer={this.renderList}\n        itemRenderer={this.renderRow}\n        length={size || media.length}\n        type=\"uniform\"\n        forceUpdateOnMediaChange={media}\n        forceUpdateOnSelectionChange={this.state.selection}\n      />\n    );\n    if (onRequestPage) {\n      list = (\n        <LazyList\n          items={media}\n          length={size || media.length}\n          pageSize={50}\n          onRequestPage={onRequestPage}\n        >\n          {list}\n        </LazyList>\n      );\n    }\n    return (\n      <div className={cx('MediaList', className)}>\n        {list}\n      </div>\n    );\n  }\n}\n"]}