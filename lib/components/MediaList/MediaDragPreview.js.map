{"version":3,"sources":["components/MediaList/MediaDragPreview.js"],"names":["getItemStyles","offset","display","x","y","_ref2","className","MediaDragPreview","_ref","items","currentOffset","media","style","length","propTypes","process","env","NODE_ENV","object","shape","number","isRequired"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,gBAAgB,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,SAAOA,SAAS,4BAAO,EAAEC,SAAS,cAAX,EAAP,EAAoC,8BAAe,eAAeD,OAAOE,CAAtB,GAA0B,MAA1B,GAAmCF,OAAOG,CAA1C,GAA8C,KAA7D,CAApC,CAAT,GAAoH,EAAEF,SAAS,MAAX,EAA3H;AACD,CAFD;;AAIA,IAAIG,QAAQ,mCAAe;AACzBC,aAAW;AADc,CAAf,CAAZ;;AAIA,IAAIC,mBAAmB,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,QAAQD,KAAKC,KAAjB;AAAA,MACIC,gBAAgBF,KAAKE,aADzB;;AAGA,MAAI,CAACD,KAAD,IAAU,CAACA,MAAME,KAArB,EAA4B;AAC1B,WAAO,IAAP;AACD;AACD,SAAO,mBAAK,KAAL,EAAY;AACjBL,eAAW,kBADM;AAEjBM,WAAOZ,cAAcU,aAAd;AAFU,GAAZ,EAGJ,KAAK,CAHD,EAGIL,KAHJ,EAGWI,MAAME,KAAN,CAAYE,MAHvB,CAAP;AAID,CAXD;;AAaAN,iBAAiBO,SAAjB,GAA6BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnER,SAAO,oBAAUS,MADkD;AAEnER,iBAAe,oBAAUS,KAAV,CAAgB;AAC7BhB,OAAG,oBAAUiB,MAAV,CAAiBC,UADS;AAE7BjB,OAAG,oBAAUgB,MAAV,CAAiBC;AAFS,GAAhB;AAFoD,CAAxC,GAMzB,EANJ;;kBAQed,gB;AACf","file":"MediaDragPreview.js","sourcesContent":["import assign from 'object-assign';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListIcon from 'material-ui-icons/List';\nimport transformStyle from '../../utils/transformStyle';\n\nconst getItemStyles = offset => (\n  offset ? assign(\n    { display: 'inline-block' },\n    transformStyle(`translate(${offset.x}px, ${offset.y}px)`),\n  ) : { display: 'none' }\n);\n\nconst MediaDragPreview = ({\n  items,\n  currentOffset,\n}) => {\n  if (!items || !items.media) {\n    return null;\n  }\n  return (\n    <div\n      className=\"MediaDragPreview\"\n      style={getItemStyles(currentOffset)}\n    >\n      <ListIcon className=\"MediaDragPreview-icon\" />\n      {items.media.length}\n    </div>\n  );\n};\n\nMediaDragPreview.propTypes = {\n  items: PropTypes.object,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MediaDragPreview;\n"]}