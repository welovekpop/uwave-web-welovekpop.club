{"version":3,"sources":["components/MediaList/MediaDragPreview.js"],"names":["getItemStyles","offset","display","x","y","dragIconStyle","verticalAlign","marginRight","MediaDragPreview","_ref","muiTheme","items","currentOffset","media","className","style","color","palette","textColor","length","propTypes","process","env","NODE_ENV","object","isRequired","shape","number"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,gBAAgB,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,SAAOA,SAAS,4BAAO,EAAEC,SAAS,cAAX,EAAP,EAAoC,8BAAe,eAAeD,OAAOE,CAAtB,GAA0B,MAA1B,GAAmCF,OAAOG,CAA1C,GAA8C,KAA7D,CAApC,CAAT,GAAoH,EAAEF,SAAS,MAAX,EAA3H;AACD,CAFD;;AAIA,IAAIG,gBAAgB;AAClBC,iBAAe,QADG;AAElBC,eAAa;AAFK,CAApB;;AAKA,IAAIC,mBAAmB,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,WAAWD,KAAKC,QAApB;AAAA,MACIC,QAAQF,KAAKE,KADjB;AAAA,MAEIC,gBAAgBH,KAAKG,aAFzB;;AAIA,MAAI,CAACD,KAAD,IAAU,CAACA,MAAME,KAArB,EAA4B;AAC1B,WAAO,IAAP;AACD;AACD,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW,kBADM;AAEjBC,WAAOf,cAAcY,aAAd;AAFU,GAAZ,EAGJ,KAAK,CAHD,EAGI,mCAAe;AACxBI,WAAON,SAASO,OAAT,CAAiBC,SADA;AAExBH,WAAOV;AAFiB,GAAf,CAHJ,EAMHM,MAAME,KAAN,CAAYM,MANT,CAAP;AAOD,CAfD;;AAiBAX,iBAAiBY,SAAjB,GAA6BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnEb,YAAU,oBAAUc,MAAV,CAAiBC,UADwC;AAEnEd,SAAO,oBAAUa,MAFkD;AAGnEZ,iBAAe,oBAAUc,KAAV,CAAgB;AAC7BvB,OAAG,oBAAUwB,MAAV,CAAiBF,UADS;AAE7BrB,OAAG,oBAAUuB,MAAV,CAAiBF;AAFS,GAAhB;AAHoD,CAAxC,GAOzB,EAPJ;;kBASe,8BAAejB,gBAAf,C;AACf","file":"MediaDragPreview.js","sourcesContent":["import assign from 'object-assign';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\nimport ListIcon from 'material-ui/svg-icons/action/list';\n\nimport transformStyle from '../../utils/transformStyle';\n\nconst getItemStyles = offset => (\n  offset ? assign(\n    { display: 'inline-block' },\n    transformStyle(`translate(${offset.x}px, ${offset.y}px)`)\n  ) : { display: 'none' }\n);\n\nconst dragIconStyle = {\n  verticalAlign: 'bottom',\n  marginRight: 3\n};\n\nconst MediaDragPreview = ({\n  muiTheme,\n  items,\n  currentOffset\n}) => {\n  if (!items || !items.media) {\n    return null;\n  }\n  return (\n    <div\n      className=\"MediaDragPreview\"\n      style={getItemStyles(currentOffset)}\n    >\n      <ListIcon\n        color={muiTheme.palette.textColor}\n        style={dragIconStyle}\n      />\n      {items.media.length}\n    </div>\n  );\n};\n\nMediaDragPreview.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  items: PropTypes.object,\n  currentOffset: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  })\n};\n\nexport default muiThemeable()(MediaDragPreview);\n"]}