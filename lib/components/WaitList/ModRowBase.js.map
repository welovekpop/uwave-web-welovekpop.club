{"version":3,"sources":["components/WaitList/ModRowBase.js"],"names":["userSource","beginDrag","props","user","endDrag","monitor","result","getDropResult","item","getItem","onMoveUser","position","collect","connect","isDragging","connectDragSource","dragSource","connectDragPreview","dragPreview","_ref2","className","_ref3","ModRowBase","_ref","onOpenCard","onRemoveUser","onClick","propTypes","process","env","NODE_ENV","string","number","isRequired","object","func","event","preventDefault","openUserCard"],"mappings":"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","file":"ModRowBase.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withProps from 'recompose/withProps';\nimport { DragSource } from 'react-dnd';\nimport DragIcon from 'material-ui-icons/DragHandle';\nimport RemoveIcon from 'material-ui-icons/Close';\nimport { WAITLIST_USER } from '../../constants/DDItemTypes';\nimport userCardable from '../../utils/userCardable';\nimport Avatar from '../Avatar';\nimport Username from '../Username';\nimport Position from './Position';\n\nconst userSource = {\n  beginDrag(props) {\n    return { user: props.user };\n  },\n  endDrag(props, monitor) {\n    const result = monitor.getDropResult();\n    const item = monitor.getItem();\n    if (item.user && result) {\n      props.onMoveUser(result.position);\n    }\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  isDragging: monitor.isDragging(),\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n});\n\n/**\n * A Draggable waitlist user row with moderation tools.\n */\nconst ModRowBase = ({\n  className,\n  position,\n  user,\n  isDragging,\n  connectDragPreview,\n  connectDragSource,\n  onOpenCard,\n  onRemoveUser,\n}) => connectDragPreview((\n  <div\n    className={cx(\n      'UserRow',\n      'WaitlistRow',\n      'WaitlistRow--moderate',\n      isDragging && 'is-dragging',\n      className,\n    )}\n  >\n    <Position position={position + 1} />\n    <button\n      className=\"WaitlistRow-card\"\n      onClick={onOpenCard}\n    >\n      <Avatar\n        className=\"UserRow-avatar\"\n        user={user}\n      />\n      <Username className=\"UserRow-username\" user={user} />\n    </button>\n    <div className=\"WaitlistRow-tools\">\n      {connectDragSource((\n        <div className=\"WaitlistRow-tool WaitlistRow-handle\">\n          <DragIcon />\n        </div>\n      ))}\n      <button\n        className=\"WaitlistRow-tool WaitlistRow-remove\"\n        onClick={onRemoveUser}\n      >\n        <RemoveIcon />\n      </button>\n    </div>\n  </div>\n));\n\nModRowBase.propTypes = {\n  className: PropTypes.string,\n  position: PropTypes.number.isRequired,\n  user: PropTypes.object.isRequired,\n  connectDragPreview: PropTypes.func.isRequired,\n  connectDragSource: PropTypes.func.isRequired,\n  onMoveUser: PropTypes.func.isRequired,\n  onRemoveUser: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  DragSource(WAITLIST_USER, userSource, collect),\n  userCardable(),\n  withProps(props => ({\n    onOpenCard(event) {\n      event.preventDefault();\n      props.openUserCard(props.user);\n    },\n  })),\n)(ModRowBase);\n"]}