{"version":3,"sources":["components/WaitList/index.js"],"names":["WaitList","_ref","className","users","_onMoveUser","onMoveUser","_onRemoveUser","onRemoveUser","canMoveUsers","Row","ModRow","SimpleRow","List","itemRenderer","index","key","position","user","length","type","propTypes","process","env","NODE_ENV","PropTypes","string","arrayOf","object","isRequired","bool","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,WAAW,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,YAAYD,KAAKC,SAArB;AAAA,MACIC,QAAQF,KAAKE,KADjB;AAAA,MAEIC,cAAcH,KAAKI,UAFvB;AAAA,MAGIC,gBAAgBL,KAAKM,YAHzB;AAAA,MAIIC,eAAeP,KAAKO,YAJxB;AAKA,MAAIC,MAAMD,eAAeE,eAAf,GAAwBC,kBAAlC;AACA,SAAO,mBAAK,KAAL,EAAY;AACjBT,eAAW,yBAAG,UAAH,EAAe,iBAAf,EAAkC,UAAlC,EAA8CA,SAA9C;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAKU,kBAAL,EAAW;AACpBC,kBAAc,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,GAA7B,EAAkC;AAC9C,aAAO,mBAAKN,GAAL,EAAU;AACfP,mBAAW,yBAAG,cAAH,EAAmBY,QAAQ,CAAR,KAAc,CAAd,IAAmB,yBAAtC,CADI;AAEfE,kBAAUF,KAFK;AAGfG,cAAMd,MAAMW,KAAN,CAHS;AAIfT,oBAAY,SAASA,UAAT,CAAoBW,QAApB,EAA8B;AACxC,iBAAOZ,YAAYD,MAAMW,KAAN,CAAZ,EAA0BE,QAA1B,CAAP;AACD,SANc;AAOfT,sBAAc,SAASA,YAAT,GAAwB;AACpC,iBAAOD,cAAcH,MAAMW,KAAN,CAAd,CAAP;AACD;AATc,OAAV,EAUJC,GAVI,CAAP;AAWD,KAbmB;AAcpBG,YAAQf,MAAMe,MAdM;AAepBC,UAAM;AAfc,GAAX,CAFJ,CAAP;AAmBD,CA1BD;;AA4BAnB,SAASoB,SAAT,GAAqBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3DrB,aAAWsB,mBAAUC,MADsC;AAE3DtB,SAAOqB,mBAAUE,OAAV,CAAkBF,mBAAUG,MAA5B,EAAoCC,UAFgB;AAG3DpB,gBAAcgB,mBAAUK,IAAV,CAAeD,UAH8B;AAI3DvB,cAAYmB,mBAAUM,IAAV,CAAeF,UAJgC;AAK3DrB,gBAAciB,mBAAUM,IAAV,CAAeF;AAL8B,CAAxC,GAMjB,EANJ;eAOe5B,Q,EACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport List from 'react-list';\nimport ModRow from './ModRow';\nimport SimpleRow from './SimpleRow';\n\nconst WaitList = ({\n  className,\n  users,\n  onMoveUser,\n  onRemoveUser,\n  canMoveUsers,\n}) => {\n  const Row = canMoveUsers ? ModRow : SimpleRow;\n  return (\n    <div\n      className={cx(\n        'UserList',\n        'UserList--queue',\n        'WaitList',\n        className,\n      )}\n    >\n      <List\n        itemRenderer={(index, key) => (\n          <Row\n            key={key}\n            className={cx('UserList-row', index % 2 === 0 && 'UserList-row--alternate')}\n            position={index}\n            user={users[index]}\n            onMoveUser={position => onMoveUser(users[index], position)}\n            onRemoveUser={() => onRemoveUser(users[index])}\n          />\n        )}\n        length={users.length}\n        type=\"uniform\"\n      />\n    </div>\n  );\n};\n\nWaitList.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.arrayOf(PropTypes.object).isRequired,\n  canMoveUsers: PropTypes.bool.isRequired,\n  onMoveUser: PropTypes.func.isRequired,\n  onRemoveUser: PropTypes.func.isRequired,\n};\n\nexport default WaitList;\n"]}