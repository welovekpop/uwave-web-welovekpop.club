{"version":3,"sources":["components/FooterBar/NextMedia.js"],"names":["NextMedia","_ref","t","className","playlist","nextMedia","userInWaitlist","userIsDJ","baseEta","mediaEndTime","key","mediaEl","React","createElement","SongTitle","playlistEl","name","etaEl","Eta","base","endTime","Interpolate","i18nKey","eta","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","string","object","bool","number","pure"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,YAAY,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvC,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,WAAWH,KAAKG,QAFpB;AAAA,MAGIC,YAAYJ,KAAKI,SAHrB;AAAA,MAIIC,iBAAiBL,KAAKK,cAJ1B;AAAA,MAKIC,WAAWN,KAAKM,QALpB;AAAA,MAMIC,UAAUP,KAAKO,OANnB;AAAA,MAOIC,eAAeR,KAAKQ,YAPxB;;AASA,MAAI,CAACL,QAAL,EAAe;AACb,WAAO,mBAAK,KAAL,EAAY;AACjBD,iBAAW,yBAAG,WAAH,EAAgBA,SAAhB;AADM,KAAZ,EAEJ,KAAK,CAFD,EAEID,EAAE,6BAAF,CAFJ,CAAP;AAGD;;AAED,MAAIQ,MAAM,WAAV;;AAEA,MAAIH,QAAJ,EAAc;AACZG,UAAM,gBAAN;AACD,GAFD,MAEO,IAAIJ,cAAJ,EAAoB;AACzBI,UAAM,SAAN;AACD;;AAED,MAAIC,UAAUN,YAAYO,eAAMC,aAAN,CAAoBC,kBAApB,EAA+BT,SAA/B,CAAZ,GAAwD,mBAAK,KAAL,EAAY;AAChFF,eAAW;AADqE,GAAZ,EAEnE,KAAK,CAF8D,EAE3DD,EAAE,iBAAF,CAF2D,CAAtE;AAIA,MAAIa,aAAa,mBAAK,MAAL,EAAa;AAC5BZ,eAAW;AADiB,GAAb,EAEd,KAAK,CAFS,EAENC,SAASY,IAFH,CAAjB;AAIA,MAAIC,QAAQ,mBAAKC,YAAL,EAAU;AACpBf,eAAW,eADS;AAEpBgB,UAAMX,OAFc;AAGpBY,aAASX;AAHW,GAAV,CAAZ;AAMA,SAAO,mBAAK,KAAL,EAAY;AACjBN,eAAW,yBAAG,WAAH,EAAgBA,SAAhB;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEIQ,OAFJ,EAEa,mBAAKU,yBAAL,EAAkB;AACpCC,aAASZ,GAD2B;AAEpCN,cAAUW,UAF0B;AAGpCQ,SAAKN;AAH+B,GAAlB,CAFb,CAAP;AAOD,CA7CD;;AA+CAjB,UAAUwB,SAAV,GAAsBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5DzB,KAAG0B,mBAAUC,IAAV,CAAeC,UAD0C;AAE5D3B,aAAWyB,mBAAUG,MAFuC;AAG5D3B,YAAUwB,mBAAUI,MAHwC;AAI5D3B,aAAWuB,mBAAUI,MAJuC;AAK5D1B,kBAAgBsB,mBAAUK,IAAV,CAAeH,UAL6B;AAM5DvB,YAAUqB,mBAAUK,IAAV,CAAeH,UANmC;AAO5DtB,WAASoB,mBAAUM,MAPyC;AAQ5DzB,gBAAcmB,mBAAUM;AARoC,CAAxC,GASlB,EATJ;;eAUe,sBAAQ,8BAAR,EAAqBC,aAArB,EAA2BnC,SAA3B,C,EACf","file":"NextMedia.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate, Interpolate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport SongTitle from '../SongTitle';\nimport Eta from './Eta';\n\nconst NextMedia = ({\n  t,\n  className,\n  playlist,\n  nextMedia,\n  userInWaitlist,\n  userIsDJ,\n  baseEta,\n  mediaEndTime,\n}) => {\n  if (!playlist) {\n    return (\n      <div className={cx('NextMedia', className)}>\n        {t('playlists.noPlaylistsCreate')}\n      </div>\n    );\n  }\n\n  let key = 'eta.empty';\n  if (userIsDJ) {\n    key = 'eta.playingNow';\n  } else if (userInWaitlist) {\n    key = 'eta.eta';\n  }\n\n  const mediaEl = nextMedia\n    ? <SongTitle {...nextMedia} />\n    : <div className=\"SongTitle\">{t('playlists.empty')}</div>;\n  const playlistEl = (\n    <span className=\"NextMedia-playlist\">{playlist.name}</span>\n  );\n  const etaEl = (\n    <Eta className=\"NextMedia-eta\" base={baseEta} endTime={mediaEndTime} />\n  );\n  return (\n    <div className={cx('NextMedia', className)}>\n      {mediaEl}\n      <Interpolate\n        i18nKey={key}\n        playlist={playlistEl}\n        eta={etaEl}\n      />\n    </div>\n  );\n};\n\nNextMedia.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  playlist: PropTypes.object,\n  nextMedia: PropTypes.object,\n  userInWaitlist: PropTypes.bool.isRequired,\n  userIsDJ: PropTypes.bool.isRequired,\n  baseEta: PropTypes.number,\n  mediaEndTime: PropTypes.number,\n};\n\nexport default compose(\n  translate(),\n  pure,\n)(NextMedia);\n"]}