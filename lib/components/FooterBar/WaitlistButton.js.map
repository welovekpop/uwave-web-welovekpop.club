{"version":3,"sources":["components/FooterBar/WaitlistButton.js"],"names":["inlineIconStyle","width","height","buttonStyle","fontSize","textTransform","lineHeight","WaitlistButton","_ref","t","muiTheme","userInWaitlist","isLocked","onClick","icon","iconColor","flatButton","textColor","disabledTextColor","style","color","className","disabled","backgroundColor","palette","primary1Color","hoverColor","primary2Color","rippleColor","primary3Color","propTypes","process","env","NODE_ENV","func","isRequired","object","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,kBAAkB;AACpBC,SAAO,KADa;AAEpBC,UAAQ;AAFY,CAAtB;;AAKA,IAAIC,cAAc;AAChBD,UAAQ,MADQ;AAEhBE,YAAU,MAFM;AAGhBC,iBAAe,WAHC;AAIhB;AACA;AACAC,cAAY;AANI,CAAlB;;AASA,IAAIC,iBAAiB,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjD,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,WAAWF,KAAKE,QADpB;AAAA,MAEIC,iBAAiBH,KAAKG,cAF1B;AAAA,MAGIC,WAAWJ,KAAKI,QAHpB;AAAA,MAIIC,UAAUL,KAAKK,OAJnB;;AAMA,MAAIC,OAAO,KAAK,CAAhB;AACA,MAAIF,QAAJ,EAAc;AACZ,QAAIG;AACJ;AACAJ,qBAAiBD,SAASM,UAAT,CAAoBC,SAArC;AACA;AACAP,aAASM,UAAT,CAAoBE,iBAJpB;AAKAJ,WAAO,mCAAiB;AACtBK,aAAOnB,eADe;AAEtBoB,aAAOL;AAFe,KAAjB,CAAP;AAID;;AAED,SAAO,yCAAiB;AACtBM,eAAW,0BAAG,gBAAH,EAAqBT,YAAY,wBAAjC,CADW;AAEtBU,cAAUV,YAAY,CAACD,cAFD;AAGtBE,aAASA,OAHa;AAItBM,WAAOhB,WAJe;AAKtBoB,qBAAiBb,SAASc,OAAT,CAAiBC,aALZ;AAMtBC,gBAAYhB,SAASc,OAAT,CAAiBG,aANP;AAOtBC,iBAAalB,SAASc,OAAT,CAAiBK;AAPR,GAAjB,EAQJ,KAAK,CARD,EAQIf,IARJ,EAQUF,YAAY,GARtB,EAQ2BD,iBAAiBF,EAAE,gBAAF,CAAjB,GAAuCA,EAAE,eAAF,CARlE,CAAP;AASD,CA7BD;;AA+BAF,eAAeuB,SAAf,GAA2BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjExB,KAAG,oBAAUyB,IAAV,CAAeC,UAD+C;AAEjEzB,YAAU,oBAAU0B,MAAV,CAAiBD,UAFsC;AAGjExB,kBAAgB,oBAAU0B,IAHuC;AAIjEzB,YAAU,oBAAUyB,IAJ6C;AAKjExB,WAAS,oBAAUqB,IAAV,CAAeC;AALyC,CAAxC,GAMvB,EANJ;;kBAQe,uBAAQ,6BAAR,EAAwB,8BAAxB,kBAA2C5B,cAA3C,C;AACf","file":"WaitlistButton.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\nimport FlatButton from 'material-ui/FlatButton';\nimport LockedIcon from 'material-ui/svg-icons/action/lock';\n\nconst inlineIconStyle = {\n  width: '1em',\n  height: '1em'\n};\n\nconst buttonStyle = {\n  height: '100%',\n  fontSize: '11pt',\n  textTransform: 'uppercase',\n  // Align multiline button text nicely. Good for languages where \"Join Waitlist\"\n  // becomes a longer phrase, especially.\n  lineHeight: '24px'\n};\n\nconst WaitlistButton = ({\n  t,\n  muiTheme,\n  userInWaitlist,\n  isLocked,\n  onClick\n}) => {\n  let icon;\n  if (isLocked) {\n    const iconColor =\n      // The user can still leave the waitlist, if it's locked…\n      userInWaitlist ? muiTheme.flatButton.textColor :\n      // …but cannot join the waitlist.\n      muiTheme.flatButton.disabledTextColor;\n    icon = (\n      <LockedIcon\n        style={inlineIconStyle}\n        color={iconColor}\n      />\n    );\n  }\n\n  return (\n    <FlatButton\n      className={cx('FooterBar-join', isLocked && 'FooterBar-join--locked')}\n      disabled={isLocked && !userInWaitlist}\n      onClick={onClick}\n      style={buttonStyle}\n      backgroundColor={muiTheme.palette.primary1Color}\n      hoverColor={muiTheme.palette.primary2Color}\n      rippleColor={muiTheme.palette.primary3Color}\n    >\n      {icon}\n      {isLocked && ' '}\n      {userInWaitlist ? t('waitlist.leave') : t('waitlist.join')}\n    </FlatButton>\n  );\n};\n\nWaitlistButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  muiTheme: PropTypes.object.isRequired,\n  userInWaitlist: PropTypes.bool,\n  isLocked: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default compose(\n  muiThemeable(),\n  translate(),\n  pure\n)(WaitlistButton);\n"]}