{"version":3,"sources":["components/FooterBar/SkipButton.js"],"names":["popoverPosition","marginThreshold","anchorOrigin","horizontal","vertical","transformOrigin","reasons","_ref","className","_ref2","SkipButton","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","isSkipping","isOpen","anchor","handleOpen","event","props","userIsDJ","handleSkip","setState","currentTarget","handleClose","reason","Promise","resolve","onSkip","then","prototype","render","t","message","user","currentDJ","username","title","onClick","createElement","open","anchorEl","onClose","classes","paper","map","name","label","onSelect","Component","propTypes","process","env","NODE_ENV","func","isRequired","bool","object"],"mappings":"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","file":"SkipButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport Popover from 'material-ui/Popover';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport { CircularProgress } from 'material-ui/Progress';\nimport SkipIcon from 'material-ui-icons/SkipNext';\nimport SkipReasonsList from './SkipReasonsList';\n\nconst popoverPosition = {\n  marginThreshold: 0,\n  anchorOrigin: { horizontal: 'center', vertical: 'bottom' },\n  transformOrigin: { horizontal: 'center', vertical: 'bottom' },\n};\n\n// TODO not hardcode these maybe?\nconst reasons = [\n  'genre',\n  'history',\n  'unavailable',\n  'nsfw',\n  'duration',\n  'downvotes',\n  'other',\n];\n\nclass SkipButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    userIsDJ: PropTypes.bool.isRequired,\n    currentDJ: PropTypes.object.isRequired,\n    onSkip: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isSkipping: false,\n    isOpen: false,\n    anchor: null,\n  };\n\n  handleOpen = (event) => {\n    if (this.props.userIsDJ) {\n      this.handleSkip('');\n      return;\n    }\n\n    this.setState({\n      isOpen: true,\n      anchor: event.currentTarget,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleSkip = (reason) => {\n    this.setState({ isSkipping: true });\n    Promise.resolve(this.props.onSkip(reason)).then(() => {\n      this.setState({ isSkipping: false });\n    });\n    this.handleClose();\n  };\n\n  render() {\n    const { t } = this.props;\n\n    if (this.state.isSkipping) {\n      return (\n        <span>\n          <div className=\"SkipButton is-loading\">\n            <CircularProgress className=\"SkipButton-loader\" />\n          </div>\n        </span>\n      );\n    }\n\n    let message = t('booth.skip.self');\n    if (!this.props.userIsDJ) {\n      message = t('booth.skip.other', { user: this.props.currentDJ.username });\n    }\n\n    return (\n      <span>\n        <Tooltip title={message}>\n          <IconButton className=\"SkipButton\" onClick={this.handleOpen}>\n            <SkipIcon />\n          </IconButton>\n        </Tooltip>\n        <Popover\n          open={this.state.isOpen}\n          anchorEl={this.state.anchor}\n          onClose={this.handleClose}\n          classes={{ paper: 'SkipButton-list' }}\n          {...popoverPosition}\n        >\n          <SkipReasonsList\n            reasons={reasons.map(name => ({\n              name,\n              label: t(`booth.skip.reasons.${name}`),\n            }))}\n            onSelect={this.handleSkip}\n          />\n        </Popover>\n      </span>\n    );\n  }\n}\n\nexport default compose(\n  translate(),\n  pure,\n)(SkipButton);\n"]}