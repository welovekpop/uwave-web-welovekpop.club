{"version":3,"sources":["components/FooterBar/SkipButton.js"],"names":["popoverPosition","marginThreshold","anchorOrigin","horizontal","vertical","transformOrigin","reasons","_ref","className","CircularProgress","_ref2","SkipIcon","SkipButton","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","isSkipping","isOpen","anchor","handleOpen","event","props","userIsDJ","handleSkip","setState","currentTarget","handleClose","reason","Promise","resolve","onSkip","then","_proto","prototype","render","t","message","user","currentDJ","username","Tooltip","title","IconButton","onClick","React","createElement","Popover","open","anchorEl","onClose","classes","paper","SkipReasonsList","map","name","label","onSelect","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","bool","object","pure"],"mappings":"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","file":"SkipButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport Popover from 'material-ui/Popover';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport { CircularProgress } from 'material-ui/Progress';\nimport SkipIcon from '@material-ui/icons/SkipNext';\nimport SkipReasonsList from './SkipReasonsList';\n\nconst popoverPosition = {\n  marginThreshold: 0,\n  anchorOrigin: { horizontal: 'center', vertical: 'bottom' },\n  transformOrigin: { horizontal: 'center', vertical: 'bottom' },\n};\n\n// TODO not hardcode these maybe?\nconst reasons = [\n  'genre',\n  'history',\n  'unavailable',\n  'nsfw',\n  'duration',\n  'downvotes',\n  'other',\n];\n\nclass SkipButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    userIsDJ: PropTypes.bool.isRequired,\n    currentDJ: PropTypes.object.isRequired,\n    onSkip: PropTypes.func.isRequired,\n  };\n\n  state = {\n    isSkipping: false,\n    isOpen: false,\n    anchor: null,\n  };\n\n  handleOpen = (event) => {\n    if (this.props.userIsDJ) {\n      this.handleSkip('');\n      return;\n    }\n\n    this.setState({\n      isOpen: true,\n      anchor: event.currentTarget,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      isOpen: false,\n    });\n  };\n\n  handleSkip = (reason) => {\n    this.setState({ isSkipping: true });\n    Promise.resolve(this.props.onSkip(reason)).then(() => {\n      this.setState({ isSkipping: false });\n    });\n    this.handleClose();\n  };\n\n  render() {\n    const { t } = this.props;\n\n    if (this.state.isSkipping) {\n      return (\n        <span>\n          <div className=\"SkipButton is-loading\">\n            <CircularProgress className=\"SkipButton-loader\" />\n          </div>\n        </span>\n      );\n    }\n\n    let message = t('booth.skip.self');\n    if (!this.props.userIsDJ) {\n      message = t('booth.skip.other', { user: this.props.currentDJ.username });\n    }\n\n    return (\n      <span>\n        <Tooltip title={message}>\n          <IconButton className=\"SkipButton\" onClick={this.handleOpen}>\n            <SkipIcon />\n          </IconButton>\n        </Tooltip>\n        <Popover\n          open={this.state.isOpen}\n          anchorEl={this.state.anchor}\n          onClose={this.handleClose}\n          classes={{ paper: 'SkipButton-list' }}\n          {...popoverPosition}\n        >\n          <SkipReasonsList\n            reasons={reasons.map(name => ({\n              name,\n              label: t(`booth.skip.reasons.${name}`),\n            }))}\n            onSelect={this.handleSkip}\n          />\n        </Popover>\n      </span>\n    );\n  }\n}\n\nexport default compose(\n  translate(),\n  pure,\n)(SkipButton);\n"]}