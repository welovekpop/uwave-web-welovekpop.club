{"version":3,"sources":["components/FooterBar/SkipButton.js"],"names":["fullSizeStyle","height","width","popoverProps","anchorOrigin","horizontal","vertical","targetOrigin","reasons","_ref","className","size","_ref2","SkipButton","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","isSkipping","isOpen","anchor","handleOpen","event","props","userIsDJ","handleSkip","setState","currentTarget","handleClose","reason","Promise","resolve","onSkip","then","prototype","render","t","message","user","currentDJ","username","tooltip","tooltipPosition","style","onClick","createElement","open","anchorEl","onRequestClose","map","name","label","onSelect","Component","propTypes","process","env","NODE_ENV","func","isRequired","bool","object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,gBAAgB;AAClBC,UAAQ,MADU;AAElBC,SAAO;AAFW,CAApB;;AAKA,IAAIC,eAAe;AACjBC,gBAAc,EAAEC,YAAY,QAAd,EAAwBC,UAAU,QAAlC,EADG;AAEjBC,gBAAc,EAAEF,YAAY,QAAd,EAAwBC,UAAU,QAAlC;AAFG,CAAnB;;AAKA;AACA,IAAIE,UAAU,CAAC,OAAD,EAAU,SAAV,EAAqB,aAArB,EAAoC,MAApC,EAA4C,UAA5C,EAAwD,WAAxD,EAAqE,OAArE,CAAd;;AAEA,IAAIC,OAAO,mBAAK,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,mBAAK,KAAL,EAAY;AAC9CC,aAAW;AADmC,CAAZ,EAEjC,KAAK,CAF4B,EAEzB,qCAAa;AACtBC,QAAM,MADgB;AAEtBD,aAAW;AAFW,CAAb,CAFyB,CAAzB,CAAX;;AAOA,IAAIE,QAAQ,uCAAe,EAAf,CAAZ;;AAEA,IAAIC,aAAa,UAAUC,gBAAV,EAA4B;AAC3C,0BAAUD,UAAV,EAAsBC,gBAAtB;;AAEA,WAASD,UAAT,GAAsB;AACpB,QAAIE,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEA,kCAAgB,IAAhB,EAAsBJ,UAAtB;;AAEA,SAAK,IAAIK,OAAOC,UAAUC,MAArB,EAA6BC,OAAOC,MAAMJ,IAAN,CAApC,EAAiDK,OAAO,CAA7D,EAAgEA,OAAOL,IAAvE,EAA6EK,MAA7E,EAAqF;AACnFF,WAAKE,IAAL,IAAaJ,UAAUI,IAAV,CAAb;AACD;;AAED,WAAON,QAAQF,SAASC,QAAQ,yCAA2B,IAA3B,EAAiCF,iBAAiBU,IAAjB,CAAsBC,KAAtB,CAA4BX,gBAA5B,EAA8C,CAAC,IAAD,EAAOY,MAAP,CAAcL,IAAd,CAA9C,CAAjC,CAAR,EAA8GL,KAAvH,GAA+HA,MAAMW,KAAN,GAAc;AAC1JC,kBAAY,KAD8I;AAE1JC,cAAQ,KAFkJ;AAG1JC,cAAQ;AAHkJ,KAA7I,EAIZd,MAAMe,UAAN,GAAmB,UAAUC,KAAV,EAAiB;AACrC,UAAIhB,MAAMiB,KAAN,CAAYC,QAAhB,EAA0B;AACxBlB,cAAMmB,UAAN,CAAiB,EAAjB;AACA;AACD;;AAEDnB,YAAMoB,QAAN,CAAe;AACbP,gBAAQ,IADK;AAEbC,gBAAQE,MAAMK;AAFD,OAAf;AAID,KAdc,EAcZrB,MAAMsB,WAAN,GAAoB,YAAY;AACjCtB,YAAMoB,QAAN,CAAe;AACbP,gBAAQ;AADK,OAAf;AAGD,KAlBc,EAkBZb,MAAMmB,UAAN,GAAmB,UAAUI,MAAV,EAAkB;AACtCvB,YAAMoB,QAAN,CAAe,EAAER,YAAY,IAAd,EAAf;AACAY,cAAQC,OAAR,CAAgBzB,MAAMiB,KAAN,CAAYS,MAAZ,CAAmBH,MAAnB,CAAhB,EAA4CI,IAA5C,CAAiD,YAAY;AAC3D3B,cAAMoB,QAAN,CAAe,EAAER,YAAY,KAAd,EAAf;AACD,OAFD;AAGAZ,YAAMsB,WAAN;AACD,KAxBc,EAwBZvB,KAxBI,GAwBI,yCAA2BC,KAA3B,EAAkCC,IAAlC,CAxBX;AAyBD;;AAEDJ,aAAW+B,SAAX,CAAqBC,MAArB,GAA8B,SAASA,MAAT,GAAkB;AAC9C,QAAIC,IAAI,KAAKb,KAAL,CAAWa,CAAnB;;AAGA,QAAI,KAAKnB,KAAL,CAAWC,UAAf,EAA2B;AACzB,aAAOnB,IAAP;AACD;;AAED,QAAIsC,UAAUD,EAAE,iBAAF,CAAd;AACA,QAAI,CAAC,KAAKb,KAAL,CAAWC,QAAhB,EAA0B;AACxBa,gBAAUD,EAAE,kBAAF,EAAsB,EAAEE,MAAM,KAAKf,KAAL,CAAWgB,SAAX,CAAqBC,QAA7B,EAAtB,CAAV;AACD;;AAED,WAAO,mBAAK,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,yCAAiB;AAC/CC,eAASJ,OADsC;AAE/CK,uBAAiB,YAF8B;AAG/CC,aAAOrD,aAHwC;AAI/CsD,eAAS,KAAKvB;AAJiC,KAAjB,EAK7B,KAAK,CALwB,EAKrBnB,KALqB,CAAzB,EAKY,gBAAM2C,aAAN,oBAEjB,uBAAS;AACPC,YAAM,KAAK7B,KAAL,CAAWE,MADV;AAEP4B,gBAAU,KAAK9B,KAAL,CAAWG,MAFd;AAGP4B,sBAAgB,KAAKpB;AAHd,KAAT,EAIGnC,YAJH,CAFiB,EAOjB,8CAAsB;AACpBK,eAASA,QAAQmD,GAAR,CAAY,UAAUC,IAAV,EAAgB;AACnC,eAAO;AACLA,gBAAMA,IADD;AAELC,iBAAOf,EAAE,wBAAwBc,IAA1B;AAFF,SAAP;AAID,OALQ,CADW;AAOpBE,gBAAU,KAAK3B;AAPK,KAAtB,CAPiB,CALZ,CAAP;AAsBD,GAnCD;;AAqCA,SAAOtB,UAAP;AACD,CA7EgB,CA6Ef,gBAAMkD,SA7ES,CAAjB;;AA+EAlD,WAAWmD,SAAX,GAAuBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7DrB,KAAG,oBAAUsB,IAAV,CAAeC,UAD2C;AAE7DnC,YAAU,oBAAUoC,IAAV,CAAeD,UAFoC;AAG7DpB,aAAW,oBAAUsB,MAAV,CAAiBF,UAHiC;AAI7D3B,UAAQ,oBAAU0B,IAAV,CAAeC;AAJsC,CAAxC,GAKnB,EALJ;;kBAQe,uBAAQ,8BAAR,kBAA2BxD,UAA3B,C;AACf","file":"SkipButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport Popover from 'material-ui/Popover';\nimport IconButton from 'material-ui/IconButton';\nimport SkipIcon from 'material-ui/svg-icons/av/skip-next';\nimport Loader from '../Loader';\nimport SkipReasonsList from './SkipReasonsList';\n\nconst fullSizeStyle = {\n  height: '100%',\n  width: '100%'\n};\n\nconst popoverProps = {\n  anchorOrigin: { horizontal: 'middle', vertical: 'bottom' },\n  targetOrigin: { horizontal: 'middle', vertical: 'bottom' }\n};\n\n// TODO not hardcode these maybe?\nconst reasons = [\n  'genre',\n  'history',\n  'unavailable',\n  'nsfw',\n  'duration',\n  'downvotes',\n  'other'\n];\n\nclass SkipButton extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    userIsDJ: PropTypes.bool.isRequired,\n    currentDJ: PropTypes.object.isRequired,\n    onSkip: PropTypes.func.isRequired\n  };\n\n  state = {\n    isSkipping: false,\n    isOpen: false,\n    anchor: null\n  };\n\n  handleOpen = (event) => {\n    if (this.props.userIsDJ) {\n      this.handleSkip('');\n      return;\n    }\n\n    this.setState({\n      isOpen: true,\n      anchor: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      isOpen: false\n    });\n  };\n\n  handleSkip = (reason) => {\n    this.setState({ isSkipping: true });\n    Promise.resolve(this.props.onSkip(reason)).then(() => {\n      this.setState({ isSkipping: false });\n    });\n    this.handleClose();\n  };\n\n  render() {\n    const { t } = this.props;\n\n    if (this.state.isSkipping) {\n      return (\n        <span>\n          <div className=\"SkipButton is-loading\">\n            <Loader size=\"tiny\" className=\"SkipButton-loader\" />\n          </div>\n        </span>\n      );\n    }\n\n    let message = t('booth.skip.self');\n    if (!this.props.userIsDJ) {\n      message = t('booth.skip.other', { user: this.props.currentDJ.username });\n    }\n\n    return (\n      <span>\n        <IconButton\n          tooltip={message}\n          tooltipPosition=\"top-center\"\n          style={fullSizeStyle}\n          onClick={this.handleOpen}\n        >\n          <SkipIcon />\n        </IconButton>\n        <Popover\n          open={this.state.isOpen}\n          anchorEl={this.state.anchor}\n          onRequestClose={this.handleClose}\n          {...popoverProps}\n        >\n          <SkipReasonsList\n            reasons={reasons.map(name => ({\n              name,\n              label: t(`booth.skip.reasons.${name}`)\n            }))}\n            onSelect={this.handleSkip}\n          />\n        </Popover>\n      </span>\n    );\n  }\n}\n\nexport default compose(\n  translate(),\n  pure\n)(SkipButton);\n"]}