{"version":3,"sources":["components/FooterBar/Responses/Button.js"],"names":["Button","_ref","onClick","disabled","count","children","tooltip","Tooltip","title","placement","className","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","element","bool","number","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AACA;AAEA,IAAIA,SAAS,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACjC,MAAIC,UAAUD,KAAKC,OAAnB;AAAA,MACIC,WAAWF,KAAKE,QADpB;AAAA,MAEIC,QAAQH,KAAKG,KAFjB;AAAA,MAGIC,WAAWJ,KAAKI,QAHpB;AAAA,MAIIC,UAAUL,KAAKK,OAJnB;AAKA,SAAQ;AACN,uBAAKC,gBAAL,EAAc;AACZC,aAAOF,OADK;AAEZG,iBAAW;AAFC,KAAd,EAGG,KAAK,CAHR,EAGW,mBAAK,KAAL,EAAY,EAAZ,EAAgB,KAAK,CAArB,EAAwB,mBAAK,QAAL,EAAe;AAChDC,iBAAW,yBAAG,gBAAH,EAAqBP,YAAY,0BAAjC,CADqC;AAEhDA,gBAAUA,QAFsC;AAGhDD,eAASA;AAHuC,KAAf,EAIhC,KAAK,CAJ2B,EAIxB,mBAAK,KAAL,EAAY;AACrBQ,iBAAW;AADU,KAAZ,EAER,KAAK,CAFG,EAEA,mBAAK,KAAL,EAAY;AACrBA,iBAAW;AADU,KAAZ,EAER,KAAK,CAFG,EAEAL,QAFA,CAFA,EAIW,mBAAK,MAAL,EAAa;AACjCK,iBAAW;AADsB,KAAb,EAEnB,KAAK,CAFc,EAEXN,KAFW,CAJX,CAJwB,CAAxB,CAHX;AADF;AAgBD,CAtBD;;AAwBAJ,OAAOW,SAAP,GAAmBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACzDZ,WAASa,mBAAUC,IAAV,CAAeC,UADiC;AAEzDZ,YAAUU,mBAAUG,OAAV,CAAkBD,UAF6B;AAGzDd,YAAUY,mBAAUI,IAHqC;AAIzDf,SAAOW,mBAAUK,MAJwC;AAKzDd,WAASS,mBAAUM;AALsC,CAAxC,GAMf,EANJ;eAOerB,M,EACf","file":"Button.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'material-ui/Tooltip';\n\n/* eslint-disable */\nconst Button = ({\n  onClick,\n  disabled,\n  count,\n  children,\n  tooltip,\n}) => (\n  // Wrapped in a <div> so the tooltip can listen for mouse events.\n  <Tooltip title={tooltip} placement=\"top\">\n    <div>\n      <button\n        className={cx('ResponseButton', disabled && 'ResponseButton--disabled')}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        <div className=\"ResponseButton-content\">\n          <div className=\"ResponseButton-icon\">{children}</div>\n          <span className=\"ResponseButton-count\">{count}</span>\n        </div>\n      </button>\n    </div>\n  </Tooltip>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n  disabled: PropTypes.bool,\n  count: PropTypes.number,\n  tooltip: PropTypes.string,\n};\n\nexport default Button;\n"]}