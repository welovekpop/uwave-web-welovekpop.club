{"version":3,"sources":["components/Dialogs/LoginDialog/RegisterForm.js"],"names":["enhance","_ref","React","Fragment","SocialLogin","Separator","_ref2","UserIcon","nativeColor","_ref3","EmailIcon","_ref4","PasswordIcon","_ref5","className","CircularProgress","size","RegisterForm","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","busy","agreed","captchaResponse","handleSubmit","event","preventDefault","setState","props","onRegister","username","value","email","password","grecaptcha","handleCaptchaResponse","response","handleTosCheckbox","checked","refUsername","refEmail","refPassword","_proto","prototype","componentWillReceiveProps","renderCaptcha","useReCaptcha","FormGroup","ReCaptcha","sitekey","reCaptchaSiteKey","onResponse","theme","render","_props","t","error","supportsSocialAuth","_state","captchaOk","Form","onSubmit","message","createElement","TextField","ref","placeholder","icon","autoFocus","type","FormControlLabel","control","Checkbox","onChange","label","Interpolate","i18nKey","privacyPolicy","target","rel","href","Button","disabled","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","bool","string","object"],"mappings":"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","file":"RegisterForm.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate, Interpolate } from 'react-i18next';\nimport { FormControlLabel } from 'material-ui/Form';\nimport Checkbox from 'material-ui/Checkbox';\nimport { CircularProgress } from 'material-ui/Progress';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PasswordIcon from '@material-ui/icons/Lock';\nimport UserIcon from '@material-ui/icons/Person';\nimport Form from '../../Form';\nimport FormGroup from '../../Form/Group';\nimport TextField from '../../Form/TextField';\nimport Button from '../../Form/Button';\nimport ReCaptcha from '../../ReCaptcha';\nimport SocialLogin from './SocialLogin';\nimport Separator from './Separator';\n\nconst enhance = translate();\n\nclass RegisterForm extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    useReCaptcha: PropTypes.bool,\n    reCaptchaSiteKey: PropTypes.string,\n    supportsSocialAuth: PropTypes.bool,\n    error: PropTypes.object,\n\n    onRegister: PropTypes.func,\n  };\n\n  state = {\n    busy: false,\n    agreed: false,\n    captchaResponse: null,\n  };\n\n  componentWillReceiveProps() {\n    this.setState({ busy: false });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ busy: true });\n    this.props.onRegister({\n      username: this.username.value,\n      email: this.email.value,\n      password: this.password.value,\n      grecaptcha: this.state.captchaResponse,\n    });\n  };\n\n  handleCaptchaResponse = (response) => {\n    this.setState({\n      captchaResponse: response,\n    });\n  };\n\n  handleTosCheckbox = (event, checked) => {\n    this.setState({\n      agreed: checked,\n    });\n  };\n\n  refUsername = (username) => {\n    this.username = username;\n  };\n\n  refEmail = (email) => {\n    this.email = email;\n  };\n\n  refPassword = (password) => {\n    this.password = password;\n  };\n\n  renderCaptcha() {\n    if (!this.props.useReCaptcha) {\n      return null;\n    }\n    return (\n      <FormGroup>\n        <ReCaptcha\n          sitekey={this.props.reCaptchaSiteKey}\n          onResponse={this.handleCaptchaResponse}\n          theme=\"dark\"\n        />\n      </FormGroup>\n    );\n  }\n\n  render() {\n    const {\n      t, error, supportsSocialAuth, useReCaptcha,\n    } = this.props;\n    const { agreed, busy, captchaResponse } = this.state;\n    const captchaOk = !useReCaptcha || !!captchaResponse;\n\n    return (\n      <Form className=\"RegisterForm\" onSubmit={this.handleSubmit}>\n        {error && <FormGroup>{error.message}</FormGroup>}\n        {supportsSocialAuth && (\n          <React.Fragment>\n            <SocialLogin />\n            <Separator />\n          </React.Fragment>\n        )}\n        <FormGroup>\n          <TextField\n            ref={this.refUsername}\n            className=\"RegisterForm-field\"\n            placeholder={t('login.username')}\n            icon={<UserIcon nativeColor=\"#9f9d9e\" />}\n            autoFocus\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            ref={this.refEmail}\n            className=\"RegisterForm-field\"\n            type=\"email\"\n            placeholder={t('login.email')}\n            icon={<EmailIcon nativeColor=\"#9f9d9e\" />}\n          />\n        </FormGroup>\n        <FormGroup>\n          <TextField\n            ref={this.refPassword}\n            className=\"RegisterForm-field\"\n            type=\"password\"\n            placeholder={t('login.password')}\n            icon={<PasswordIcon nativeColor=\"#9f9d9e\" />}\n          />\n        </FormGroup>\n\n        {this.renderCaptcha()}\n\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={agreed}\n                onChange={this.handleTosCheckbox}\n              />\n            }\n            label={\n              <Interpolate\n                i18nKey=\"login.agree\"\n                privacyPolicy={\n                  <a target=\"_blank\" rel=\"noreferrer noopener\" href=\"/privacy.html\">\n                    {t('login.privacyPolicy')}\n                  </a>\n                }\n              />\n            }\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Button\n            className=\"RegisterForm-submit\"\n            disabled={busy || !agreed || !captchaOk}\n          >\n            {busy\n              ? <div className=\"Button-loading\"><CircularProgress size=\"100%\" /></div>\n              : t('login.register')\n            }\n          </Button>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default enhance(RegisterForm);\n"]}