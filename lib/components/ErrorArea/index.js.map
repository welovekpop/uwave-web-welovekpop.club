{"version":3,"sources":["components/ErrorArea/index.js"],"names":["_dec","_class","_class2","_temp2","_initialiseProps","wrapperStyle","pointerEvents","snackbarStyle","height","lineHeight","padding","errorThemeSelector","props","muiTheme","notifyTheme","palette","notifications","snackbar","textColor","errorTextColor","backgroundColor","errorBackgroundColor","ErrorArea","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","prototype","getChildContext","render","error","className","style","bodyStyle","open","message","onRequestClose","handleDismiss","Component","childContextTypes","object","_this2","_props","onDismiss","default","propTypes","process","env","NODE_ENV","string","func","isRequired"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Snackbar from 'material-ui/Snackbar';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\nimport { createSelector } from 'reselect';\n\nconst wrapperStyle = {\n  // Prevent clicks from hitting the overlay. Ensures the chat input can be\n  // focused even if a snackbar is open.\n  pointerEvents: 'none'\n};\nconst snackbarStyle = {\n  // Allow multiline snackbars.\n  height: 'auto',\n  lineHeight: '24px',\n  padding: '12px 24px',\n  // Allow clicks on snackbars themselves.\n  pointerEvents: 'initial'\n};\n\n// Create a material-ui theme with the error notification theme applied.\n// Using a selector for memoization.\nexport const errorThemeSelector = createSelector(\n  props => props.muiTheme,\n  (muiTheme) => {\n    const notifyTheme = muiTheme.palette.notifications;\n    return {\n      muiTheme: {\n        ...muiTheme,\n        snackbar: {\n          ...muiTheme.snackbar,\n          textColor: notifyTheme.errorTextColor,\n          backgroundColor: notifyTheme.errorBackgroundColor\n        }\n      }\n    };\n  }\n);\n\n@muiThemeable()\nexport default class ErrorArea extends React.Component {\n  static propTypes = {\n    error: PropTypes.string,\n    onDismiss: PropTypes.func.isRequired,\n    // Used in the theme selector above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    muiTheme: PropTypes.object.isRequired\n  };\n\n  static childContextTypes = {\n    muiTheme: PropTypes.object\n  };\n\n  getChildContext() {\n    return errorThemeSelector(this.props);\n  }\n\n  handleDismiss = (...args) => {\n    this.props.onDismiss(...args);\n  };\n\n  render() {\n    const { error } = this.props;\n\n    return (\n      <div className=\"ErrorArea\">\n        <Snackbar\n          style={wrapperStyle}\n          bodyStyle={snackbarStyle}\n          open={!!error}\n          message={error || ''}\n          onRequestClose={this.handleDismiss}\n        />\n      </div>\n    );\n  }\n}\n"]}