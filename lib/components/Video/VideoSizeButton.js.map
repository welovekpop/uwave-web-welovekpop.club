{"version":3,"sources":["components/Video/VideoSizeButton.js"],"names":["paths","small","large","VideoSizeButton","_ref","t","videoSize","onToggleVideoSize","onClick","tooltip","tooltipPosition","viewBox","d","fillRule","propTypes","process","env","NODE_ENV","func","isRequired","oneOf","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;;;AAEA;;AANA;AAOA,IAAIA,QAAQ;AACV;AACAC,SAAO,4DAFG;AAGV;AACAC,SAAO;AAJG,CAAZ;;AAOA,IAAIC,kBAAkB,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,oBAAoBH,KAAKG,iBAF7B;AAGA,SAAO,yCAAiB;AACtBC,aAASD,iBADa;AAEtBE,aAASH,cAAc,OAAd,GAAwBD,EAAE,4BAAF,CAAxB,GAA0DA,EAAE,2BAAF,CAF7C;AAGtBK,qBAAiB;AAHK,GAAjB,EAIJ,KAAK,CAJD,EAII,sCAAc;AACvBC,aAAS;AADc,GAAd,EAER,KAAK,CAFG,EAEA,mBAAK,MAAL,EAAa;AACtBC,OAAGZ,MAAMM,SAAN,CADmB;AAEtBO,cAAU;AAFY,GAAb,CAFA,CAJJ,CAAP;AAUD,CAdD;;AAgBAV,gBAAgBW,SAAhB,GAA4BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClEZ,KAAG,oBAAUa,IAAV,CAAeC,UADgD;AAElEb,aAAW,oBAAUc,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,EAAoCD,UAFmB;AAGlEZ,qBAAmB,oBAAUW,IAAV,CAAeC;AAHgC,CAAxC,GAIxB,EAJJ;;AAMA,IAAIE,kBAAkB,wCAAyB;AAC7Cf;AAD6C,CAAzB,CAAtB;AAGA,IAAIgB,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO;AACLhB,uBAAmB,SAASA,iBAAT,GAA6B;AAC9C,aAAOgB,SAAS,8CAAT,CAAP;AACD;AAHI,GAAP;AAKD,CAND;;kBAQe,uBAAQ,8BAAR,EAAqB,yBAAQF,eAAR,EAAyBC,kBAAzB,CAArB,EAAmEnB,eAAnE,C;AACf","file":"VideoSizeButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { translate } from 'react-i18next';\nimport IconButton from 'material-ui/IconButton';\nimport SvgIcon from 'material-ui/SvgIcon';\n// State-related imports\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { videoSizeSelector } from '../../selectors/settingSelectors';\nimport { toggleVideoSize } from '../../actions/PlaybackActionCreators';\n\n// Stolen from YouTube\nconst paths = {\n  // Currently small, show \"enlarge\" icon:\n  small: 'm 28,11 0,14 -20,0 0,-14 z m -18,2 16,0 0,10 -16,0 0,-10 z',\n  // Currently large, show smaller icon: (\"ensmall\"?! ðŸ˜‚)\n  large: 'm 26,13 0,10 -16,0 0,-10 z m -14,2 12,0 0,6 -12,0 0,-6 z'\n};\n\nconst VideoSizeButton = ({\n  t,\n  videoSize,\n  onToggleVideoSize\n}) => (\n  <IconButton\n    onClick={onToggleVideoSize}\n    tooltip={videoSize === 'large'\n      ? t('settings.disableLargeVideo')\n      : t('settings.enableLargeVideo')\n    }\n    tooltipPosition=\"bottom-center\"\n  >\n    <SvgIcon viewBox=\"6 6 24 24\">\n      <path d={paths[videoSize]} fillRule=\"evenodd\" />\n    </SvgIcon>\n  </IconButton>\n);\n\nVideoSizeButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  videoSize: PropTypes.oneOf([ 'small', 'large' ]).isRequired,\n  onToggleVideoSize: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = createStructuredSelector({\n  videoSize: videoSizeSelector\n});\nconst mapDispatchToProps = dispatch => ({\n  onToggleVideoSize: () => dispatch(toggleVideoSize())\n});\n\nexport default compose(\n  translate(),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(VideoSizeButton);\n"]}