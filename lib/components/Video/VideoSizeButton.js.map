{"version":3,"sources":["components/Video/VideoSizeButton.js"],"names":["paths","small","large","VideoSizeButton","_ref","t","videoSize","onToggleVideoSize","Tooltip","title","placement","IconButton","onClick","SvgIcon","viewBox","d","fillRule","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","oneOf","mapStateToProps","videoSizeSelector","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;;AAL8C;AAK0B;AAExE,IAAIA,QAAQ;AACV;AACAC,SAAO,4DAFG;AAGV;AACAC,SAAO;AAJG,CAAZ;;AAOA,IAAIC,kBAAkB,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,oBAAoBH,KAAKG,iBAF7B;AAGA,SAAO,mBAAKC,gBAAL,EAAc;AACnBC,WAAOH,cAAc,OAAd,GAAwBD,EAAE,4BAAF,CAAxB,GAA0DA,EAAE,2BAAF,CAD9C;AAEnBK,eAAW;AAFQ,GAAd,EAGJ,KAAK,CAHD,EAGI,mBAAKC,mBAAL,EAAiB;AAC1BC,aAASL;AADiB,GAAjB,EAER,KAAK,CAFG,EAEA,mBAAKM,gBAAL,EAAc;AACvBC,aAAS;AADc,GAAd,EAER,KAAK,CAFG,EAEA,mBAAK,MAAL,EAAa;AACtBC,OAAGf,MAAMM,SAAN,CADmB;AAEtBU,cAAU;AAFY,GAAb,CAFA,CAFA,CAHJ,CAAP;AAWD,CAfD;;AAiBAb,gBAAgBc,SAAhB,GAA4BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClEf,KAAGgB,mBAAUC,IAAV,CAAeC,UADgD;AAElEjB,aAAWe,mBAAUG,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,EAAoCD,UAFmB;AAGlEhB,qBAAmBc,mBAAUC,IAAV,CAAeC;AAHgC,CAAxC,GAIxB,EAJJ;AAKA,IAAIE,kBAAkB,wCAAyB;AAC7CnB,aAAWoB;AADkC,CAAzB,CAAtB;;AAIA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO;AACLrB,uBAAmB,SAASA,iBAAT,GAA6B;AAC9C,aAAOqB,SAAS,8CAAT,CAAP;AACD;AAHI,GAAP;AAKD,CAND;;eAQe,sBAAQ,8BAAR,EAAqB,yBAAQH,eAAR,EAAyBE,kBAAzB,CAArB,EAAmExB,eAAnE,C,EACf","file":"VideoSizeButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { translate } from 'react-i18next';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport SvgIcon from 'material-ui/SvgIcon';\n// State-related imports\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { videoSizeSelector } from '../../selectors/settingSelectors';\nimport { toggleVideoSize } from '../../actions/PlaybackActionCreators';\n\n// Stolen from YouTube\nconst paths = {\n  // Currently small, show \"enlarge\" icon:\n  small: 'm 28,11 0,14 -20,0 0,-14 z m -18,2 16,0 0,10 -16,0 0,-10 z',\n  // Currently large, show smaller icon: (\"ensmall\"?! ðŸ˜‚)\n  large: 'm 26,13 0,10 -16,0 0,-10 z m -14,2 12,0 0,6 -12,0 0,-6 z',\n};\n\nconst VideoSizeButton = ({\n  t,\n  videoSize,\n  onToggleVideoSize,\n}) => (\n  <Tooltip\n    title={videoSize === 'large'\n      ? t('settings.disableLargeVideo')\n      : t('settings.enableLargeVideo')\n    }\n    placement=\"bottom\"\n  >\n    <IconButton onClick={onToggleVideoSize}>\n      <SvgIcon viewBox=\"6 6 24 24\">\n        <path d={paths[videoSize]} fillRule=\"evenodd\" />\n      </SvgIcon>\n    </IconButton>\n  </Tooltip>\n);\n\nVideoSizeButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  videoSize: PropTypes.oneOf(['small', 'large']).isRequired,\n  onToggleVideoSize: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  videoSize: videoSizeSelector,\n});\nconst mapDispatchToProps = dispatch => ({\n  onToggleVideoSize: () => dispatch(toggleVideoSize()),\n});\n\nexport default compose(\n  translate(),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n)(VideoSizeButton);\n"]}