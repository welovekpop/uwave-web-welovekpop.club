{"version":3,"sources":["components/Video/VideoToolbar.js"],"names":["_ref","ExitFullscreenIcon","_ref2","EnterFullscreenIcon","renderFullscreenIcon","isFullscreen","_ref4","VideoSizeButton","VideoToolbar","_ref3","t","children","onFullscreenEnter","onFullscreenExit","className","Tooltip","title","placement","IconButton","onClick","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","bool","node"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA;AACJ;AACA,mBAAKC,uBAAL,EAAyB,EAAzB,CAFA;;AAIA,IAAIC;AACJ;AACA,mBAAKC,mBAAL,EAA0B,EAA1B,CAFA;;AAIA,IAAIC,uBAAuB,SAASA,oBAAT,CAA8BC,YAA9B,EAA4C;AACrE,SAAOA,eAAeL,IAAf,GAAsBE,KAA7B;AACD,CAFD;;AAIA,IAAII;AACJ;AACA,mBAAKC,wBAAL,EAAsB,EAAtB,CAFA;;AAIA,IAAIC,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,MAAIC,IAAID,MAAMC,CAAd;AAAA,MACIC,WAAWF,MAAME,QADrB;AAAA,MAEIN,eAAeI,MAAMJ,YAFzB;AAAA,MAGIO,oBAAoBH,MAAMG,iBAH9B;AAAA,MAIIC,mBAAmBJ,MAAMI,gBAJ7B;AAKA,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEIH,QAFJ,EAEcL,KAFd,EAEqB,mBAAKS,gBAAL,EAAc;AACxCC,WAAOX,eAAeK,EAAE,4BAAF,CAAf,GAAiDA,EAAE,2BAAF,CADhB;AAExCO,eAAW;AAF6B,GAAd,EAGzB,KAAK,CAHoB,EAGjB,mBAAKC,mBAAL,EAAiB;AAC1BC,aAASd,eAAeQ,gBAAf,GAAkCD;AADjB,GAAjB,EAER,KAAK,CAFG,EAEAR,qBAAqBC,YAArB,CAFA,CAHiB,CAFrB,CAAP;AAQD,CAdD;;AAgBAG,aAAaY,SAAb,GAAyBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/Db,KAAGc,mBAAUC,IAAV,CAAeC,UAD6C;AAE/Dd,qBAAmBY,mBAAUC,IAAV,CAAeC,UAF6B;AAG/Db,oBAAkBW,mBAAUC,IAAV,CAAeC,UAH8B;AAI/DrB,gBAAcmB,mBAAUG,IAJuC;;AAM/D;;;AAGAhB,YAAUa,mBAAUI;AAT2C,CAAxC,GAUrB,EAVJ;;eAWe,+BAAYpB,YAAZ,C","file":"VideoToolbar.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EnterFullscreenIcon from '@material-ui/icons/Fullscreen';\nimport ExitFullscreenIcon from '@material-ui/icons/FullscreenExit';\n\nimport VideoSizeButton from './VideoSizeButton';\n\nconst renderFullscreenIcon = isFullscreen => (\n  isFullscreen ? <ExitFullscreenIcon /> : <EnterFullscreenIcon />\n);\n\nconst VideoToolbar = ({\n  t,\n  children,\n  isFullscreen,\n  onFullscreenEnter,\n  onFullscreenExit,\n}) => (\n  <div className=\"Video-overlay Video-toolbar\">\n    {children}\n    <VideoSizeButton />\n    <Tooltip\n      title={isFullscreen\n        ? t('settings.disableFullscreen')\n        : t('settings.enableFullscreen')\n      }\n      placement=\"bottom-end\"\n    >\n      <IconButton onClick={isFullscreen ? onFullscreenExit : onFullscreenEnter}>\n        {renderFullscreenIcon(isFullscreen)}\n      </IconButton>\n    </Tooltip>\n  </div>\n);\n\nVideoToolbar.propTypes = {\n  t: PropTypes.func.isRequired,\n  onFullscreenEnter: PropTypes.func.isRequired,\n  onFullscreenExit: PropTypes.func.isRequired,\n  isFullscreen: PropTypes.bool,\n  /**\n   * Optional further video tools.\n   */\n  children: PropTypes.node,\n};\n\nexport default translate()(VideoToolbar);\n"]}