{"version":3,"sources":["components/Video/VideoToolbar.js"],"names":["_ref","_ref2","renderFullscreenIcon","isFullscreen","_ref4","VideoToolbar","_ref3","t","children","onFullscreenEnter","onFullscreenExit","className","title","placement","onClick","propTypes","process","env","NODE_ENV","func","isRequired","bool","node"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,OAAO,6CAAyB,EAAzB,CAAX;;AAEA,IAAIC,QAAQ,yCAA0B,EAA1B,CAAZ;;AAEA,IAAIC,uBAAuB,SAASA,oBAAT,CAA8BC,YAA9B,EAA4C;AACrE,SAAOA,eAAeH,IAAf,GAAsBC,KAA7B;AACD,CAFD;;AAIA,IAAIG,QAAQ,8CAAsB,EAAtB,CAAZ;;AAEA,IAAIC,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,MAAIC,IAAID,MAAMC,CAAd;AAAA,MACIC,WAAWF,MAAME,QADrB;AAAA,MAEIL,eAAeG,MAAMH,YAFzB;AAAA,MAGIM,oBAAoBH,MAAMG,iBAH9B;AAAA,MAIIC,mBAAmBJ,MAAMI,gBAJ7B;AAKA,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEIH,QAFJ,EAEcJ,KAFd,EAEqB,sCAAc;AACxCQ,WAAOT,eAAeI,EAAE,4BAAF,CAAf,GAAiDA,EAAE,2BAAF,CADhB;AAExCM,eAAW;AAF6B,GAAd,EAGzB,KAAK,CAHoB,EAGjB,yCAAiB;AAC1BC,aAASX,eAAeO,gBAAf,GAAkCD;AADjB,GAAjB,EAER,KAAK,CAFG,EAEAP,qBAAqBC,YAArB,CAFA,CAHiB,CAFrB,CAAP;AAQD,CAdD;;AAgBAE,aAAaU,SAAb,GAAyBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/DX,KAAG,oBAAUY,IAAV,CAAeC,UAD6C;AAE/DX,qBAAmB,oBAAUU,IAAV,CAAeC,UAF6B;AAG/DV,oBAAkB,oBAAUS,IAAV,CAAeC,UAH8B;AAI/DjB,gBAAc,oBAAUkB,IAJuC;AAK/D;;;AAGAb,YAAU,oBAAUc;AAR2C,CAAxC,GASrB,EATJ;;kBAWe,+BAAYjB,YAAZ,C;AACf","file":"VideoToolbar.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport EnterFullscreenIcon from 'material-ui-icons/Fullscreen';\nimport ExitFullscreenIcon from 'material-ui-icons/FullscreenExit';\n\nimport VideoSizeButton from './VideoSizeButton';\n\nconst renderFullscreenIcon = isFullscreen => (\n  isFullscreen ? <ExitFullscreenIcon /> : <EnterFullscreenIcon />\n);\n\nconst VideoToolbar = ({\n  t,\n  children,\n  isFullscreen,\n  onFullscreenEnter,\n  onFullscreenExit,\n}) => (\n  <div className=\"Video-overlay Video-toolbar\">\n    {children}\n    <VideoSizeButton />\n    <Tooltip\n      title={isFullscreen\n        ? t('settings.disableFullscreen')\n        : t('settings.enableFullscreen')\n      }\n      placement=\"bottom-end\"\n    >\n      <IconButton onClick={isFullscreen ? onFullscreenExit : onFullscreenEnter}>\n        {renderFullscreenIcon(isFullscreen)}\n      </IconButton>\n    </Tooltip>\n  </div>\n);\n\nVideoToolbar.propTypes = {\n  t: PropTypes.func.isRequired,\n  onFullscreenEnter: PropTypes.func.isRequired,\n  onFullscreenExit: PropTypes.func.isRequired,\n  isFullscreen: PropTypes.bool,\n  /**\n   * Optional further video tools.\n   */\n  children: PropTypes.node,\n};\n\nexport default translate()(VideoToolbar);\n"]}