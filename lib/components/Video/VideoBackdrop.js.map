{"version":3,"sources":["components/Video/VideoBackdrop.js"],"names":["supportsBlur","window","CSS","supports","CSSVideoBackdrop","_ref","url","className","src","alt","propTypes","process","env","NODE_ENV","string","isRequired","svgWidth","svgHeight","svgBlur","SVGVideoBackdrop","_ref2","viewBox","id","stdDeviation","result","xlinkHref","x","y","filter","width","height","VideoBackdrop"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;AAGA,SAASA,YAAT,GAAwB;AACtB;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,CAACA,OAAOC,GAA7C,EAAkD;AAChD,WAAO,KAAP;AACD;;AAED,SAAOA,IAAIC,QAAJ,CAAa,QAAb,EAAuB,WAAvB,KAAuCD,IAAIC,QAAJ,CAAa,gBAAb,EAA+B,WAA/B,CAA9C;AACD;;AAED;;;AAGA,IAAIC,mBAAmB,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,MAAMD,KAAKC,GAAf;AACA,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW,qCADM;AAEjBC,SAAKF,GAFY;AAGjBG,SAAK;AAHY,GAAZ,CAAP;AAKD,CAPD;;AASAL,iBAAiBM,SAAjB,GAA6BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnEP,OAAK,oBAAUQ,MAAV,CAAiBC;AAD6C,CAAxC,GAEzB,EAFJ;;AAIA,IAAIC,WAAW,GAAf;AACA,IAAIC,YAAY,GAAhB;AACA,IAAIC,UAAU,EAAd;;AAEA;;;AAGA,IAAIC,mBAAmB,SAASA,gBAAT,CAA0BC,KAA1B,EAAiC;AACtD,MAAId,MAAMc,MAAMd,GAAhB;AACA,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAK,KAAL,EAAY;AACrBc,aAAS,SAASL,QAAT,GAAoB,GAApB,GAA0BC;AADd,GAAZ,EAER,KAAK,CAFG,EAEA,mBAAK,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,mBAAK,QAAL,EAAe;AACjDK,QAAI;AAD6C,GAAf,EAEjC,KAAK,CAF4B,EAEzB,mBAAK,gBAAL,EAAuB;AAChCC,kBAAcL,UAAU,GAAV,GAAgBA,OADE;AAEhCM,YAAQ;AAFwB,GAAvB,CAFyB,CAAzB,CAFA,EAOL,mBAAK,OAAL,EAAc;AAClBC,eAAWnB,GADO;AAElBoB,OAAGR,UAAU,CAAC,CAFI;AAGlBS,OAAGT,UAAU,CAAC,CAHI;AAIlBU,YAAQ,YAJU;AAKlBC,WAAOb,WAAWE,UAAU,CALV;AAMlBY,YAAQb,YAAYC,UAAU;AANZ,GAAd,CAPK,CAFJ,CAAP;AAiBD,CAnBD;;AAqBAC,iBAAiBT,SAAjB,GAA6BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnEP,OAAK,oBAAUQ,MAAV,CAAiBC;AAD6C,CAAxC,GAEzB,EAFJ;;AAIA;AACA;AACA,IAAIgB,gBAAgB/B,iBAAiBI,gBAAjB,GAAoCe,gBAAxD;;kBAEeY,a;AACf","file":"VideoBackdrop.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Check if the browser supports the CSS `blur()` filter.\n */\nfunction supportsBlur() {\n  // Be conservative if we're not in the browser.\n  if (typeof window === 'undefined' || !window.CSS) {\n    return false;\n  }\n\n  return (\n    CSS.supports('filter', 'blur(1em)') ||\n    CSS.supports('-webkit-filter', 'blur(1em)')\n  );\n}\n\n/**\n * A Video backdrop, blurred using the CSS `blur()` filter.\n */\nconst CSSVideoBackdrop = ({ url }) => (\n  <img\n    className=\"VideoBackdrop VideoBackdrop--blurry\"\n    src={url}\n    alt=\"\"\n  />\n);\n\nCSSVideoBackdrop.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nconst svgWidth = 800;\nconst svgHeight = 480;\nconst svgBlur = 20;\n\n/**\n * A Video backdrop, blurred using an SVG filter.\n */\nconst SVGVideoBackdrop = ({ url }) => (\n  <div className=\"VideoBackdrop VideoBackdrop--svg\">\n    <svg viewBox={`0 0 ${svgWidth} ${svgHeight}`}>\n      <defs>\n        <filter id=\"blur\">\n          <feGaussianBlur stdDeviation={`${svgBlur} ${svgBlur}`} result=\"blur\" />\n        </filter>\n      </defs>\n      <image\n        xlinkHref={url}\n        x={svgBlur * -3}\n        y={svgBlur * -3}\n        filter=\"url(#blur)\"\n        width={svgWidth + (svgBlur * 6)}\n        height={svgHeight + (svgBlur * 6)}\n      />\n    </svg>\n  </div>\n);\n\nSVGVideoBackdrop.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\n// If the browser supports the CSS `blur()` filter, we can use the <img>-style\n// backdrop. Otherwise, fall back to the SVG backdrop.\nconst VideoBackdrop = supportsBlur() ? CSSVideoBackdrop : SVGVideoBackdrop;\n\nexport default VideoBackdrop;\n"]}