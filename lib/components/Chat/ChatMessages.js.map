{"version":3,"sources":["components/Chat/ChatMessages.js"],"names":["specialTypes","log","userJoin","userLeave","userNameChanged","ChatMessages","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","isScrolledToBottom","handleResize","scrollToBottom","handleScroll","setState","handleScrollToBottom","event","preventDefault","refContainer","container","prototype","componentDidMount","shouldScrollToBottom","window","addEventListener","componentWillReceiveProps","componentDidUpdate","componentWillUnmount","removeEventListener","el","scrollTop","scrollHeight","lastMessage","lastElementChild","neededSize","offsetHeight","renderMotd","props","motd","compileOptions","renderMessage","msg","SpecialMessage","type","createElement","key","_id","deletable","canDeleteMessages","onDelete","onDeleteMessage","render","ref","className","onScroll","show","onClick","messages","map","Component","propTypes","process","env","NODE_ENV","array","bool","func","shape","availableEmoji","emojiImages","object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,eAAe;AACjBC,2BADiB;AAEjBC,iCAFiB;AAGjBC,mCAHiB;AAIjBC;AAJiB,CAAnB;;AAOA,IAAIC,eAAe,UAAUC,gBAAV,EAA4B;AAC7C,0BAAUD,YAAV,EAAwBC,gBAAxB;;AAEA,WAASD,YAAT,GAAwB;AACtB,QAAIE,KAAJ,EAAWC,KAAX,EAAkBC,IAAlB;;AAEA,kCAAgB,IAAhB,EAAsBJ,YAAtB;;AAEA,SAAK,IAAIK,OAAOC,UAAUC,MAArB,EAA6BC,OAAOC,MAAMJ,IAAN,CAApC,EAAiDK,OAAO,CAA7D,EAAgEA,OAAOL,IAAvE,EAA6EK,MAA7E,EAAqF;AACnFF,WAAKE,IAAL,IAAaJ,UAAUI,IAAV,CAAb;AACD;;AAED,WAAON,QAAQF,SAASC,QAAQ,yCAA2B,IAA3B,EAAiCF,iBAAiBU,IAAjB,CAAsBC,KAAtB,CAA4BX,gBAA5B,EAA8C,CAAC,IAAD,EAAOY,MAAP,CAAcL,IAAd,CAA9C,CAAjC,CAAR,EAA8GL,KAAvH,GAA+HA,MAAMW,KAAN,GAAc;AAC1JC,0BAAoB;AADsI,KAA7I,EAEZZ,MAAMa,YAAN,GAAqB,YAAY;AAClC,UAAIb,MAAMW,KAAN,CAAYC,kBAAhB,EAAoC;AAClCZ,cAAMc,cAAN;AACD;AACF,KANc,EAMZd,MAAMe,YAAN,GAAqB,YAAY;AAClCf,YAAMgB,QAAN,CAAe;AACbJ,4BAAoBZ,MAAMY,kBAAN;AADP,OAAf;AAGD,KAVc,EAUZZ,MAAMiB,oBAAN,GAA6B,UAAUC,KAAV,EAAiB;AAC/CA,YAAMC,cAAN;AACAnB,YAAMc,cAAN;AACD,KAbc,EAaZd,MAAMoB,YAAN,GAAqB,UAAUC,SAAV,EAAqB;AAC3CrB,YAAMqB,SAAN,GAAkBA,SAAlB;AACD,KAfc,EAeZtB,KAfI,GAeI,yCAA2BC,KAA3B,EAAkCC,IAAlC,CAfX;AAgBD;;AAEDJ,eAAayB,SAAb,CAAuBC,iBAAvB,GAA2C,SAASA,iBAAT,GAA6B;AACtE,SAAKT,cAAL;AACA,SAAKU,oBAAL,GAA4B,KAA5B;;AAEA;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,aAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKb,YAAvC;AACD;AACF,GARD;;AAUAhB,eAAayB,SAAb,CAAuBK,yBAAvB,GAAmD,SAASA,yBAAT,GAAqC;AACtF,SAAKH,oBAAL,GAA4B,KAAKZ,kBAAL,EAA5B;AACD,GAFD;;AAIAf,eAAayB,SAAb,CAAuBM,kBAAvB,GAA4C,SAASA,kBAAT,GAA8B;AACxE;AACA,QAAI,KAAKJ,oBAAT,EAA+B;AAC7B,WAAKV,cAAL;AACA,WAAKU,oBAAL,GAA4B,KAA5B;AACD;AACF,GAND;;AAQA3B,eAAayB,SAAb,CAAuBO,oBAAvB,GAA8C,SAASA,oBAAT,GAAgC;AAC5E,QAAI,OAAOJ,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,aAAOK,mBAAP,CAA2B,QAA3B,EAAqC,KAAKjB,YAA1C;AACD;AACF,GAJD;;AAMAhB,eAAayB,SAAb,CAAuBR,cAAvB,GAAwC,SAASA,cAAT,GAA0B;AAChE,QAAIiB,KAAK,KAAKV,SAAd;AACAU,OAAGC,SAAH,GAAeD,GAAGE,YAAlB;AACD,GAHD;;AAKApC,eAAayB,SAAb,CAAuBV,kBAAvB,GAA4C,SAASA,kBAAT,GAA8B;AACxE,QAAImB,KAAK,KAAKV,SAAd;AACA,QAAIa,cAAcH,GAAGI,gBAArB;AACA,QAAID,WAAJ,EAAiB;AACf,UAAIE,aAAaL,GAAGC,SAAH,GAAeD,GAAGM,YAAlB,GAAiCH,YAAYG,YAA9D;AACA,aAAOD,cAAcL,GAAGE,YAAH,GAAkB,EAAvC;AACD;AACD,WAAO,IAAP;AACD,GARD;;AAUApC,eAAayB,SAAb,CAAuBgB,UAAvB,GAAoC,SAASA,UAAT,GAAsB;AACxD,QAAI,CAAC,KAAKC,KAAL,CAAWC,IAAhB,EAAsB;AACpB,aAAO,IAAP;AACD;AACD,WAAO,mCAAW;AAChBC,sBAAgB,KAAKF,KAAL,CAAWE;AADX,KAAX,EAEJ,KAAK,CAFD,EAEI,KAAKF,KAAL,CAAWC,IAFf,CAAP;AAGD,GAPD;;AASA3C,eAAayB,SAAb,CAAuBoB,aAAvB,GAAuC,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AACjE,QAAIC,iBAAiBpD,aAAamD,IAAIE,IAAjB,CAArB;AACA,QAAID,cAAJ,EAAoB;AAClB,aAAO,gBAAME,aAAN,CAAoBF,cAApB,EAAoC,uBAAS;AAClDG,aAAKJ,IAAIK;AADyC,OAAT,EAExCL,GAFwC,CAApC,CAAP;AAGD;;AAED,WAAO,gBAAMG,aAAN,oBAA6B,uBAAS;AAC3CC,WAAKJ,IAAIK,GADkC;AAE3CP,sBAAgB,KAAKF,KAAL,CAAWE,cAFgB;AAG3CQ,iBAAW,KAAKV,KAAL,CAAWW,iBAHqB;AAI3CC,gBAAU,KAAKZ,KAAL,CAAWa;AAJsB,KAAT,EAKjCT,GALiC,CAA7B,CAAP;AAMD,GAdD;;AAgBA9C,eAAayB,SAAb,CAAuB+B,MAAvB,GAAgC,SAASA,MAAT,GAAkB;AAChD,QAAIzC,qBAAqB,KAAKD,KAAL,CAAWC,kBAApC;;AAGA,WAAO,gBAAMkC,aAAN,CACL,KADK,EAEL;AACEQ,WAAK,KAAKlC,YADZ;AAEEmC,iBAAW,cAFb;AAGEC,gBAAU,KAAKzC;AAHjB,KAFK,EAOL,+CAAuB;AACrB0C,YAAM,CAAC7C,kBADc;AAErB8C,eAAS,KAAKzC;AAFO,KAAvB,CAPK,EAWL,KAAKqB,UAAL,EAXK,EAYL,KAAKC,KAAL,CAAWoB,QAAX,CAAoBC,GAApB,CAAwB,KAAKlB,aAA7B,EAA4C,IAA5C,CAZK,CAAP;AAcD,GAlBD;;AAoBA,SAAO7C,YAAP;AACD,CAvHkB,CAuHjB,gBAAMgE,SAvHW,CAAnB;;kBAyHehE,Y;;AACfA,aAAaiE,SAAb,GAAyBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/DN,YAAU,oBAAUO,KAD2C;AAE/D1B,QAAM,oBAAU0B,KAF+C;AAG/DhB,qBAAmB,oBAAUiB,IAHkC;AAI/Df,mBAAiB,oBAAUgB,IAJoC;AAK/D3B,kBAAgB,oBAAU4B,KAAV,CAAgB;AAC9BC,oBAAgB,oBAAUJ,KADI;AAE9BK,iBAAa,oBAAUC;AAFO,GAAhB;AAL+C,CAAxC,GASrB,EATJ;AAUA","file":"ChatMessages.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from './LogMessage';\nimport Message from './Message';\nimport JoinMessage from './NotificationMessages/JoinMessage';\nimport LeaveMessage from './NotificationMessages/LeaveMessage';\nimport NameChangedMessage from './NotificationMessages/NameChangedMessage';\nimport Motd from './Motd';\nimport ScrollDownNotice from './ScrollDownNotice';\n\nconst specialTypes = {\n  log: LogMessage,\n  userJoin: JoinMessage,\n  userLeave: LeaveMessage,\n  userNameChanged: NameChangedMessage\n};\n\nexport default class ChatMessages extends React.Component {\n  static propTypes = {\n    messages: PropTypes.array,\n    motd: PropTypes.array,\n    canDeleteMessages: PropTypes.bool,\n    onDeleteMessage: PropTypes.func,\n    compileOptions: PropTypes.shape({\n      availableEmoji: PropTypes.array,\n      emojiImages: PropTypes.object\n    })\n  };\n\n  state = {\n    isScrolledToBottom: true\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n    this.shouldScrollToBottom = false;\n\n    // A window resize may affect the available space.\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.handleResize);\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.shouldScrollToBottom = this.isScrolledToBottom();\n  }\n\n  componentDidUpdate() {\n    // Keep the chat scrolled to the bottom after a new message is addded.\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n\n  componentWillUnmount() {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  scrollToBottom() {\n    const el = this.container;\n    el.scrollTop = el.scrollHeight;\n  }\n\n  isScrolledToBottom() {\n    const el = this.container;\n    const lastMessage = el.lastElementChild;\n    if (lastMessage) {\n      const neededSize = el.scrollTop + el.offsetHeight + lastMessage.offsetHeight;\n      return neededSize >= el.scrollHeight - 20;\n    }\n    return true;\n  }\n\n  handleResize = () => {\n    if (this.state.isScrolledToBottom) {\n      this.scrollToBottom();\n    }\n  };\n\n  handleScroll = () => {\n    this.setState({\n      isScrolledToBottom: this.isScrolledToBottom()\n    });\n  };\n\n  handleScrollToBottom = (event) => {\n    event.preventDefault();\n    this.scrollToBottom();\n  };\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  renderMotd() {\n    if (!this.props.motd) {\n      return null;\n    }\n    return (\n      <Motd compileOptions={this.props.compileOptions}>\n        {this.props.motd}\n      </Motd>\n    );\n  }\n\n  renderMessage(msg) {\n    const SpecialMessage = specialTypes[msg.type];\n    if (SpecialMessage) {\n      return (\n        <SpecialMessage\n          key={msg._id}\n          {...msg}\n        />\n      );\n    }\n\n    return (\n      <Message\n        key={msg._id}\n        compileOptions={this.props.compileOptions}\n        deletable={this.props.canDeleteMessages}\n        onDelete={this.props.onDeleteMessage}\n        {...msg}\n      />\n    );\n  }\n\n  render() {\n    const { isScrolledToBottom } = this.state;\n\n    return (\n      <div\n        ref={this.refContainer}\n        className=\"ChatMessages\"\n        onScroll={this.handleScroll}\n      >\n        <ScrollDownNotice\n          show={!isScrolledToBottom}\n          onClick={this.handleScrollToBottom}\n        />\n        {this.renderMotd()}\n        {this.props.messages.map(this.renderMessage, this)}\n      </div>\n    );\n  }\n}\n"]}