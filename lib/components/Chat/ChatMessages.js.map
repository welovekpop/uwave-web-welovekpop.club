{"version":3,"sources":["components/Chat/ChatMessages.js"],"names":["ChatMessages","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","isScrolledToBottom","onExternalScroll","direction","el","container","scrollTop","scrollHeight","handleResize","scrollToBottom","handleScroll","setState","handleScrollToBottom","event","preventDefault","refContainer","prototype","componentDidMount","bus","props","shouldScrollToBottom","on","window","addEventListener","componentWillReceiveProps","componentDidUpdate","componentWillUnmount","off","removeEventListener","lastMessage","lastElementChild","neededSize","offsetHeight","renderMotd","motd","compileOptions","renderMessage","msg","SpecialMessage","type","createElement","key","_id","deletable","canDeleteMessages","onDelete","onDeleteMessage","render","ref","className","onScroll","show","onClick","messages","map","Component","propTypes","process","env","NODE_ENV","object","isRequired","array","bool","func","shape","availableEmoji","emojiImages"],"mappings":"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","file":"ChatMessages.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Message from './Message';\nimport Motd from './Motd';\nimport ScrollDownNotice from './ScrollDownNotice';\nimport specialMessages from './specialMessages';\n\nexport default class ChatMessages extends React.Component {\n  static propTypes = {\n    bus: PropTypes.object.isRequired,\n    messages: PropTypes.array,\n    motd: PropTypes.array,\n    canDeleteMessages: PropTypes.bool,\n    onDeleteMessage: PropTypes.func,\n    compileOptions: PropTypes.shape({\n      availableEmoji: PropTypes.array,\n      emojiImages: PropTypes.object,\n    }),\n  };\n\n  state = {\n    isScrolledToBottom: true,\n  };\n\n  componentDidMount() {\n    const { bus } = this.props;\n\n    this.scrollToBottom();\n    this.shouldScrollToBottom = false;\n\n    bus.on('chat:scroll', this.onExternalScroll);\n\n    // A window resize may affect the available space.\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', this.handleResize);\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.shouldScrollToBottom = this.isScrolledToBottom();\n  }\n\n  componentDidUpdate() {\n    // Keep the chat scrolled to the bottom after a new message is addded.\n    if (this.shouldScrollToBottom) {\n      this.scrollToBottom();\n      this.shouldScrollToBottom = false;\n    }\n  }\n\n  componentWillUnmount() {\n    const { bus } = this.props;\n\n    bus.off('chat:scroll', this.onExternalScroll);\n\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', this.handleResize);\n    }\n  }\n\n  onExternalScroll = (direction) => {\n    const el = this.container;\n    if (direction === 'start') {\n      el.scrollTop = 0;\n    } else if (direction === 'end') {\n      el.scrollTop = el.scrollHeight;\n    } else {\n      el.scrollTop += direction * 250;\n    }\n  };\n\n  scrollToBottom() {\n    const el = this.container;\n    el.scrollTop = el.scrollHeight;\n  }\n\n  isScrolledToBottom() {\n    const el = this.container;\n    const lastMessage = el.lastElementChild;\n    if (lastMessage) {\n      const neededSize = el.scrollTop + el.offsetHeight + lastMessage.offsetHeight;\n      return neededSize >= el.scrollHeight - 20;\n    }\n    return true;\n  }\n\n  handleResize = () => {\n    if (this.state.isScrolledToBottom) {\n      this.scrollToBottom();\n    }\n  };\n\n  handleScroll = () => {\n    this.setState({\n      isScrolledToBottom: this.isScrolledToBottom(),\n    });\n  };\n\n  handleScrollToBottom = (event) => {\n    event.preventDefault();\n    this.scrollToBottom();\n  };\n\n  refContainer = (container) => {\n    this.container = container;\n  };\n\n  renderMotd() {\n    if (!this.props.motd) {\n      return null;\n    }\n    return (\n      <Motd compileOptions={this.props.compileOptions}>\n        {this.props.motd}\n      </Motd>\n    );\n  }\n\n  renderMessage(msg) {\n    const SpecialMessage = specialMessages[msg.type];\n    if (SpecialMessage) {\n      return (\n        <SpecialMessage\n          key={msg._id}\n          {...msg}\n        />\n      );\n    }\n\n    return (\n      <Message\n        key={msg._id}\n        compileOptions={this.props.compileOptions}\n        deletable={this.props.canDeleteMessages}\n        onDelete={this.props.onDeleteMessage}\n        {...msg}\n      />\n    );\n  }\n\n  render() {\n    const { isScrolledToBottom } = this.state;\n\n    return (\n      <div\n        ref={this.refContainer}\n        className=\"ChatMessages\"\n        onScroll={this.handleScroll}\n      >\n        <ScrollDownNotice\n          show={!isScrolledToBottom}\n          onClick={this.handleScrollToBottom}\n        />\n        {this.renderMotd()}\n        {this.props.messages.map(this.renderMessage, this)}\n      </div>\n    );\n  }\n}\n"]}