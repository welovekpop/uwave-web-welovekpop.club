{"version":3,"sources":["components/Chat/Input/index.js"],"names":["renderSuggestions","children","SuggestionsList","getUserCompletions","value","_ref","trigger","completions","compare","substr","length","toLowerCase","filter","user","username","getUserText","_ref2","renderUser","props","React","createElement","UserSuggestion","renderGroup","GroupSuggestion","getEmojiCompletions","_ref3","results","emoji","shortcode","image","getEmojiText","renderEmoji","EmojiSuggestion","enhance","ChatInput","_React$Component","_temp","_this","_len","arguments","args","Array","_key","call","apply","concat","state","focused","handleFocus","setState","handleBlur","handleKeyDown","e","stopPropagation","key","target","trim","onSend","clear","preventDefault","onScroll","ctrlKey","handleUpdate","newValue","_proto","prototype","render","_this$state","_this$props","t","mentionableUsers","mentionableGroups","availableEmoji","focusClass","className","AutoComplete","inputProps","type","placeholder","onFocus","onBlur","onKeyDown","onUpdate","limit","Completion","minLength","getCompletions","getText","renderSuggestion","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","array"],"mappings":"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","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport sortBy from 'lodash/sortBy';\nimport uniqBy from 'lodash/uniqBy';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport AutoComplete, { Completion } from 'react-abstract-autocomplete';\nimport SuggestionsList from './SuggestionsList';\nimport EmojiSuggestion from './EmojiSuggestion';\nimport GroupSuggestion from './GroupSuggestion';\nimport UserSuggestion from './UserSuggestion';\n\nconst renderSuggestions = children => (\n  <SuggestionsList>{children}</SuggestionsList>\n);\n\n// User suggestions:\nconst getUserCompletions = (value, { trigger, completions }) => {\n  const compare = value.substr(trigger.length).toLowerCase();\n  return completions.filter(user => (\n    user.username.substr(0, compare.length).toLowerCase() === compare\n  ));\n};\nconst getUserText = (user, { trigger }) => `${trigger}${user.username} `;\nconst renderUser = props => <UserSuggestion {...props} />;\n\n// Group suggestions:\nconst renderGroup = props => <GroupSuggestion {...props} />;\n\n// Emoji suggestions:\nconst getEmojiCompletions = (value, { trigger, completions }) => {\n  const compare = value.substr(trigger.length).toLowerCase();\n  const results = completions.filter(emoji => (\n    emoji.shortcode.substr(0, compare.length).toLowerCase() === compare\n  ));\n  return sortBy(\n    uniqBy(results, emoji => emoji.image),\n    emoji => emoji.shortcode.length,\n  );\n};\nconst getEmojiText = value => `:${value.shortcode}: `;\nconst renderEmoji = props => <EmojiSuggestion {...props} />;\n\nconst enhance = translate();\n\nclass ChatInput extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onSend: PropTypes.func.isRequired,\n    onScroll: PropTypes.func.isRequired,\n    mentionableUsers: PropTypes.array.isRequired,\n    mentionableGroups: PropTypes.array.isRequired,\n    availableEmoji: PropTypes.array.isRequired,\n  };\n\n  state = {\n    focused: false,\n    value: '',\n  };\n\n  clear() {\n    this.setState({ value: '' });\n  }\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleKeyDown = (e) => {\n    e.stopPropagation();\n    if (e.key === 'Enter') {\n      const value = e.target.value.trim();\n      if (value.length > 0) {\n        this.props.onSend(value);\n      }\n      this.clear();\n    }\n    if (e.key === 'PageUp') {\n      e.preventDefault();\n      this.props.onScroll(-1);\n    }\n    if (e.key === 'PageDown') {\n      e.preventDefault();\n      this.props.onScroll(1);\n    }\n    if (e.key === 'End' && e.ctrlKey) {\n      e.preventDefault();\n      this.props.onScroll('end');\n    }\n    if (e.key === 'Home' && e.ctrlKey) {\n      e.preventDefault();\n      this.props.onScroll('start');\n    }\n  };\n\n  handleUpdate = (newValue) => {\n    this.setState({ value: newValue });\n  };\n\n  render() {\n    const {\n      focused,\n      value,\n    } = this.state;\n    const {\n      t,\n      mentionableUsers,\n      mentionableGroups,\n      availableEmoji,\n    } = this.props;\n    const focusClass = focused ? 'is-focused' : '';\n    return (\n      <div className={cx('ChatInput', focusClass)}>\n        <AutoComplete\n          inputProps={{\n            type: 'text',\n            className: cx('ChatInput-input', focusClass),\n            placeholder: focused ? '' : t('chat.placeholder'),\n            onFocus: this.handleFocus,\n            onBlur: this.handleBlur,\n            onKeyDown: this.handleKeyDown,\n          }}\n          onUpdate={this.handleUpdate}\n          value={value}\n          renderSuggestions={renderSuggestions}\n          limit={6}\n        >\n          <Completion\n            trigger=\"@\"\n            minLength={2}\n            completions={mentionableUsers}\n            getCompletions={getUserCompletions}\n            getText={getUserText}\n            renderSuggestion={renderUser}\n          />\n          <Completion\n            trigger=\"@\"\n            minLength={2}\n            completions={mentionableGroups}\n            renderSuggestion={renderGroup}\n          />\n          <Completion\n            trigger=\":\"\n            completions={availableEmoji}\n            getCompletions={getEmojiCompletions}\n            getText={getEmojiText}\n            renderSuggestion={renderEmoji}\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nexport default enhance(ChatInput);\n"]}