{"version":3,"sources":["components/Username/index.js"],"names":["tempRoleIDToRoleName","Username","_ref","muiTheme","className","user","rankColors","roleName","Math","min","role","styles","color","style","username","propTypes","process","env","NODE_ENV","object","isRequired","string"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,uBAAuB;AACzB,KAAG,SADsB;AAEzB,KAAG,SAFsB;AAGzB,KAAG,WAHsB;AAIzB,KAAG,SAJsB;AAKzB,KAAG;AALsB,CAA3B;;AAQA,IAAIC,WAAW,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,WAAWD,KAAKC,QAApB;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,OAAOH,KAAKG,IAFhB;;AAIA,MAAIC,aAAaH,SAASG,UAA1B;AACA,MAAIC,WAAWP,qBAAqBQ,KAAKC,GAAL,CAASJ,KAAKK,IAAd,EAAoB,CAApB,CAArB,CAAf;AACA,MAAIC,SAAS,KAAK,CAAlB;AACA,MAAIL,WAAWC,QAAX,CAAJ,EAA0B;AACxBI,aAAS,EAAEC,OAAON,WAAWC,QAAX,CAAT,EAAT;AACD;;AAED,SAAO,mBAAK,MAAL,EAAa;AAClBH,eAAW,0BAAG,UAAH,EAAe,eAAeG,QAA9B,EAAwCH,SAAxC,CADO;AAElBS,WAAOF;AAFW,GAAb,EAGJ,KAAK,CAHD,EAGIN,KAAKS,QAHT,CAAP;AAID,CAhBD;;AAkBAb,SAASc,SAAT,GAAqBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3Df,YAAU,oBAAUgB,MAAV,CAAiBC,UADgC;AAE3DhB,aAAW,oBAAUiB,MAFsC;AAG3DhB,QAAM,oBAAUc,MAAV,CAAiBC;AAHoC,CAAxC,GAIjB,EAJJ;;kBAMe,uBAAQ,6BAAR,kBAA8BnB,QAA9B,C;AACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport pure from 'recompose/pure';\nimport muiThemeable from 'material-ui/styles/muiThemeable';\n\n// TODO define role names server-side instead of role numbers\nconst tempRoleIDToRoleName = {\n  0: 'default',\n  1: 'special',\n  2: 'moderator',\n  3: 'manager',\n  4: 'admin'\n};\n\nconst Username = ({\n  muiTheme,\n  className,\n  user\n}) => {\n  const rankColors = muiTheme.rankColors;\n  const roleName = tempRoleIDToRoleName[Math.min(user.role, 4)];\n  let styles;\n  if (rankColors[roleName]) {\n    styles = { color: rankColors[roleName] };\n  }\n\n  return (\n    <span\n      className={cx('Username', `Username--${roleName}`, className)}\n      style={styles}\n    >\n      {user.username}\n    </span>\n  );\n};\n\nUsername.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default compose(\n  muiThemeable(),\n  pure\n)(Username);\n"]}