{"version":3,"sources":["components/HeaderBar/Progress.js"],"names":["forceReflow","el","getBoundingClientRect","Progress","_ref","className","currentProgress","timeRemaining","animate","Object","assign","style","transitionDuration","React","createElement","ref","propTypes","process","env","NODE_ENV","PropTypes","string","number","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,SAASA,WAAT,CAAqBC,EAArB,EAAyB;AACvB;AACAA,KAAGC,qBAAH;AACD;;AAED,IAAIC,WAAW,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,YAAYD,KAAKC,SAArB;AAAA,MACIC,kBAAkBF,KAAKE,eAD3B;AAAA,MAEIC,gBAAgBH,KAAKG,aAFzB;;AAIA,WAASC,OAAT,CAAiBP,EAAjB,EAAqB;AACnB,QAAI,CAACA,EAAL,EAAS,OADU,CACF;;AAEjBQ,WAAOC,MAAP,CAAcT,GAAGU,KAAjB,EAAwB;AACtBC,0BAAoB;AADE,KAAxB,EAEG,6BAAe,YAAYN,eAAZ,GAA8B,GAA7C,CAFH,EAHmB,CAKoC;;AAEvDN,gBAAYC,EAAZ,EAPmB,CAOF;AACjB;;AAEAQ,WAAOC,MAAP,CAAcT,GAAGU,KAAjB,EAAwB;AACtBC,0BAAoBL,gBAAgB;AADd,KAAxB,EAEG,6BAAe,WAAf,CAFH;AAGD;;AAED,SAAO,mBAAK,KAAL,EAAY;AACjBF,eAAW,yBAAG,UAAH,EAAeA,SAAf;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEIQ,eAAMC,aAAN,CAAoB,KAApB,EAA2B;AACpCT,eAAW,eADyB;AAEpCU,SAAKP;AAF+B,GAA3B,CAFJ,CAAP;AAMD,CA1BD;;AA4BAL,SAASa,SAAT,GAAqBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3Dd,aAAWe,mBAAUC,MADsC;AAE3Df,mBAAiBc,mBAAUE,MAAV,CAAiBC,UAFyB;AAG3DhB,iBAAea,mBAAUE,MAAV,CAAiBC;AAH2B,CAAxC,GAIjB,EAJJ;eAKepB,Q,EACf","file":"Progress.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport transformStyle from '../../utils/transformStyle';\n\nfunction forceReflow(el) {\n  // Hopefully the minifier won't optimise this away!\n  el.getBoundingClientRect();\n}\n\nconst Progress = ({ className, currentProgress, timeRemaining }) => {\n  function animate(el) {\n    if (!el) return;\n\n    // Set the width to the current progress without animating\n    Object.assign(el.style, {\n      transitionDuration: '0s',\n    }, transformStyle(`scaleX(${currentProgress})`));\n\n    // Force browser to rerender the bar immediately\n    forceReflow(el);\n\n    // Set up the actual animation. Progress bar goes to 100% full\n    // in $timeRemaining seconds.\n    Object.assign(el.style, {\n      transitionDuration: `${timeRemaining}s`,\n    }, transformStyle('scaleX(1)'));\n  }\n\n  return (\n    <div className={cx('Progress', className)}>\n      <div className=\"Progress-fill\" ref={animate} />\n    </div>\n  );\n};\n\nProgress.propTypes = {\n  className: PropTypes.string,\n  currentProgress: PropTypes.number.isRequired,\n  timeRemaining: PropTypes.number.isRequired,\n};\n\nexport default Progress;\n"]}