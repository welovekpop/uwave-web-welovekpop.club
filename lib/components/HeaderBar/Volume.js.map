{"version":3,"sources":["components/HeaderBar/Volume.js"],"names":["Volume","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleVolumeChange","e","volume","props","onVolumeChange","handleMuteClick","muted","onUnmute","onMute","_proto","prototype","shouldComponentUpdate","nextProps","render","VolumeIcon","VolumeUpIcon","VolumeOffIcon","VolumeMuteIcon","VolumeDownIcon","className","IconButton","onClick","Slider","min","max","step","value","onChange","React","Component","propTypes","process","env","NODE_ENV","PropTypes","string","number","bool","func"],"mappings":"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","file":"Volume.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport Slider from '@material-ui/lab/Slider';\n\nexport default class Volume extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    volume: PropTypes.number,\n    muted: PropTypes.bool,\n\n    onVolumeChange: PropTypes.func,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.volume !== nextProps.volume ||\n      this.props.muted !== nextProps.muted;\n  }\n\n  handleVolumeChange = (e, volume) => {\n    this.props.onVolumeChange(volume);\n  };\n\n  handleMuteClick = () => {\n    if (this.props.muted) {\n      this.props.onUnmute();\n    } else {\n      this.props.onMute();\n    }\n  };\n\n  render() {\n    let VolumeIcon = VolumeUpIcon;\n    if (this.props.muted) {\n      VolumeIcon = VolumeOffIcon;\n    } else if (this.props.volume === 0) {\n      VolumeIcon = VolumeMuteIcon;\n    } else if (this.props.volume < 50) {\n      VolumeIcon = VolumeDownIcon;\n    }\n    return (\n      <div className={cx('VolumeSlider', this.props.className)}>\n        <IconButton onClick={this.handleMuteClick}>\n          <VolumeIcon />\n        </IconButton>\n        <div className=\"VolumeSlider-slider\">\n          <Slider\n            min={0}\n            max={100}\n            step={1}\n            value={this.props.volume}\n            onChange={this.handleVolumeChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}