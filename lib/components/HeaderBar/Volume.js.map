{"version":3,"sources":["components/HeaderBar/Volume.js"],"names":["sliderStyle","marginTop","marginBottom","Volume","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","handleVolumeChange","e","volume","props","onVolumeChange","handleMuteClick","muted","onUnmute","onMute","prototype","shouldComponentUpdate","nextProps","render","VolumeIcon","className","color","onClick","name","min","max","value","style","onChange","Component","propTypes","process","env","NODE_ENV","string","number","bool","func"],"mappings":"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","file":"Volume.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from 'material-ui/Slider';\nimport VolumeDownIcon from 'material-ui/svg-icons/av/volume-down';\nimport VolumeMuteIcon from 'material-ui/svg-icons/av/volume-mute';\nimport VolumeOffIcon from 'material-ui/svg-icons/av/volume-off';\nimport VolumeUpIcon from 'material-ui/svg-icons/av/volume-up';\n\nconst sliderStyle = {\n  // The material-ui Slider has a 24px margin on top that we can't override,\n  // but we can compensate for it here.\n  // TODO Do this properly when/if material-ui gets a better styling solution.\n  marginTop: -21,\n  marginBottom: 3,\n};\n\nexport default class Volume extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    volume: PropTypes.number,\n    muted: PropTypes.bool,\n\n    onVolumeChange: PropTypes.func,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.volume !== nextProps.volume ||\n      this.props.muted !== nextProps.muted;\n  }\n\n  handleVolumeChange = (e, volume) => {\n    this.props.onVolumeChange(volume);\n  };\n\n  handleMuteClick = () => {\n    if (this.props.muted) {\n      this.props.onUnmute();\n    } else {\n      this.props.onMute();\n    }\n  };\n\n  render() {\n    let VolumeIcon = VolumeUpIcon;\n    if (this.props.muted) {\n      VolumeIcon = VolumeOffIcon;\n    } else if (this.props.volume === 0) {\n      VolumeIcon = VolumeMuteIcon;\n    } else if (this.props.volume < 50) {\n      VolumeIcon = VolumeDownIcon;\n    }\n    return (\n      <div className={cx('VolumeSlider', this.props.className)}>\n        <VolumeIcon\n          color=\"#fff\"\n          onClick={this.handleMuteClick}\n        />\n        <div className=\"VolumeSlider-slider\">\n          <Slider\n            name=\"volume\"\n            min={0}\n            max={100}\n            value={this.props.volume}\n            style={sliderStyle}\n            onChange={this.handleVolumeChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}