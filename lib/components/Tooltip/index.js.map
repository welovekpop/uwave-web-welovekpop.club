{"version":3,"sources":["components/Tooltip/index.js"],"names":["Tooltip","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","horizontalPosition","props","insert","show","refTooltip","tooltip","prototype","componentWillReceiveProps","nextProps","hide","clearTimeout","_clearTimeout","toString","timeout","_this2","setState","position","_this3","setTimeout","rect","getBoundingClientRect","right","window","innerWidth","render","_state","className","createElement","ref","style","pointerEvents","Component","propTypes","process","env","NODE_ENV","object","bool","oneOf"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport MuiTooltip from 'material-ui/internal/Tooltip';\n\n/**\n * Wrapper for material-ui Tooltips with better center-alignment on things that\n * are not IconButtons, and auto-realignment when close to the window border in\n * order to prevent overflow.\n */\n\nclass Tooltip extends React.Component {\n  static propTypes = {\n    style: PropTypes.object,\n    show: PropTypes.bool,\n    /**\n     * Desired horizontal position of the tooltip.\n     */\n    horizontalPosition: PropTypes.oneOf([ 'left', 'center', 'right' ])\n  };\n\n  state = {\n    /**\n     * Overflow-prevented horizontal position of the tooltip.\n     */\n    horizontalPosition: this.props.horizontalPosition,\n    /**\n     * Whether the tooltip element is currently in the DOM.\n     */\n    insert: this.props.show,\n    /**\n     * Whether the tooltip element is currently visible.\n     */\n    show: this.props.show\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.props.show && nextProps.show) {\n      this.show();\n    }\n\n    if (this.props.show && !nextProps.show) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Clear the fade-out animation timeout.\n   */\n  clearTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }\n\n  /**\n   * Show the tooltip.\n   */\n  show() {\n    this.clearTimeout();\n    this.setState({ insert: true }, () => {\n      this.position();\n      this.setState({ show: true });\n    });\n  }\n\n  /**\n   * Hide the tooltip.\n   */\n  hide() {\n    if (this.timeout) {\n      return;\n    }\n\n    // First hide it,\n    this.setState({ show: false }, () => {\n      // Then wait for the fade-out animation,\n      this.timeout = setTimeout(() => {\n        // And finally remove the element.\n        this.setState({\n          insert: false,\n          // The horizontal position is reset here, so that the next time the\n          // tooltip is shown, the positioning checks run on the original\n          // position. Otherwise, it might getBoundingClientRect() from an\n          // already-repositioned element, discover that it is fits, and go back\n          // to the initial state even if it did not fit.\n          horizontalPosition: this.props.horizontalPosition\n        });\n      }, 450);\n    });\n  }\n\n  /**\n   * Reposition the tooltip if it is close to the window border.\n   */\n  position() {\n    if (!this.tooltip) {\n      return;\n    }\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const rect = findDOMNode(this.tooltip).getBoundingClientRect();\n    this.setState({\n      horizontalPosition: rect.right > window.innerWidth ? 'left' :\n        this.props.horizontalPosition\n    });\n  }\n\n  refTooltip = (tooltip) => {\n    this.tooltip = tooltip;\n  };\n\n  render() {\n    const { insert, show } = this.state;\n    return (\n      <div className=\"u-TooltipFix\">\n        {insert && (\n          <MuiTooltip\n            ref={this.refTooltip}\n            {...this.props}\n            show={show}\n            horizontalPosition={this.state.horizontalPosition}\n            style={{\n              // \"pointer-events: none\" avoids interference with tooltips  that\n              // are very close to or overlay other elements that have tooltips.\n              pointerEvents: 'none',\n              ...this.props.style\n            }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Tooltip;\n"]}