{"version":3,"sources":["components/PlaylistManager/Menu/index.js"],"names":["Menu","_ref","className","playlists","selected","searchQuery","showSearchResults","searchResults","onCreatePlaylist","onSelectPlaylist","onSelectSearchResults","onCloseSearchResults","onAddToPlaylist","showImportPanel","onShowImportPanel","searchIsSelected","importIsSelected","isSelectingPlaylist","role","query","size","onClick","onClose","map","pl","playlist","_id","propTypes","process","env","NODE_ENV","string","arrayOf","object","isRequired","bool","number","func"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,OAAO,SAASA,IAAT,CAAcC,IAAd,EAAoB;AAC7B,MAAIC,YAAYD,KAAKC,SAArB;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,WAAWH,KAAKG,QAFpB;AAAA,MAGIC,cAAcJ,KAAKI,WAHvB;AAAA,MAIIC,oBAAoBL,KAAKK,iBAJ7B;AAAA,MAKIC,gBAAgBN,KAAKM,aALzB;AAAA,MAMIC,mBAAmBP,KAAKO,gBAN5B;AAAA,MAOIC,mBAAmBR,KAAKQ,gBAP5B;AAAA,MAQIC,wBAAwBT,KAAKS,qBARjC;AAAA,MASIC,uBAAuBV,KAAKU,oBAThC;AAAA,MAUIC,kBAAkBX,KAAKW,eAV3B;AAAA,MAWIC,kBAAkBZ,KAAKY,eAX3B;AAAA,MAYIC,oBAAoBb,KAAKa,iBAZ7B;;AAcA,MAAIC,mBAAmBT,oBAAoB,aAApB,GAAoC,EAA3D;AACA,MAAIU,mBAAmBH,kBAAkB,aAAlB,GAAkC,EAAzD;AACA,MAAII,sBAAsBb,YAAY,CAACE,iBAAb,IAAkC,CAACO,eAA7D;AACA,SAAO,mBAAK,KAAL,EAAY;AACjBK,UAAM,MADW;AAEjBhB,eAAW,0BAAG,cAAH,EAAmBA,SAAnB;AAFM,GAAZ,EAGJ,KAAK,CAHD,EAGI,0CAAwB;AACjCA,eAAW,kBADsB;AAEjCM,sBAAkBA;AAFe,GAAxB,CAHJ,EAMHH,eAAe,+CAAuB;AACxCH,eAAW,0BAAG,kBAAH,EAAuBa,gBAAvB,CAD6B;AAExCI,WAAOd,WAFiC;AAGxCe,UAAMb,aAHkC;AAIxCc,aAASX,qBAJ+B;AAKxCY,aAASX;AAL+B,GAAvB,CANZ,EAYHR,UAAUoB,GAAV,CAAc,UAAUC,EAAV,EAAc;AAC9B,WAAO,kCAAkB;AACvBtB,iBAAW,kBADY;AAEvBuB,gBAAUD,EAFa;AAGvBpB,gBAAUa,uBAAuBb,SAASsB,GAAT,KAAiBF,GAAGE,GAH9B;AAIvBL,eAAS,SAASA,OAAT,GAAmB;AAC1B,eAAOZ,iBAAiBe,GAAGE,GAApB,CAAP;AACD,OANsB;AAOvBd,uBAAiBA;AAPM,KAAlB,EAQJY,GAAGE,GARC,CAAP;AASD,GAVG,CAZG,EAsBH,gDAAwB;AAC1BxB,eAAW,0BAAG,kBAAH,EAAuBc,gBAAvB,CADe;AAE1BK,aAASP;AAFiB,GAAxB,CAtBG,CAAP;AA0BD,CA5CD;;AA8CAd,KAAK2B,SAAL,GAAiBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACvD5B,aAAW,oBAAU6B,MADkC;AAEvD5B,aAAW,oBAAU6B,OAAV,CAAkB,oBAAUC,MAA5B,EAAoCC,UAFQ;AAGvD9B,YAAU,oBAAU6B,MAHmC;AAIvD3B,qBAAmB,oBAAU6B,IAAV,CAAeD,UAJqB;AAKvDrB,mBAAiB,oBAAUsB,IAAV,CAAeD,UALuB;AAMvD7B,eAAa,oBAAU0B,MANgC;AAOvDxB,iBAAe,oBAAU6B,MAP8B;AAQvD5B,oBAAkB,oBAAU6B,IAAV,CAAeH,UARsB;AASvDzB,oBAAkB,oBAAU4B,IAAV,CAAeH,UATsB;AAUvDxB,yBAAuB,oBAAU2B,IAAV,CAAeH,UAViB;AAWvDvB,wBAAsB,oBAAU0B,IAAV,CAAeH,UAXkB;AAYvDtB,mBAAiB,oBAAUyB,IAAV,CAAeH,UAZuB;AAavDpB,qBAAmB,oBAAUuB,IAAV,CAAeH;AAbqB,CAAxC,GAcb,EAdJ;;kBAgBelC,I;AACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PlaylistRow from './Row';\nimport PlaylistCreateRow from './NewPlaylist';\nimport SearchResultsRow from './SearchResultsRow';\nimport PlaylistImportRow from './PlaylistImportRow';\n\nconst Menu = ({\n  className,\n  playlists,\n  selected,\n  searchQuery,\n  showSearchResults,\n  searchResults,\n  onCreatePlaylist,\n  onSelectPlaylist,\n  onSelectSearchResults,\n  onCloseSearchResults,\n  onAddToPlaylist,\n  showImportPanel,\n  onShowImportPanel,\n}) => {\n  const searchIsSelected = showSearchResults ? 'is-selected' : '';\n  const importIsSelected = showImportPanel ? 'is-selected' : '';\n  const isSelectingPlaylist = selected && !showSearchResults && !showImportPanel;\n  return (\n    <div\n      role=\"menu\"\n      className={cx('PlaylistMenu', className)}\n    >\n      <PlaylistCreateRow\n        className=\"PlaylistMenu-row\"\n        onCreatePlaylist={onCreatePlaylist}\n      />\n      {searchQuery && (\n        <SearchResultsRow\n          className={cx('PlaylistMenu-row', searchIsSelected)}\n          query={searchQuery}\n          size={searchResults}\n          onClick={onSelectSearchResults}\n          onClose={onCloseSearchResults}\n        />\n      )}\n      {playlists.map(pl => (\n        <PlaylistRow\n          key={pl._id}\n          className=\"PlaylistMenu-row\"\n          playlist={pl}\n          selected={isSelectingPlaylist && selected._id === pl._id}\n          onClick={() => onSelectPlaylist(pl._id)}\n          onAddToPlaylist={onAddToPlaylist}\n        />\n      ))}\n      <PlaylistImportRow\n        className={cx('PlaylistMenu-row', importIsSelected)}\n        onClick={onShowImportPanel}\n      />\n    </div>\n  );\n};\n\nMenu.propTypes = {\n  className: PropTypes.string,\n  playlists: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selected: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  searchQuery: PropTypes.string,\n  searchResults: PropTypes.number,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onSelectPlaylist: PropTypes.func.isRequired,\n  onSelectSearchResults: PropTypes.func.isRequired,\n  onCloseSearchResults: PropTypes.func.isRequired,\n  onAddToPlaylist: PropTypes.func.isRequired,\n  onShowImportPanel: PropTypes.func.isRequired,\n};\n\nexport default Menu;\n"]}