{"version":3,"sources":["components/PlaylistManager/Menu/Row.js"],"names":["playlistTarget","drop","_ref","monitor","playlist","onAddToPlaylist","_monitor$getItem","getItem","media","collect","connect","connectDropTarget","dropTarget","isOver","enhance","MEDIA","_ref2","className","CircularProgress","size","_ref3","ActiveIcon","PlaylistRow","_React$Component","apply","arguments","_proto","prototype","render","_props","props","selected","onClick","activeClass","active","selectedClass","droppableClass","icon","creating","role","name","React","Component","propTypes","process","env","NODE_ENV","PropTypes","string","object","bool","isRequired","func"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { CircularProgress } from 'material-ui/Progress';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      className,\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const selectedClass = selected && 'is-selected';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <button\n        role=\"menuitem\"\n        className={cx('PlaylistMenuRow', activeClass, selectedClass, droppableClass, className)}\n        onClick={onClick}\n      >\n        <div className=\"PlaylistMenuRow-content\">\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </div>\n      </button>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n"]}