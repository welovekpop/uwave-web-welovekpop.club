{"version":3,"sources":["components/PlaylistManager/Menu/Row.js"],"names":["playlistTarget","drop","_ref","monitor","playlist","onAddToPlaylist","_monitor$getItem","getItem","media","collect","connect","connectDropTarget","dropTarget","isOver","enhance","MEDIA","itemClasses","root","selected","_ref2","className","CircularProgress","size","_ref3","ActiveIcon","PlaylistRow","_React$Component","apply","arguments","_proto","prototype","render","_props","props","onClick","activeClass","active","droppableClass","icon","creating","MenuItem","classes","name","React","Component","propTypes","process","env","NODE_ENV","PropTypes","object","bool","isRequired","func"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { CircularProgress } from 'material-ui/Progress';\nimport { MenuItem } from 'material-ui/Menu';\nimport ActiveIcon from '@material-ui/icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nconst itemClasses = {\n  root: 'PlaylistMenuRow',\n  selected: 'is-selected',\n};\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <div>\n        <MenuItem\n          selected={selected}\n          className={cx(activeClass, droppableClass)}\n          classes={itemClasses}\n          onClick={onClick}\n        >\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </MenuItem>\n      </div>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n"]}