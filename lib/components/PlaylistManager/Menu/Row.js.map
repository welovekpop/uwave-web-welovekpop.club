{"version":3,"sources":["components/PlaylistManager/Menu/Row.js"],"names":["playlistTarget","drop","_ref","monitor","playlist","onAddToPlaylist","_monitor$getItem","getItem","media","collect","connect","connectDropTarget","dropTarget","isOver","enhance","_ref2","className","size","_ref3","PlaylistRow","_React$Component","apply","arguments","prototype","render","_props","props","selected","onClick","activeClass","active","selectedClass","droppableClass","icon","creating","role","name","Component","propTypes","process","env","NODE_ENV","string","object","bool","isRequired","func"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { CircularProgress } from 'material-ui/Progress';\nimport ActiveIcon from 'material-ui-icons/Check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nconst enhance = DropTarget(MEDIA, playlistTarget, collect);\n\nclass PlaylistRow extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    playlist: PropTypes.object,\n    selected: PropTypes.bool,\n    isOver: PropTypes.bool.isRequired,\n\n    connectDropTarget: PropTypes.func.isRequired,\n    onClick: PropTypes.func,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: PropTypes.func,\n  };\n\n  render() {\n    const {\n      className,\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver,\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const selectedClass = selected && 'is-selected';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <CircularProgress size=\"100%\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon />\n        </div>\n      );\n    }\n\n    return connectDropTarget((\n      <button\n        role=\"menuitem\"\n        className={cx('PlaylistMenuRow', activeClass, selectedClass, droppableClass, className)}\n        onClick={onClick}\n      >\n        <div className=\"PlaylistMenuRow-content\">\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </div>\n      </button>\n    ));\n  }\n}\n\nexport default enhance(PlaylistRow);\n"]}