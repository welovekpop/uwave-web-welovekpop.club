{"version":3,"sources":["components/PlaylistManager/Menu/Row.js"],"names":["_dec","_class","playlistTarget","drop","_ref","monitor","playlist","onAddToPlaylist","_monitor$getItem","getItem","media","collect","connect","connectDropTarget","dropTarget","isOver","_ref2","className","size","_ref3","color","PlaylistRow","_React$Component","apply","arguments","prototype","render","_props","props","selected","onClick","activeClass","active","selectedClass","droppableClass","icon","creating","role","name","Component","default","propTypes","process","env","NODE_ENV","PropTypes","string","object","bool","isRequired","func"],"mappings":"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","file":"Row.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport ActiveIcon from 'material-ui/svg-icons/navigation/check';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport Loader from '../../Loader';\n\nconst playlistTarget = {\n  drop({ playlist, onAddToPlaylist }, monitor) {\n    const { media } = monitor.getItem();\n    onAddToPlaylist(playlist, media);\n  }\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver()\n});\n\n@DropTarget(MEDIA, playlistTarget, collect)\nexport default class PlaylistRow extends React.Component {\n  static propTypes = {\n    className: React.PropTypes.string,\n    playlist: React.PropTypes.object,\n    selected: React.PropTypes.bool,\n    isOver: React.PropTypes.bool.isRequired,\n\n    connectDropTarget: React.PropTypes.func.isRequired,\n    onClick: React.PropTypes.func,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onAddToPlaylist: React.PropTypes.func\n  };\n\n  render() {\n    const {\n      className,\n      playlist,\n      selected,\n\n      onClick,\n\n      connectDropTarget,\n      isOver\n    } = this.props;\n    const activeClass = playlist.active && 'is-active';\n    const selectedClass = selected && 'is-selected';\n    const droppableClass = isOver && 'is-droppable';\n\n    let icon;\n    if (playlist.creating) {\n      icon = (\n        <div className=\"PlaylistMenuRow-loading\">\n          <Loader size=\"tiny\" />\n        </div>\n      );\n    } else if (playlist.active) {\n      icon = (\n        <div className=\"PlaylistMenuRow-active-icon\">\n          <ActiveIcon color=\"#fff\" />\n        </div>\n      );\n    }\n\n    return connectDropTarget(\n      <button\n        role=\"menuitem\"\n        className={cx('PlaylistMenuRow', activeClass, selectedClass, droppableClass, className)}\n        onClick={onClick}\n      >\n        <div className=\"PlaylistMenuRow-content\">\n          <div className=\"PlaylistMenuRow-title\">\n            {icon}\n            {playlist.name}\n          </div>\n          <div className=\"PlaylistMenuRow-count\">{playlist.size}</div>\n        </div>\n      </button>\n    );\n  }\n}\n"]}