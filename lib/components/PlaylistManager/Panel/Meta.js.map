{"version":3,"sources":["components/PlaylistManager/Panel/Meta.js"],"names":["checkboxIconStyle","fill","_ref2","color","_ref3","PlaylistMeta","_ref","t","className","active","name","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","onNotDeletable","onFilter","checked","onCheck","checkedIcon","uncheckedIcon","iconStyle","label","onShuffle","initialName","onRename","onDelete","propTypes","process","env","NODE_ENV","func","isRequired","string","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,oBAAoB,EAAEC,MAAM,MAAR,EAAxB;;AAEA,IAAIC,QAAQ,uCAAiB;AAC3BC,SAAO;AADoB,CAAjB,CAAZ;;AAIA,IAAIC,QAAQ,mDAAmB;AAC7BD,SAAO;AADsB,CAAnB,CAAZ;;AAIA,IAAIE,eAAe,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,SAASH,KAAKG,MAFlB;AAAA,MAGIC,OAAOJ,KAAKI,IAHhB;AAAA,MAIIC,oBAAoBL,KAAKK,iBAJ7B;AAAA,MAKIC,qBAAqBN,KAAKM,kBAL9B;AAAA,MAMIC,mBAAmBP,KAAKO,gBAN5B;AAAA,MAOIC,mBAAmBR,KAAKQ,gBAP5B;AAAA,MAQIC,iBAAiBT,KAAKS,cAR1B;AAAA,MASIC,WAAWV,KAAKU,QATpB;AAUA,SAAO,mBAAK,KAAL,EAAY;AACjBR,eAAW,0BAAG,cAAH,EAAmBA,SAAnB,EAA8BC,SAAS,sBAAT,GAAkC,EAAhE;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAK,KAAL,EAAY;AACrBD,eAAW;AADU,GAAZ,EAER,KAAK,CAFG,EAEAE,IAFA,CAFJ,EAIW,mBAAK,KAAL,EAAY;AAC5BF,eAAW;AADiB,GAAZ,EAEf,KAAK,CAFU,EAEP,uCAAe;AACxBS,aAASR,MADe;AAExBS,aAAST,SAAS,IAAT,GAAgBG,kBAFD;AAGxBO,iBAAajB,KAHW;AAIxBkB,mBAAehB,KAJS;AAKxBiB,eAAWrB,iBALa;AAMxBsB,WAAOb,SAASF,EAAE,kBAAF,CAAT,GAAiCA,EAAE,oBAAF;AANhB,GAAf,CAFO,CAJX,EAaF,6CAAqB;AACxBS,cAAUA;AADc,GAArB,CAbE,EAeH,oDAA4B;AAC9BO,eAAWZ;AADmB,GAA5B,CAfG,EAiBH,mDAA2B;AAC7Ba,iBAAad,IADgB;AAE7Be,cAAUZ;AAFmB,GAA3B,CAjBG,EAoBH,mDAA2B;AAC7BJ,YAAQA,MADqB;AAE7BM,oBAAgBA,cAFa;AAG7BW,cAAUZ;AAHmB,GAA3B,CApBG,CAAP;AAyBD,CApCD;;AAsCAT,aAAasB,SAAb,GAAyBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC/DvB,KAAG,oBAAUwB,IAAV,CAAeC,UAD6C;AAE/DxB,aAAW,oBAAUyB,MAF0C;AAG/DxB,UAAQ,oBAAUyB,IAAV,CAAeF,UAHwC;AAI/DtB,QAAM,oBAAUuB,MAAV,CAAiBD,UAJwC;AAK/DrB,qBAAmB,oBAAUoB,IAAV,CAAeC,UAL6B;AAM/DpB,sBAAoB,oBAAUmB,IAAV,CAAeC,UAN4B;AAO/DnB,oBAAkB,oBAAUkB,IAAV,CAAeC,UAP8B;AAQ/DlB,oBAAkB,oBAAUiB,IAAV,CAAeC,UAR8B;AAS/DjB,kBAAgB,oBAAUgB,IAAV,CAAeC,UATgC;AAU/DhB,YAAU,oBAAUe,IAAV,CAAeC;AAVsC,CAAxC,GAWrB,EAXJ;;kBAae,+BAAY3B,YAAZ,C;AACf","file":"Meta.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport Checkbox from 'material-ui/Checkbox';\nimport ActiveIcon from 'material-ui/svg-icons/toggle/check-box';\nimport ActivateIcon from 'material-ui/svg-icons/toggle/check-box-outline-blank';\n\nimport RenamePlaylistButton from './RenamePlaylistButton';\nimport DeletePlaylistButton from './DeletePlaylistButton';\nimport ShufflePlaylistButton from './ShufflePlaylistButton';\nimport PlaylistFilter from './PlaylistFilter';\n\nconst checkboxIconStyle = { fill: '#fff' };\n\nconst PlaylistMeta = ({\n  t,\n  className,\n  active,\n  name,\n  onShufflePlaylist,\n  onActivatePlaylist,\n  onRenamePlaylist,\n  onDeletePlaylist,\n  onNotDeletable,\n  onFilter,\n}) => (\n  <div className={cx('PlaylistMeta', className, active ? 'PlaylistMeta--active' : '')}>\n    <div className=\"PlaylistMeta-name\">\n      {name}\n    </div>\n    <div className=\"PlaylistMeta-active\">\n      <Checkbox\n        checked={active}\n        onCheck={active ? null : onActivatePlaylist}\n        checkedIcon={<ActiveIcon color=\"#fff\" />}\n        uncheckedIcon={<ActivateIcon color=\"#fff\" />}\n        iconStyle={checkboxIconStyle}\n        label={active ? t('playlists.active') : t('playlists.activate')}\n      />\n    </div>\n    <PlaylistFilter\n      onFilter={onFilter}\n    />\n    <ShufflePlaylistButton onShuffle={onShufflePlaylist} />\n    <RenamePlaylistButton\n      initialName={name}\n      onRename={onRenamePlaylist}\n    />\n    <DeletePlaylistButton\n      active={active}\n      onNotDeletable={onNotDeletable}\n      onDelete={onDeletePlaylist}\n    />\n  </div>\n);\n\nPlaylistMeta.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default translate()(PlaylistMeta);\n"]}