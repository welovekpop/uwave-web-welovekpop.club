{"version":3,"sources":["components/PlaylistManager/Panel/SearchResults.js"],"names":["_ref2","className","CircularProgress","size","SearchResults","_ref","t","query","results","loadingState","onOpenAddMediaMenu","onOpenPreviewMediaDialog","list","LOADED","MediaList","media","makeActions","selection","React","Fragment","AddToPlaylistAction","onAdd","position","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","string","arrayOf","object","oneOf","IDLE","LOADING"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA;AACJ;AACA,mBAAK,KAAL,EAAY;AACVC,aAAW;AADD,CAAZ,EAEG,KAAK,CAFR,EAEW,mBAAKC,0BAAL,EAAuB;AAChCC,QAAM;AAD0B,CAAvB,CAFX,CAFA;;AAQA,IAAIC,gBAAgB,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIL,YAAYI,KAAKJ,SADrB;AAAA,MAEIM,QAAQF,KAAKE,KAFjB;AAAA,MAGIC,UAAUH,KAAKG,OAHnB;AAAA,MAIIC,eAAeJ,KAAKI,YAJxB;AAAA,MAKIC,qBAAqBL,KAAKK,kBAL9B;AAAA,MAMIC,2BAA2BN,KAAKM,wBANpC;AAOA,MAAIC,IAAJ;;AAEA,MAAIH,iBAAiBI,qBAArB,EAA6B;AAC3BD,WAAO,mBAAKE,kBAAL,EAAgB;AACrBb,iBAAW,qBADU;AAErBc,aAAOP,OAFc;AAGrBG,gCAA0BA,wBAHL;AAIrBK,mBAAa,SAASA,WAAT,CAAqBD,KAArB,EAA4BE,SAA5B,EAAuC;AAClD,eAAO,mBAAKC,eAAMC,QAAX,EAAqB,EAArB,EAAyB,KAAK,CAA9B,EAAiC,mBAAKC,sBAAL,EAA0B;AAChEC,iBAAO,SAASA,KAAT,CAAeC,QAAf,EAAyB;AAC9B,mBAAOZ,mBAAmBY,QAAnB,EAA6BP,KAA7B,EAAoCE,SAApC,CAAP;AACD;AAH+D,SAA1B,CAAjC,CAAP;AAKD;AAVoB,KAAhB,CAAP;AAYD,GAbD,MAaO;AACLL,WAAOZ,KAAP;AACD;;AAED,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW,yBAAG,eAAH,EAAoB,eAApB,EAAqCA,SAArC;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAK,KAAL,EAAY;AACrBA,eAAW;AADU,GAAZ,EAER,KAAK,CAFG,EAEAK,EAAE,0BAAF,EAA8B;AACvCC,WAAOA;AADgC,GAA9B,CAFA,CAFJ,EAMFK,IANE,CAAP;AAOD,CAlCD;;AAoCAR,cAAcmB,SAAd,GAA0BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAChEpB,KAAGqB,mBAAUC,IAAV,CAAeC,UAD8C;AAEhE5B,aAAW0B,mBAAUG,MAF2C;AAGhEvB,SAAOoB,mBAAUG,MAAV,CAAiBD,UAHwC;AAIhErB,WAASmB,mBAAUI,OAAV,CAAkBJ,mBAAUK,MAA5B,CAJuD;AAKhEvB,gBAAckB,mBAAUM,KAAV,CAAgB,CAACC,mBAAD,EAAOC,sBAAP,EAAgBtB,qBAAhB,CAAhB,EAAyCgB,UALS;AAMhEnB,sBAAoBiB,mBAAUC,IAAV,CAAeC,UAN6B;AAOhElB,4BAA0BgB,mBAAUC,IAAV,CAAeC;AAPuB,CAAxC,GAQtB,EARJ;;eASe,+BAAYzB,aAAZ,C,EACf","file":"SearchResults.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { CircularProgress } from 'material-ui/Progress';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport MediaList from '../../MediaList';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\n\nconst SearchResults = ({\n  t,\n  className,\n  query,\n  results,\n  loadingState,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        media={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={(media, selection) => (\n          <React.Fragment>\n            <AddToPlaylistAction\n              onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n            />\n          </React.Fragment>\n        )}\n      />\n    );\n  } else {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResults.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default translate()(SearchResults);\n"]}