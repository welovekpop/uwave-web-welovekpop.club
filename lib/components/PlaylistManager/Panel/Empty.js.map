{"version":3,"sources":["components/PlaylistManager/Panel/Empty.js"],"names":["EmptyPanel","_ref","t","className","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,aAAa,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACzC,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAEA,SAAO,mBAAK,KAAL,EAAY;AACjBA,eAAW,yBAAG,eAAH,EAAoB,sBAApB,EAA4CA,SAA5C;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEID,EAAE,uBAAF,CAFJ,CAAP;AAGD,CAND;;AAQAF,WAAWI,SAAX,GAAuBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7DL,KAAGM,mBAAUC,IAAV,CAAeC,UAD2C;AAE7DP,aAAWK,mBAAUG;AAFwC,CAAxC,GAGnB,EAHJ;;eAIe,+BAAYX,UAAZ,C","file":"Empty.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nconst EmptyPanel = ({ t, className }) => (\n  <div className={cx('PlaylistPanel', 'PlaylistPanel--empty', className)}>\n    {t('playlists.noPlaylists')}\n  </div>\n);\n\nEmptyPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default translate()(EmptyPanel);\n"]}