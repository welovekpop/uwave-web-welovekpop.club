{"version":3,"sources":["components/PlaylistManager/Panel/index.js"],"names":["makeActions","_ref","onOpenAddMediaMenu","onMoveToFirst","onMoveToLast","onEditMedia","onRemoveFromPlaylist","isFiltered","media","selection","index","AddToPlaylistAction","onAdd","position","MoveToFirstAction","onFirst","MoveToLastAction","onLast","EditMediaAction","onEdit","RemoveFromPlaylistAction","onRemove","_ref2","className","CircularProgress","size","PlaylistPanel","props","playlist","loading","onShufflePlaylist","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","onNotDeletable","onLoadPlaylistPage","onFilterPlaylistItems","onMoveMedia","onOpenPreviewMediaDialog","list","MediaList","length","rowComponent","PlainItemRow","PlaylistItemRow","rowProps","onRequestPage","PlaylistMeta","id","_id","name","active","onFilter","propTypes","process","env","NODE_ENV","PropTypes","string","object","isRequired","array","bool","func"],"mappings":"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","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MediaList from '../../MediaList';\nimport PlaylistMeta from './Meta';\nimport PlainItemRow from '../../MediaList/Row';\nimport PlaylistItemRow from './PlaylistItemRow';\nimport AddToPlaylistAction from '../../MediaList/Actions/AddToPlaylist';\nimport RemoveFromPlaylistAction from '../../MediaList/Actions/RemoveFromPlaylist';\nimport EditMediaAction from '../../MediaList/Actions/EditMedia';\nimport MoveToFirstAction from '../../MediaList/Actions/MoveToFirst';\nimport MoveToLastAction from '../../MediaList/Actions/MoveToLast';\n\nconst makeActions = ({\n  onOpenAddMediaMenu,\n  onMoveToFirst,\n  onMoveToLast,\n  onEditMedia,\n  onRemoveFromPlaylist,\n  isFiltered,\n}) =>\n  (media, selection, index) => [\n    <AddToPlaylistAction\n      key=\"add\"\n      onAdd={position => onOpenAddMediaMenu(position, media, selection)}\n    />,\n    // Don't show the \"move to first\" action on the first item in the playlist.\n    // If the playlist is filtered we don't know if the first item to show is\n    // also the first in the playlist, so just show it always in that case.\n    (index > 0 || isFiltered) && (\n      <MoveToFirstAction\n        key=\"first\"\n        onFirst={() => onMoveToFirst(media, selection)}\n      />\n    ),\n    (index === 0 && !isFiltered) && (\n      <MoveToLastAction\n        key=\"last\"\n        onLast={() => onMoveToLast(media, selection)}\n      />\n    ),\n    <EditMediaAction\n      key=\"edit\"\n      onEdit={() => onEditMedia(media)}\n    />,\n    <RemoveFromPlaylistAction\n      key=\"remove\"\n      onRemove={() => onRemoveFromPlaylist(media, selection)}\n    />,\n  ];\n\nconst PlaylistPanel = (props) => {\n  const {\n    className,\n    playlist,\n    media,\n    loading,\n    isFiltered,\n    onShufflePlaylist,\n    onActivatePlaylist,\n    onRenamePlaylist,\n    onDeletePlaylist,\n    onNotDeletable,\n    onLoadPlaylistPage,\n    onFilterPlaylistItems,\n    onMoveMedia,\n    onOpenPreviewMediaDialog,\n  } = props;\n\n  let list;\n  if (loading) {\n    list = (\n      <div className=\"PlaylistPanel-loading\">\n        <CircularProgress size=\"100%\" />\n      </div>\n    );\n  } else {\n    list = (\n      <MediaList\n        className=\"PlaylistPanel-media\"\n        size={media.length}\n        media={media}\n        rowComponent={isFiltered ? PlainItemRow : PlaylistItemRow}\n        rowProps={{ onMoveMedia }}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        makeActions={makeActions(props)}\n        onRequestPage={onLoadPlaylistPage}\n      />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', className)}>\n      <PlaylistMeta\n        className=\"PlaylistPanel-meta\"\n        id={playlist._id}\n        name={playlist.name}\n        active={playlist.active}\n        onShufflePlaylist={onShufflePlaylist}\n        onActivatePlaylist={onActivatePlaylist}\n        onRenamePlaylist={onRenamePlaylist}\n        onDeletePlaylist={onDeletePlaylist}\n        onNotDeletable={onNotDeletable}\n        onFilter={onFilterPlaylistItems}\n      />\n      {list}\n    </div>\n  );\n};\n\nPlaylistPanel.propTypes = {\n  className: PropTypes.string,\n  playlist: PropTypes.object.isRequired,\n  media: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isFiltered: PropTypes.bool.isRequired,\n  onShufflePlaylist: PropTypes.func.isRequired,\n  onActivatePlaylist: PropTypes.func.isRequired,\n  onRenamePlaylist: PropTypes.func.isRequired,\n  onDeletePlaylist: PropTypes.func.isRequired,\n  onLoadPlaylistPage: PropTypes.func.isRequired,\n  onFilterPlaylistItems: PropTypes.func.isRequired,\n  onNotDeletable: PropTypes.func.isRequired,\n  onMoveMedia: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default PlaylistPanel;\n"]}