{"version":3,"sources":["components/PlaylistManager/Panel/PlaylistFilter.js"],"names":["enhance","PlaylistFilter","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","open","value","onFilter","props","handleClick","isOpen","clearFilter","setState","input","focus","handleChange","event","target","refInput","_proto","prototype","render","t","className","Tooltip","title","placement","IconButton","onClick","FilterIcon","nativeColor","React","createElement","type","ref","onChange","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired"],"mappings":"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","file":"PlaylistFilter.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport FilterIcon from '@material-ui/icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    this.props.onFilter(value);\n  }, 200);\n\n  clearFilter() {\n    if (this.state.value !== '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleClick = () => {\n    const isOpen = !this.state.open;\n\n    if (!isOpen) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      open: isOpen,\n      value: '',\n    }, () => {\n      if (isOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.onFilter(event.target.value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t } = this.props;\n    const isOpen = this.state.open;\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n"]}