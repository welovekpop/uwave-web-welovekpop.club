{"version":3,"sources":["components/PlaylistManager/Panel/PlaylistFilter.js"],"names":["enhance","PlaylistFilter","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","open","value","onFilter","props","handleClick","isOpen","clearFilter","setState","input","focus","handleChange","event","target","refInput","prototype","render","t","className","title","placement","onClick","nativeColor","createElement","type","ref","onChange","Component","propTypes","process","env","NODE_ENV","func","isRequired"],"mappings":"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","file":"PlaylistFilter.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport debounce from 'lodash/debounce';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport FilterIcon from 'material-ui-icons/Search';\n\nconst enhance = translate();\n\nclass PlaylistFilter extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    onFilter: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n    value: '',\n  };\n\n  onFilter = debounce((value) => {\n    this.props.onFilter(value);\n  }, 200);\n\n  clearFilter() {\n    if (this.state.value !== '') {\n      this.props.onFilter('');\n    }\n  }\n\n  handleClick = () => {\n    const isOpen = !this.state.open;\n\n    if (!isOpen) {\n      this.clearFilter();\n    }\n\n    this.setState({\n      open: isOpen,\n      value: '',\n    }, () => {\n      if (isOpen) {\n        this.input.focus();\n      }\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n    this.onFilter(event.target.value);\n  };\n\n  refInput = (input) => {\n    this.input = input;\n  };\n\n  render() {\n    const { t } = this.props;\n    const isOpen = this.state.open;\n    return (\n      <div className=\"PlaylistMediaFilter\">\n        <Tooltip title={t('playlists.filter')} placement=\"top\">\n          <IconButton\n            className=\"PlaylistMeta-iconButton\"\n            onClick={this.handleClick}\n          >\n            <FilterIcon nativeColor={isOpen ? '#fff' : null} />\n          </IconButton>\n        </Tooltip>\n        <input\n          type=\"text\"\n          ref={this.refInput}\n          className={cx('PlaylistMediaFilter-input', isOpen && 'is-open')}\n          value={this.state.value}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default enhance(PlaylistFilter);\n"]}