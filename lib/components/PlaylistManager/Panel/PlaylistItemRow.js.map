{"version":3,"sources":["components/PlaylistManager/Panel/PlaylistItemRow.js"],"names":["mediaTarget","drop","props","monitor","component","item","getItem","media","thisID","_id","some","playlistItem","insertBefore","onMoveMedia","before","after","hover","setState","insertingAbove","collect","connect","connectDropTarget","dropTarget","isOver","_ref","className","PlaylistItemRow","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","_proto","prototype","render","_props","dropIndicator","React","createElement","MediaRow","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","bool","MEDIA"],"mappings":"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","file":"PlaylistItemRow.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport { MEDIA } from '../../../constants/DDItemTypes';\nimport isDraggingNearTopOfRow from '../../../utils/isDraggingNearTopOfRow';\nimport MediaRow from '../../MediaList/Row';\n\nconst mediaTarget = {\n  drop(props, monitor, component) {\n    const item = monitor.getItem();\n    const { media } = item;\n    if (media) {\n      const thisID = props.media._id;\n      // Do not attempt to move when the selection is dropped on top of an item\n      // that is in the selection.\n      if (media.some(playlistItem => playlistItem._id === thisID)) {\n        return;\n      }\n      const insertBefore = isDraggingNearTopOfRow(monitor, component);\n      props.onMoveMedia(\n        media,\n        insertBefore ? { before: thisID } : { after: thisID },\n      );\n    }\n  },\n  hover(props, monitor, component) {\n    component.setState({\n      insertingAbove: isDraggingNearTopOfRow(monitor, component),\n    });\n  },\n};\n\nconst collect = (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n});\n\nclass PlaylistItemRow extends React.Component {\n  static propTypes = {\n    connectDropTarget: PropTypes.func.isRequired,\n    // Used in the drop handler above ðŸ‘†\n    // eslint-disable-next-line react/no-unused-prop-types\n    onMoveMedia: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    insertingAbove: false,\n  };\n\n  render() {\n    const {\n      connectDropTarget,\n      isOver,\n      ...props\n    } = this.props;\n    const { insertingAbove } = this.state;\n\n    const dropIndicator = <div className=\"PlaylistItemRow-drop-indicator\" />;\n\n    return connectDropTarget((\n      <div className=\"PlaylistItemRow\">\n        {isOver && insertingAbove && dropIndicator}\n        <MediaRow {...props} />\n        {isOver && !insertingAbove && dropIndicator}\n      </div>\n    ));\n  }\n}\n\nexport default DropTarget(MEDIA, mediaTarget, collect)(PlaylistItemRow);\n"]}