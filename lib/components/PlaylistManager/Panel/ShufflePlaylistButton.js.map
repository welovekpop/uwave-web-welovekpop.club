{"version":3,"sources":["components/PlaylistManager/Panel/ShufflePlaylistButton.js"],"names":["enhance","onClick","props","setLoading","onShuffle","then","_ref2","CircularProgress","size","_ref3","ShuffleIcon","ShuffleButton","_ref","t","isLoading","Tooltip","title","placement","IconButton","className","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,UAAU,sBAAQ,wBAAU,WAAV,EAAuB,YAAvB,EAAqC,KAArC,CAAR,EAAqD,2BAAa;AAC9EC,WAAS,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,WAAO,YAAY;AACjBA,YAAMC,UAAN,CAAiB,IAAjB;AACAD,YAAME,SAAN,GAAkBC,IAAlB,CAAuB,YAAY;AACjCH,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAFD,EAEG,YAAY;AACbD,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAJD;AAKD,KAPD;AAQD;AAV6E,CAAb,CAArD,EAWV,8BAXU,CAAd;;AAaA,IAAIG;AACJ;AACA,mBAAKC,yBAAL,EAAuB;AACrBC,QAAM;AADe,CAAvB,CAFA;;AAMA,IAAIC;AACJ;AACA,mBAAKC,gBAAL,EAAkB,EAAlB,CAFA;;AAIA,IAAIC,gBAAgB,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIb,UAAUW,KAAKX,OAFnB;AAGA,SAAO,mBAAKc,gBAAL,EAAc;AACnBC,WAAOH,EAAE,mBAAF,CADY;AAEnBI,eAAW;AAFQ,GAAd,EAGJ,KAAK,CAHD,EAGI,mBAAKC,mBAAL,EAAiB;AAC1BC,eAAW,yBADe;AAE1BlB,aAASA;AAFiB,GAAjB,EAGR,KAAK,CAHG,EAGAa,YAAYR,KAAZ,GAAoBG,KAHpB,CAHJ,CAAP;AAOD,CAXD;;AAaAE,cAAcS,SAAd,GAA0BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAChEV,KAAGW,mBAAUC,IAAV,CAAeC,UAD8C;AAEhEZ,aAAWU,mBAAUG,IAAV,CAAeD,UAFsC;AAGhEzB,WAASuB,mBAAUC,IAAV,CAAeC,UAHwC;AAIhEtB,aAAWoB,mBAAUC,IAAV,CAAeC,UAJsC,CAI3B;;AAJ2B,CAAxC,GAMtB,EANJ;;eAOe1B,QAAQW,aAAR,C","file":"ShufflePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    },\n  }),\n  translate(),\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick,\n}) => (\n  <Tooltip title={t('playlists.shuffle')} placement=\"top\">\n    <IconButton\n      className=\"PlaylistMeta-iconButton\"\n      onClick={onClick}\n    >\n      {isLoading ? (\n        <CircularProgress size=\"100%\" />\n      ) : (\n        <ShuffleIcon />\n      )}\n    </IconButton>\n  </Tooltip>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired, // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n"]}