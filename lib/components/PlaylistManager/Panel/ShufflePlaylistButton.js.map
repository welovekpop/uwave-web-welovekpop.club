{"version":3,"sources":["components/PlaylistManager/Panel/ShufflePlaylistButton.js"],"names":["enhance","onClick","props","setLoading","onShuffle","then","_ref2","size","_ref3","color","hoverColor","ShuffleButton","_ref","t","isLoading","tooltip","tooltipPosition","propTypes","process","env","NODE_ENV","func","isRequired","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,UAAU,uBAAQ,yBAAU,WAAV,EAAuB,YAAvB,EAAqC,KAArC,CAAR,EAAqD,4BAAa;AAC9EC,WAAS,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,WAAO,YAAY;AACjBA,YAAMC,UAAN,CAAiB,IAAjB;AACAD,YAAME,SAAN,GAAkBC,IAAlB,CAAuB,YAAY;AACjCH,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAFD,EAEG,YAAY;AACbD,cAAMC,UAAN,CAAiB,KAAjB;AACD,OAJD;AAKD,KAPD;AAQD;AAV6E,CAAb,CAArD,EAWV,8BAXU,CAAd;;AAaA,IAAIG,QAAQ,qCAAa;AACvBC,QAAM;AADiB,CAAb,CAAZ;;AAIA,IAAIC,QAAQ,sCAAkB;AAC5BC,SAAO,MADqB;AAE5BC,cAAY;AAFgB,CAAlB,CAAZ;;AAKA,IAAIC,gBAAgB,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIb,UAAUW,KAAKX,OAFnB;AAGA,SAAO,yCAAiB;AACtBA,aAASA,OADa;AAEtBc,aAASF,EAAE,mBAAF,CAFa;AAGtBG,qBAAiB;AAHK,GAAjB,EAIJ,KAAK,CAJD,EAIIF,YAAYR,KAAZ,GAAoBE,KAJxB,CAAP;AAKD,CATD;;AAWAG,cAAcM,SAAd,GAA0BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAChEP,KAAG,oBAAUQ,IAAV,CAAeC,UAD8C;AAEhER,aAAW,oBAAUS,IAAV,CAAeD,UAFsC;AAGhErB,WAAS,oBAAUoB,IAAV,CAAeC,UAHwC;AAIhElB,aAAW,oBAAUiB,IAAV,CAAeC,UAJsC,CAI3B;AAJ2B,CAAxC,GAKtB,EALJ;;kBAOetB,QAAQW,aAAR,C;AACf","file":"ShufflePlaylistButton.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport withState from 'recompose/withState';\nimport withHandlers from 'recompose/withHandlers';\nimport { translate } from 'react-i18next';\nimport IconButton from 'material-ui/IconButton';\nimport ShuffleIcon from 'material-ui/svg-icons/av/shuffle';\nimport Loader from '../../Loader';\n\nconst enhance = compose(\n  withState('isLoading', 'setLoading', false),\n  withHandlers({\n    onClick: props => () => {\n      props.setLoading(true);\n      props.onShuffle().then(() => {\n        props.setLoading(false);\n      }, () => {\n        props.setLoading(false);\n      });\n    }\n  }),\n  translate()\n);\n\nconst ShuffleButton = ({\n  t,\n  isLoading,\n  onClick\n}) => (\n  <IconButton\n    onClick={onClick}\n    tooltip={t('playlists.shuffle')}\n    tooltipPosition=\"top-center\"\n  >\n    {isLoading ? (\n      <Loader size=\"tiny\" />\n    ) : (\n      <ShuffleIcon color=\"#555\" hoverColor=\"#fff\" />\n    )}\n  </IconButton>\n);\n\nShuffleButton.propTypes = {\n  t: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onShuffle: PropTypes.func.isRequired // eslint-disable-line react/no-unused-prop-types\n};\n\nexport default enhance(ShuffleButton);\n"]}