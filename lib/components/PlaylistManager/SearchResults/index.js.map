{"version":3,"sources":["components/PlaylistManager/SearchResults/index.js"],"names":["enhance","_ref2","NoSearchResults","_ref3","LoadingSearchResults","SearchResultsPanel","_ref","t","className","query","loadingState","results","onOpenAddMediaMenu","onOpenPreviewMediaDialog","list","LOADED","length","SearchResultsList","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","string","oneOf","IDLE","LOADING","arrayOf","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,UAAU,8BAAd;;AAEA,IAAIC;AACJ;AACA,mBAAKC,wBAAL,EAAsB,EAAtB,CAFA;;AAIA,IAAIC;AACJ;AACA,mBAAKC,6BAAL,EAA2B,EAA3B,CAFA;;AAIA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACzD,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,QAAQH,KAAKG,KAFjB;AAAA,MAGIC,eAAeJ,KAAKI,YAHxB;AAAA,MAIIC,UAAUL,KAAKK,OAJnB;AAAA,MAKIC,qBAAqBN,KAAKM,kBAL9B;AAAA,MAMIC,2BAA2BP,KAAKO,wBANpC;AAOA,MAAIC,IAAJ;;AAEA,MAAIJ,iBAAiBK,qBAArB,EAA6B;AAC3BD,WAAOH,QAAQK,MAAR,GAAiB,CAAjB,GAAqB,mBAAKC,0BAAL,EAAwB;AAClDN,eAASA,OADyC;AAElDE,gCAA0BA,wBAFwB;AAGlDD,0BAAoBA;AAH8B,KAAxB,CAArB,GAIFX,KAJL;AAKD,GAND,MAMO;AACLa,WAAOX,KAAP;AACD;;AAED,SAAO,mBAAK,KAAL,EAAY;AACjBK,eAAW,yBAAG,eAAH,EAAoB,eAApB,EAAqCA,SAArC;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAK,KAAL,EAAY;AACrBA,eAAW;AADU,GAAZ,EAER,KAAK,CAFG,EAEAD,EAAE,0BAAF,EAA8B;AACvCE,WAAOA;AADgC,GAA9B,CAFA,CAFJ,EAMFK,IANE,CAAP;AAOD,CA3BD;;AA6BAT,mBAAmBa,SAAnB,GAA+BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACrEd,KAAGe,mBAAUC,IAAV,CAAeC,UADmD;AAErEhB,aAAWc,mBAAUG,MAFgD;AAGrEhB,SAAOa,mBAAUG,MAAV,CAAiBD,UAH6C;AAIrEd,gBAAcY,mBAAUI,KAAV,CAAgB,CAACC,mBAAD,EAAOC,sBAAP,EAAgBb,qBAAhB,CAAhB,EAAyCS,UAJc;AAKrEb,WAASW,mBAAUO,OAAV,CAAkBP,mBAAUQ,MAA5B,CAL4D;AAMrElB,sBAAoBU,mBAAUC,IAAV,CAAeC,UANkC;AAOrEX,4BAA0BS,mBAAUC,IAAV,CAAeC;AAP4B,CAAxC,GAQ3B,EARJ;;eASexB,QAAQK,kBAAR,C,EACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { IDLE, LOADING, LOADED } from '../../../constants/LoadingStates';\nimport NoSearchResults from './NoSearchResults';\nimport LoadingSearchResults from './LoadingSearchResults';\nimport SearchResultsList from './SearchResultsList';\n\nconst enhance = translate();\n\nconst SearchResultsPanel = ({\n  t,\n  className,\n  query,\n  loadingState,\n  results,\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog,\n}) => {\n  let list;\n  if (loadingState === LOADED) {\n    list = results.length > 0 ? (\n      <SearchResultsList\n        results={results}\n        onOpenPreviewMediaDialog={onOpenPreviewMediaDialog}\n        onOpenAddMediaMenu={onOpenAddMediaMenu}\n      />\n    ) : (\n      <NoSearchResults />\n    );\n  } else {\n    list = (\n      <LoadingSearchResults />\n    );\n  }\n\n  return (\n    <div className={cx('PlaylistPanel', 'SearchResults', className)}>\n      <div className=\"SearchResults-query\">\n        {t('playlists.search.results', { query })}\n      </div>\n      {list}\n    </div>\n  );\n};\n\nSearchResultsPanel.propTypes = {\n  t: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  query: PropTypes.string.isRequired,\n  loadingState: PropTypes.oneOf([IDLE, LOADING, LOADED]).isRequired,\n  results: PropTypes.arrayOf(PropTypes.object),\n  onOpenAddMediaMenu: PropTypes.func.isRequired,\n  onOpenPreviewMediaDialog: PropTypes.func.isRequired,\n};\n\nexport default enhance(SearchResultsPanel);\n"]}