{"version":3,"sources":["components/PlaylistManager/index.js"],"names":["_ref2","className","_ref3","_ref4","_ref5","PlaylistManager","_ref","selectedPlaylist","showSearchResults","showImportPanel","onCloseOverlay","panel","_id","propTypes","process","env","NODE_ENV","string","object","bool","isRequired","func"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,QAAQ,mBAAK,KAAL,EAAY;AACtBC,aAAW;AADW,CAAZ,EAET,KAAK,CAFI,EAED,oDAAqB,EAArB,CAFC,CAAZ;;AAIA,IAAIC,QAAQ,iDAAoB,EAApB,CAAZ;;AAEA,IAAIC,QAAQ,oCAAyB,EAAzB,CAAZ;;AAEA,IAAIC,QAAQ,kDAAmB;AAC7BH,aAAW;AADkB,CAAnB,CAAZ;;AAIA,IAAII,kBAAkB,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIL,YAAYK,KAAKL,SAArB;AAAA,MACIM,mBAAmBD,KAAKC,gBAD5B;AAAA,MAEIC,oBAAoBF,KAAKE,iBAF7B;AAAA,MAGIC,kBAAkBH,KAAKG,eAH3B;AAAA,MAIIC,iBAAiBJ,KAAKI,cAJ1B;;AAMA,MAAIC,QAAQ,KAAK,CAAjB;AACA,MAAIF,eAAJ,EAAqB;AACnBE,YAAQX,KAAR;AACD,GAFD,MAEO,IAAIQ,iBAAJ,EAAuB;AAC5BG,YAAQT,KAAR;AACD,GAFM,MAEA,IAAIK,gBAAJ,EAAsB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,YAAQ,mDAAoB,EAApB,EAAwBJ,iBAAiBK,GAAzC,CAAR;AACD,GAVM,MAUA;AACLD,YAAQR,KAAR;AACD;;AAED,SAAO,mBAAK,KAAL,EAAY;AACjBF,eAAW,0BAAG,iBAAH,EAAsBA,SAAtB;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,qCAAqB;AAC9BA,eAAW,2CADmB;AAE9BS,oBAAgBA;AAFc,GAArB,CAFJ,EAKH,mBAAK,KAAL,EAAY;AACdT,eAAW;AADG,GAAZ,EAED,KAAK,CAFJ,EAEOG,KAFP,EAEc,mBAAK,KAAL,EAAY;AAC5BH,eAAW;AADiB,GAAZ,EAEf,KAAK,CAFU,EAEPU,KAFO,CAFd,CALG,CAAP;AAUD,CApCD;;AAsCAN,gBAAgBQ,SAAhB,GAA4BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClEf,aAAW,oBAAUgB,MAD6C;AAElEV,oBAAkB,oBAAUW,MAFsC;AAGlEV,qBAAmB,oBAAUW,IAAV,CAAeC,UAHgC;AAIlEX,mBAAiB,oBAAUU,IAAV,CAAeC,UAJkC;AAKlEV,kBAAgB,oBAAUW;AALwC,CAAxC,GAMxB,EANJ;;kBAQehB,e;AACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport PlaylistPanelEmpty from './Panel/Empty';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <PlaylistPanelEmpty />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <div className=\"AppRow AppRow--middle\">\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"]}