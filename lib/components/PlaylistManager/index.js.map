{"version":3,"sources":["components/PlaylistManager/index.js"],"names":["_ref2","className","PlaylistImport","_ref3","SearchResults","_ref4","PlaylistPanelEmpty","_ref5","PlaylistMenu","PlaylistManager","_ref","selectedPlaylist","showSearchResults","showImportPanel","onCloseOverlay","panel","PlaylistPanel","_id","PlaylistHeader","OverlayContent","propTypes","process","env","NODE_ENV","PropTypes","string","object","bool","isRequired","func"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA;AACJ;AACA,mBAAK,KAAL,EAAY;AACVC,aAAW;AADD,CAAZ,EAEG,KAAK,CAFR,EAEW,mBAAKC,8BAAL,EAAqB,EAArB,CAFX,CAFA;;AAMA,IAAIC;AACJ;AACA,mBAAKC,2BAAL,EAAoB,EAApB,CAFA;;AAIA,IAAIC;AACJ;AACA,mBAAKC,cAAL,EAAyB,EAAzB,CAFA;;AAIA,IAAIC;AACJ;AACA,mBAAKC,4BAAL,EAAmB;AACjBP,aAAW;AADM,CAAnB,CAFA;;AAMA,IAAIQ,kBAAkB,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACnD,MAAIT,YAAYS,KAAKT,SAArB;AAAA,MACIU,mBAAmBD,KAAKC,gBAD5B;AAAA,MAEIC,oBAAoBF,KAAKE,iBAF7B;AAAA,MAGIC,kBAAkBH,KAAKG,eAH3B;AAAA,MAIIC,iBAAiBJ,KAAKI,cAJ1B;AAKA,MAAIC,KAAJ;;AAEA,MAAIF,eAAJ,EAAqB;AACnBE,YAAQf,KAAR;AACD,GAFD,MAEO,IAAIY,iBAAJ,EAAuB;AAC5BG,YAAQZ,KAAR;AACD,GAFM,MAEA,IAAIQ,gBAAJ,EAAsB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,YAAQ,mBAAKC,6BAAL,EAAoB,EAApB,EAAwBL,iBAAiBM,GAAzC,CAAR;AACD,GAVM,MAUA;AACLF,YAAQV,KAAR;AACD;;AAED,SAAO,mBAAK,KAAL,EAAY;AACjBJ,eAAW,yBAAG,iBAAH,EAAsBA,SAAtB;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEI,mBAAKiB,eAAL,EAAqB;AAC9BjB,eAAW,2CADmB;AAE9Ba,oBAAgBA;AAFc,GAArB,CAFJ,EAKH,mBAAKK,gBAAL,EAAqB,EAArB,EAAyB,KAAK,CAA9B,EAAiCZ,KAAjC,EAAwC,mBAAK,KAAL,EAAY;AACtDN,eAAW;AAD2C,GAAZ,EAEzC,KAAK,CAFoC,EAEjCc,KAFiC,CAAxC,CALG,CAAP;AAQD,CAlCD;;AAoCAN,gBAAgBW,SAAhB,GAA4BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAClEtB,aAAWuB,mBAAUC,MAD6C;AAElEd,oBAAkBa,mBAAUE,MAFsC;AAGlEd,qBAAmBY,mBAAUG,IAAV,CAAeC,UAHgC;AAIlEf,mBAAiBW,mBAAUG,IAAV,CAAeC,UAJkC;AAKlEd,kBAAgBU,mBAAUK;AALwC,CAAxC,GAMxB,EANJ;eAOepB,e,EACf","file":"index.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport OverlayContent from '../Overlay/Content';\nimport PlaylistMenu from '../../containers/PlaylistManagerMenu';\nimport PlaylistPanel from '../../containers/PlaylistManagerPanel';\nimport PlaylistImport from '../../containers/PlaylistImportManager';\nimport SearchResults from '../../containers/SearchResultsPanel';\nimport PlaylistHeader from './Header';\nimport PlaylistPanelEmpty from './Panel/Empty';\n\nconst PlaylistManager = ({\n  className,\n  selectedPlaylist,\n  showSearchResults,\n  showImportPanel,\n  onCloseOverlay,\n}) => {\n  let panel;\n  if (showImportPanel) {\n    panel = (\n      <div className=\"PlaylistPanel\">\n        <PlaylistImport />\n      </div>\n    );\n  } else if (showSearchResults) {\n    panel = <SearchResults />;\n  } else if (selectedPlaylist) {\n    // HACK Give this a key so it's remounted when you switch playlists.\n    // This is because there is some statefulness down the tree, especially\n    // in playlist filters and scroll position.\n    // By forcing a remount using a key we throw away all state and keep it\n    // consistent.\n    // TODO To *actually* fix playlist filters bleeding across playlist lines,\n    // we should reset the playlist filter state alone somehow when the\n    // selected playlist changes.\n    panel = <PlaylistPanel key={selectedPlaylist._id} />;\n  } else {\n    panel = <PlaylistPanelEmpty />;\n  }\n\n  return (\n    <div className={cx('PlaylistManager', className)}>\n      <PlaylistHeader\n        className=\"PlaylistManager-header AppRow AppRow--top\"\n        onCloseOverlay={onCloseOverlay}\n      />\n\n      <OverlayContent>\n        <PlaylistMenu className=\"PlaylistManager-menu\" />\n        <div className=\"PlaylistManager-panel\">\n          {panel}\n        </div>\n      </OverlayContent>\n    </div>\n  );\n};\n\nPlaylistManager.propTypes = {\n  className: PropTypes.string,\n  selectedPlaylist: PropTypes.object,\n  showSearchResults: PropTypes.bool.isRequired,\n  showImportPanel: PropTypes.bool.isRequired,\n  onCloseOverlay: PropTypes.func,\n};\n\nexport default PlaylistManager;\n"]}