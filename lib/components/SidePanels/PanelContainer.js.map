{"version":3,"sources":["components/SidePanels/PanelContainer.js"],"names":["PanelContainer","_ref","selected","children","className","propTypes","process","env","NODE_ENV","node","isRequired","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,iBAAiB,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjD,MAAIC,WAAWD,KAAKC,QAApB;AAAA,MACIC,WAAWF,KAAKE,QADpB;AAEA,SAAO,mBAAK,KAAL,EAAY;AACjBC,eAAW,0BAAG,iBAAH,EAAsBF,YAAY,aAAlC;AADM,GAAZ,EAEJ,KAAK,CAFD,EAEIC,QAFJ,CAAP;AAGD,CAND;;AAQAH,eAAeK,SAAf,GAA2BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACjEL,YAAU,oBAAUM,IAAV,CAAeC,UADwC;AAEjER,YAAU,oBAAUS,IAAV,CAAeD;AAFwC,CAAxC,GAGvB,EAHJ;;kBAKeV,c;AACf","file":"PanelContainer.js","sourcesContent":["import cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PanelContainer = ({ selected, children }) => (\n  <div className={cx('SidePanel-panel', selected && 'is-selected')}>\n    {children}\n  </div>\n);\n\nPanelContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  selected: PropTypes.bool.isRequired,\n};\n\nexport default PanelContainer;\n"]}