{"version":3,"sources":["components/App/index.js"],"names":["MovedNotification","localStorage","_session","length","wlkSawMoveMessage","err","_ref","seen","setSeen","props","open","onClose","Snackbar","_ref3","className","HeaderBar","title","_ref4","ErrorArea","_ref5","FooterBar","_ref6","SidePanels","_ref7","Dialogs","_ref8","AddToPlaylistMenu","_ref9","DragLayer","_ref10","message","App","_ref2","activeOverlay","isConnected","settings","onCloseOverlay","Video","enabled","videoEnabled","size","videoSize","isMuted","muted","volume","ConnectionIndicator","Overlays","transitionName","active","About","AdminProxy","PlaylistManager","RoomHistory","SettingsManager","propTypes","process","env","NODE_ENV","PropTypes","string","bool","isRequired","object","func","HTML5Backend","toClass"],"mappings":"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","file":"index.js","sourcesContent":["/* global localStorage */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragDropContext } from 'react-dnd';\nimport compose from 'recompose/compose';\nimport toClass from 'recompose/toClass';\nimport withState from 'recompose/withState';\nimport mapProps from 'recompose/mapProps';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport Snackbar from 'material-ui/Snackbar';\n\nimport FooterBar from '../../containers/FooterBar';\nimport HeaderBar from '../../containers/HeaderBar';\nimport Video from '../../containers/Video';\nimport ErrorArea from '../../containers/ErrorArea';\nimport Overlays from './Overlays';\nimport PlaylistManager from '../../containers/PlaylistManager';\nimport RoomHistory from '../../containers/RoomHistory';\nimport SettingsManager from '../../containers/SettingsManager';\nimport AdminProxy from '../AdminProxy';\nimport About from '../../containers/About';\nimport ConnectionIndicator from '../ConnectionIndicator';\n\nimport SidePanels from '../../containers/SidePanels';\nimport Dialogs from '../Dialogs';\nimport AddToPlaylistMenu from '../../containers/AddToPlaylistMenu';\nimport DragLayer from '../../containers/DragLayer';\n\nconst MovedNotification = compose(\n  withState('seen', 'setSeen', () => {\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      return !localStorage._session || localStorage._session.length <= 30 ||\n        !!localStorage.wlkSawMoveMessage;\n    } catch (err) {\n      return false;\n    }\n  }),\n  mapProps(({ seen, setSeen, ...props }) => ({\n    ...props,\n    open: !seen,\n    onClose: () => {\n      try {\n        localStorage.wlkSawMoveMessage = '1';\n      } catch (err) {\n        // Nothing\n      }\n      setSeen(true);\n    },\n  })),\n)(Snackbar);\n\nconst App = ({\n  activeOverlay,\n  isConnected,\n  settings,\n  onCloseOverlay,\n}) => (\n  <div className=\"App\">\n    <div className=\"AppColumn AppColumn--left\">\n      <div className=\"AppRow AppRow--top\">\n        <HeaderBar\n          className=\"App-header\"\n          title=\"Ã¼Wave\"\n        />\n      </div>\n      <div className=\"AppRow AppRow--middle\">\n        <Video\n          enabled={settings.videoEnabled}\n          size={settings.videoSize}\n          isMuted={settings.muted}\n          volume={settings.volume}\n        />\n        <ErrorArea />\n        <ConnectionIndicator isConnected={isConnected} />\n      </div>\n      <Overlays transitionName=\"Overlay\" active={activeOverlay}>\n        <About key=\"about\" onCloseOverlay={onCloseOverlay} />\n        <AdminProxy key=\"admin\" onCloseOverlay={onCloseOverlay} />\n        <PlaylistManager key=\"playlistManager\" onCloseOverlay={onCloseOverlay} />\n        <RoomHistory key=\"roomHistory\" onCloseOverlay={onCloseOverlay} />\n        <SettingsManager key=\"settings\" onCloseOverlay={onCloseOverlay} />\n      </Overlays>\n      <FooterBar className=\"AppRow AppRow--bottom\" />\n    </div>\n\n    <div className=\"AppColumn AppColumn--right\">\n      <SidePanels />\n    </div>\n\n    <Dialogs />\n\n    <AddToPlaylistMenu />\n    <DragLayer />\n    <MovedNotification\n      message=\"WLK was recently updated! You will need to log in again, because of some security improvements that have been made.\"\n    />\n  </div>\n);\n\nApp.propTypes = {\n  activeOverlay: PropTypes.string,\n  isConnected: PropTypes.bool.isRequired,\n  settings: PropTypes.object.isRequired,\n  onCloseOverlay: PropTypes.func.isRequired,\n};\n\nexport default compose(\n  DragDropContext(HTML5Backend),\n  // DragDropContext needs to be able to set a ref on the component, so we can't\n  // use a stateless function directly.\n  toClass,\n)(App);\n"]}