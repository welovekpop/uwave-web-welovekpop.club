{"version":3,"sources":["admin/components/BansList/index.js"],"names":["enhance","avatarStyle","width","paddingRight","Header","style","background","padding","lineHeight","Filter","color","border","marginLeft","paddingLeft","height","type","_ref2","_ref3","_ref4","BansList","_ref","t","bans","_onUnbanUser","onUnbanUser","Fragment","float","selectable","displaySelectAll","adjustForCheckbox","stripedRows","map","ban","user","_id","propTypes","process","env","NODE_ENV","func","isRequired","array"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;AAEA,IAAIA,UAAU,8BAAd;AACA,IAAIC,cAAc;AAChBC,SAAO,EADS;AAEhBC,gBAAc;AAFE,CAAlB;;AAKA,IAAIC,SAAS,yBAAU;AACrBC,SAAO;AACLC,gBAAY,SADP;AAELC,aAAS,WAFJ;AAGLC,gBAAY;AAHP;AADc,CAAV,EAMV,KANU,CAAb;;AAQA,IAAIC,SAAS,yBAAU;AACrBJ,SAAO;AACLC,gBAAY,SADP;AAELI,WAAO,SAFF;AAGLC,YAAQ,CAHH;AAILC,gBAAY,EAJP;AAKLC,iBAAa,EALR;AAMLC,YAAQ;AANH,GADc;AASrBC,QAAM;AATe,CAAV,EAUV,OAVU,CAAb;;AAYA,IAAIC,QAAQ,mBAAK,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,gBAAzB,CAAZ;;AAEA,IAAIC,QAAQ,mBAAKR,MAAL,EAAa,EAAb,CAAZ;;AAEA,IAAIS,QAAQ,6CAAwB;AAClCb,SAAOJ;AAD2B,CAAxB,CAAZ;;AAIA,IAAIkB,WAAW,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,OAAOF,KAAKE,IADhB;AAAA,MAEIC,eAAeH,KAAKI,WAFxB;AAGA,SAAO,mBAAK,gBAAMC,QAAX,EAAqB,EAArB,EAAyB,KAAK,CAA9B,EAAiC,mBAAKrB,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyBY,KAAzB,EAAgC,mBAAK,MAAL,EAAa;AACnFX,WAAO,EAAEqB,OAAO,OAAT;AAD4E,GAAb,EAErE,KAAK,CAFgE,EAE7D,cAF6D,EAE7CT,KAF6C,CAAhC,CAAjC,EAE6B,iCAAY;AAC9CU,gBAAY;AADkC,GAAZ,EAEjC,KAAK,CAF4B,EAEzB,uCAAkB;AAC3BC,sBAAkB,KADS;AAE3BC,uBAAmB;AAFQ,GAAlB,EAGR,KAAK,CAHG,EAGA,oCAAe,EAAf,EAAmB,KAAK,CAAxB,EAA2BX,KAA3B,EAAkC,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCG,EAAE,iBAAF,CAApC,CAAlC,EAA6F,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,qBAAF,CAApC,CAA7F,EAA4J,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,mBAAF,CAApC,CAA5J,EAAyN,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,qBAAF,CAApC,CAAzN,EAAwR,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,oBAAF,CAApC,CAAxR,CAHA,CAFyB,EAK+T,qCAAgB;AACjXS,iBAAa;AADoW,GAAhB,EAEhW,KAAK,CAF2V,EAExVR,KAAKS,GAAL,CAAS,UAAUC,GAAV,EAAe;AACjC,WAAO,kCAAa;AAClBA,WAAKA,GADa;AAElBR,mBAAa,SAASA,WAAT,GAAuB;AAClC,eAAOD,aAAaS,IAAIC,IAAjB,CAAP;AACD;AAJiB,KAAb,EAKJD,IAAIC,IAAJ,CAASC,GALL,CAAP;AAMD,GAPU,CAFwV,CAL/T,CAF7B,CAAP;AAiBD,CArBD;;AAuBAf,SAASgB,SAAT,GAAqBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3DjB,KAAG,oBAAUkB,IAAV,CAAeC,UADyC;AAE3DlB,QAAM,oBAAUmB,KAAV,CAAgBD,UAFqC;AAG3DhB,eAAa,oBAAUe,IAAV,CAAeC;AAH+B,CAAxC,GAIjB,EAJJ;;kBAMexC,QAAQmB,QAAR,C;AACf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withProps from 'recompose/withProps';\nimport { translate } from 'react-i18next';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n} from '../../../components/Table';\nimport BanRow from './Row';\n\nconst enhance = translate();\nconst avatarStyle = {\n  width: 48,\n  paddingRight: 0,\n};\n\nconst Header = withProps({\n  style: {\n    background: '#9d2053',\n    padding: '12px 24px',\n    lineHeight: '35px',\n  },\n})('div');\n\nconst Filter = withProps({\n  style: {\n    background: '#631032',\n    color: '#ffffff',\n    border: 0,\n    marginLeft: 12,\n    paddingLeft: 12,\n    height: 35,\n  },\n  type: 'text',\n})('input');\n\nconst BansList = ({\n  t,\n  bans,\n  onUnbanUser,\n}) => (\n  <React.Fragment>\n    <Header>\n      <span>Managing Bans:</span>\n      <span style={{ float: 'right' }}>\n        Filter User:\n        <Filter />\n      </span>\n    </Header>\n    <Table selectable={false}>\n      <TableHeader displaySelectAll={false} adjustForCheckbox={false}>\n        <TableRow>\n          <TableHeaderColumn style={avatarStyle} />\n          <TableHeaderColumn>{t('admin.bans.user')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.bans.duration')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.bans.reason')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.bans.bannedBy')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.bans.actions')}</TableHeaderColumn>\n        </TableRow>\n      </TableHeader>\n      <TableBody stripedRows>\n        {bans.map(ban => (\n          <BanRow\n            key={ban.user._id}\n            ban={ban}\n            onUnbanUser={() => onUnbanUser(ban.user)}\n          />\n        ))}\n      </TableBody>\n    </Table>\n  </React.Fragment>\n);\n\nBansList.propTypes = {\n  t: PropTypes.func.isRequired,\n  bans: PropTypes.array.isRequired,\n  onUnbanUser: PropTypes.func.isRequired,\n};\n\nexport default enhance(BansList);\n"]}