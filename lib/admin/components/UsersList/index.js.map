{"version":3,"sources":["admin/components/UsersList/index.js"],"names":["avatarStyle","width","paddingRight","actionsStyle","paddingLeft","Header","style","background","padding","lineHeight","Filter","color","border","marginLeft","height","type","enhance","_ref2","_ref3","_ref4","_ref5","UsersList","_ref","t","users","Fragment","float","selectable","displaySelectAll","adjustForCheckbox","stripedRows","map","user","propTypes","process","env","NODE_ENV","func","isRequired","array"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAIA,cAAc;AAChBC,SAAO,EADS;AAEhBC,gBAAc;AAFE,CAAlB;AAIA,IAAIC,eAAe;AACjBF,SAAO,EADU;AAEjBG,eAAa,CAFI;AAGjBF,gBAAc;AAHG,CAAnB;;AAMA,IAAIG,SAAS,yBAAU;AACrBC,SAAO;AACLC,gBAAY,SADP;AAELC,aAAS,WAFJ;AAGLC,gBAAY;AAHP;AADc,CAAV,EAMV,KANU,CAAb;;AAQA,IAAIC,SAAS,yBAAU;AACrBJ,SAAO;AACLC,gBAAY,SADP;AAELI,WAAO,SAFF;AAGLC,YAAQ,CAHH;AAILC,gBAAY,EAJP;AAKLT,iBAAa,EALR;AAMLU,YAAQ;AANH,GADc;AASrBC,QAAM;AATe,CAAV,EAUV,OAVU,CAAb;;AAYA,IAAIC,UAAU,8BAAd;;AAEA,IAAIC,QAAQ,mBAAK,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyB,iBAAzB,CAAZ;;AAEA,IAAIC,QAAQ,mBAAKR,MAAL,EAAa,EAAb,CAAZ;;AAEA,IAAIS,QAAQ,6CAAwB;AAClCb,SAAON;AAD2B,CAAxB,CAAZ;;AAIA,IAAIoB,QAAQ,6CAAwB;AAClCd,SAAOH;AAD2B,CAAxB,CAAZ;;AAIA,IAAIkB,YAAY,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvC,MAAIC,IAAID,KAAKC,CAAb;AAAA,MACIC,QAAQF,KAAKE,KADjB;AAEA,SAAO,mBAAK,gBAAMC,QAAX,EAAqB,EAArB,EAAyB,KAAK,CAA9B,EAAiC,mBAAKpB,MAAL,EAAa,EAAb,EAAiB,KAAK,CAAtB,EAAyBY,KAAzB,EAAgC,mBAAK,MAAL,EAAa;AACnFX,WAAO,EAAEoB,OAAO,OAAT;AAD4E,GAAb,EAErE,KAAK,CAFgE,EAE7D,cAF6D,EAE7CR,KAF6C,CAAhC,CAAjC,EAE6B,iCAAY;AAC9CS,gBAAY;AADkC,GAAZ,EAEjC,KAAK,CAF4B,EAEzB,uCAAkB;AAC3BC,sBAAkB,KADS;AAE3BC,uBAAmB;AAFQ,GAAlB,EAGR,KAAK,CAHG,EAGA,oCAAe,EAAf,EAAmB,KAAK,CAAxB,EAA2BV,KAA3B,EAAkC,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCI,EAAE,kBAAF,CAApC,CAAlC,EAA8F,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,sBAAF,CAApC,CAA9F,EAA8J,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,mBAAF,CAApC,CAA9J,EAA2N,6CAAwB,EAAxB,EAA4B,KAAK,CAAjC,EAAoCA,EAAE,mBAAF,CAApC,CAA3N,EAAwRH,KAAxR,CAHA,CAFyB,EAKwQ,qCAAgB;AAC1TU,iBAAa;AAD6S,GAAhB,EAEzS,KAAK,CAFoS,EAEjSN,MAAMO,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACnC,WAAO,kCAAc;AACnBA,YAAMA;AADa,KAAd,CAAP;AAGD,GAJU,CAFiS,CALxQ,CAF7B,CAAP;AAcD,CAjBD;;AAmBAX,UAAUY,SAAV,GAAsBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC5Db,KAAG,oBAAUc,IAAV,CAAeC,UAD0C;AAE5Dd,SAAO,oBAAUe,KAAV,CAAgBD;AAFqC,CAAxC,GAGlB,EAHJ;;kBAKetB,QAAQK,SAAR,C;AACf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport withProps from 'recompose/withProps';\nimport {\n  Table,\n  TableBody,\n  TableHeader,\n  TableHeaderColumn,\n  TableRow,\n} from '../../../components/Table';\nimport UserRow from './Row';\n\nconst avatarStyle = {\n  width: 48,\n  paddingRight: 0,\n};\nconst actionsStyle = {\n  width: 48,\n  paddingLeft: 0,\n  paddingRight: 0,\n};\n\nconst Header = withProps({\n  style: {\n    background: '#9d2053',\n    padding: '12px 24px',\n    lineHeight: '35px',\n  },\n})('div');\n\nconst Filter = withProps({\n  style: {\n    background: '#631032',\n    color: '#ffffff',\n    border: 0,\n    marginLeft: 12,\n    paddingLeft: 12,\n    height: 35,\n  },\n  type: 'text',\n})('input');\n\nconst enhance = translate();\n\nconst UsersList = ({\n  t,\n  users,\n}) => (\n  <React.Fragment>\n    <Header>\n      <span>Managing Users:</span>\n      <span style={{ float: 'right' }}>\n        Filter User:\n        <Filter />\n      </span>\n    </Header>\n    <Table selectable={false}>\n      <TableHeader displaySelectAll={false} adjustForCheckbox={false}>\n        <TableRow>\n          <TableHeaderColumn style={avatarStyle} />\n          <TableHeaderColumn>{t('admin.users.user')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.users.joinedAt')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.users.email')}</TableHeaderColumn>\n          <TableHeaderColumn>{t('admin.users.roles')}</TableHeaderColumn>\n          <TableHeaderColumn style={actionsStyle} />\n        </TableRow>\n      </TableHeader>\n      <TableBody stripedRows>\n        {users.map(user => (\n          <UserRow user={user} />\n        ))}\n      </TableBody>\n    </Table>\n  </React.Fragment>\n);\n\nUsersList.propTypes = {\n  t: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nexport default enhance(UsersList);\n"]}