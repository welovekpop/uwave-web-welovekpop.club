{"version":3,"sources":["admin/containers/AdminApp.js"],"names":["mapStateToProps","currentView","currentViewSelector","mapDispatchToProps","onTransition","transition","hasAdminState","store","state","getState","admin","mountAdminReducer","mount","adminReducer","mountAdminReducerOnce","enhance","PropTypes","object","componentWillMount","props","AdminApp"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,kBAAkB,wCAAyB;AAC7CC,eAAaC;AADgC,CAAzB,CAAtB;AAGA,IAAIC,qBAAqB;AACvBC,gBAAcC;AADS,CAAzB;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAIC,QAAQD,MAAME,QAAN,EAAZ;AACA,SAAOD,SAAS,CAAC,CAACA,MAAME,KAAxB;AACD;;AAED,SAASC,iBAAT,CAA2BJ,KAA3B,EAAkC;AAChCA,QAAMK,KAAN,CAAY,OAAZ,EAAqBC,iBAArB;AACD;;AAED,SAASC,qBAAT,CAA+BP,KAA/B,EAAsC;AACpC,MAAI,CAACD,cAAcC,KAAd,CAAL,EAA2B;AACzBI,sBAAkBJ,KAAlB;AACD;AACF;;AAED,IAAIQ,UAAU,sBAAQ,yBAAW;AAC/BR,SAAOS,mBAAUC;AADc,CAAX,CAAR,EAEV,wBAAU;AACZC,sBAAoB,SAASA,kBAAT,GAA8B;AAChD,QAAI,KAAKC,KAAL,CAAWZ,KAAf,EAAsB;AACpBO,4BAAsB,KAAKK,KAAL,CAAWZ,KAAjC;AACD;AACF;AALW,CAAV,CAFU,EAQV,yBAAQP,eAAR,EAAyBG,kBAAzB,CARU,CAAd;;eASeY,QAAQK,iBAAR,C,EACf","file":"AdminApp.js","sourcesContent":["import PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport lifecycle from 'recompose/lifecycle';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport AdminApp from '../components/AdminApp';\nimport adminReducer from '../reducers';\nimport { transition } from '../actions/view';\nimport { currentViewSelector } from '../selectors/viewSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  currentView: currentViewSelector,\n});\n\nconst mapDispatchToProps = {\n  onTransition: transition,\n};\n\nfunction hasAdminState(store) {\n  const state = store.getState();\n\n  return state && !!state.admin;\n}\n\nfunction mountAdminReducer(store) {\n  store.mount('admin', adminReducer);\n}\n\nfunction mountAdminReducerOnce(store) {\n  if (!hasAdminState(store)) {\n    mountAdminReducer(store);\n  }\n}\n\nconst enhance = compose(\n  getContext({ store: PropTypes.object }),\n  lifecycle({\n    componentWillMount() {\n      if (this.props.store) {\n        mountAdminReducerOnce(this.props.store);\n      }\n    },\n  }),\n  connect(mapStateToProps, mapDispatchToProps),\n);\n\nexport default enhance(AdminApp);\n"]}