{"version":3,"sources":["demo.js"],"names":["uw","Uwave","apiUrl","socketUrl","emoji","source","youTubeSource","soundCloudSource","_ref","React","Fragment","href","target","setAboutPageComponent","window","build","then","renderToDOM","document","querySelector","innerHTML","textContent","catch","err","message","setTimeout"],"mappings":";;AAAA;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,IAAIC,cAAJ,CAAU;AACnBC,UAAQ,gCADW;AAEnBC,aAAW,0BAFQ;AAGnBC,SAAO;AAHY,CAAV,CAAX,C,CAMA;;AACAJ,GAAGK,MAAHL,CAAUM,uBAAVN;AACAA,GAAGK,MAAHL,CAAUO,0BAAVP;;AACA,IAAIQ;AACJ;AACE,mBAACC,eAAMC,QAAP,EAAA,EAAA,EAAA,KAAA,CAAA,EACE,mBAAA,IAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,aAAA,CADF,EAEE,mBAAA,GAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,wCAAA,EAAyC,mBAAA,GAAA,EAAA;AAAGC,QAAK,cAAR;AAAuBC,UAAO;AAA9B,CAAA,EAAA,KAAA,CAAA,EAAA,kBAAA,CAAzC,CAFF,CAFF;;AACAZ,GAAGa,qBAAHb,CAAyB,YAAA;AAAA,SAAAQ,IAAA;AAAzB,CAAAR;AAOAc,OAAOd,EAAPc,GAAYd,EAAZc;AAEAd,GAAGe,KAAHf,GAAWgB,IAAXhB,CAAgB,YAAM;AACpBA,KAAGiB,WAAHjB,CAAekB,SAASC,aAATD,CAAuB,MAAvBA,CAAflB;AACAkB,WAASC,aAATD,CAAuB,cAAvBA,EAAuCE,SAAvCF,GAAmD,EAAnDA;AACAA,WAASC,aAATD,CAAuB,MAAvBA,EAA+BG,WAA/BH,GAA6C,EAA7CA;AAHF,CAAAlB,EAIGsB,KAJHtB,CAIS,UAACuB,GAAD,EAAS;AAChBL,WAASC,aAATD,CAAuB,uBAAvBA,EAAgDG,WAAhDH,GAAA,YAAwEK,IAAIC,OAA5EN;AAEAO,aAAW,YAAM;AACf,UAAMF,GAAN;AADF,GAAAE,EAEG,CAFHA;AAPF,CAAAzB","file":"demo.js","sourcesContent":["import React from 'react';\nimport Uwave from './Uwave';\nimport youTubeSource from './sources/youtube';\nimport soundCloudSource from './sources/soundcloud';\n\nconst uw = new Uwave({\n  apiUrl: 'https://u-wave-demo.now.sh/api',\n  socketUrl: 'wss://u-wave-demo.now.sh',\n  emoji: {},\n});\n\n// Configure the Media sources to be used by this Ã¼Wave client instance.\nuw.source(youTubeSource());\nuw.source(soundCloudSource());\n\nuw.setAboutPageComponent(() => (\n  <React.Fragment>\n    <h2>Size report</h2>\n    <p>Generated by webpack-bundle-analyzer. <a href=\"/report.html\" target=\"_blank\">View size report</a></p>\n  </React.Fragment>\n));\n\nwindow.uw = uw;\n\nuw.build().then(() => {\n  uw.renderToDOM(document.querySelector('#app'));\n  document.querySelector('#app-loading').innerHTML = '';\n  document.querySelector('#jss').textContent = '';\n}).catch((err) => {\n  document.querySelector('.LoadingScreen-notice').textContent = `Error: ${err.message}`;\n\n  setTimeout(() => {\n    throw err;\n  }, 0);\n});\n"]}