{"version":3,"sources":["middleware/index.js"],"names":["uwaveWebClient","uw","options","basePath","join","__dirname","fs","title","clientOptions","clientRouter","mobile","req","res","transform","JSON","stringify","createReadStream","pipe","get","setHeader","apiUrl","params","key","json","use"],"mappings":";;;;;kBAOwBA,c;;AAPxB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,SAASA,cAAT,CAAwBC,EAAxB,EAA4BC,UAAU,EAAtC,EAA0C;AACvD,QAAM;AACJC,eAAW,eAAKC,IAAL,CAAUC,SAAV,EAAqB,cAArB,CADP;AAEJC,qBAFI,EAEY;AAChBC,YAAQ,OAHJ;AAIJ,OAAGC;AAJC,MAKFN,OALJ;;AAOA,QAAMO,eAAe,uBAArB;;AAEA,QAAMC,SAAS,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC3B,UAAMC,YAAY,uBAAQ;AACxBN,WADwB;AAExB,wBAAkBO,KAAKC,SAAL,CAAeP,aAAf;AAFM,KAAR,CAAlB;;AAKAF,OAAGU,gBAAH,CAAoB,eAAKZ,IAAL,CAAUD,QAAV,EAAoB,QAApB,CAApB,EAAmD,MAAnD,EAA2Dc,IAA3D,CAAgEJ,SAAhE,EAA2EI,IAA3E,CAAgFL,GAAhF;AACD,GAPD;;AASA,SAAOH,aAAaS,GAAb,CAAiB,GAAjB,EAAsB,CAACP,GAAD,EAAMC,GAAN,KAAc;AACzCA,QAAIO,SAAJ,CAAc,cAAd,EAA8B,WAA9B;;AAEA,UAAMN,YAAY,uBAAQ;AACxBN,WADwB;AAExB,wBAAkBO,KAAKC,SAAL,CAAeP,aAAf;AAFM,KAAR,CAAlB;;AAKAF,OAAGU,gBAAH,CAAoB,eAAKZ,IAAL,CAAUD,QAAV,EAAoB,YAApB,CAApB,EAAuD,MAAvD,EAA+Dc,IAA/D,CAAoEJ,SAApE,EAA+EI,IAA/E,CAAoF,6BAAKN,GAAL,EAAUC,GAAV,CAApF,EAAoGK,IAApG,CAAyGL,GAAzG;AACD,GATM,EASJM,GATI,CASA,aATA,EASe,CAACP,GAAD,EAAMC,GAAN,KAAc;AAClCA,QAAIO,SAAJ,CAAc,cAAd,EAA8B,WAA9B;;AAEA,UAAMN,YAAY,uBAAQ;AACxBN,WADwB;AAExB,wBAAkBO,KAAKC,SAAL,CAAe,EAAEK,QAAQZ,cAAcY,MAAxB,EAAf,CAFM;AAGxB,qBAAeT,IAAIU,MAAJ,CAAWC;AAHF,KAAR,CAAlB;;AAMAhB,OAAGU,gBAAH,CAAoB,eAAKZ,IAAL,CAAUD,QAAV,EAAoB,qBAApB,CAApB,EAAgE,MAAhE,EAAwEc,IAAxE,CAA6EJ,SAA7E,EAAwFI,IAAxF,CAA6F,6BAAKN,GAAL,EAAUC,GAAV,CAA7F,EAA6GK,IAA7G,CAAkHL,GAAlH;AACD,GAnBM,EAmBJM,GAnBI,CAmBA,yBAnBA,EAmB2B,CAACP,GAAD,EAAMC,GAAN,KAAc;AAC9CA,QAAIW,IAAJ,CAASf,aAAT;AACD,GArBM,EAqBJU,GArBI,CAqBA,IArBA,EAqBMR,MArBN,EAqBcQ,GArBd,CAqBkB,SArBlB,EAqB6BR,MArB7B,EAqBqCc,GArBrC,CAqByC,iCAAYrB,QAAZ,CArBzC,CAAP;AAsBD;AACD","file":"index.js","sourcesContent":["import path from 'path';\nimport defaultFs from 'fs';\nimport hstream from 'hstream';\nimport router from 'router';\nimport serveStatic from 'connect-gzip-static';\nimport gzip from 'http-gzip-maybe';\n\nexport default function uwaveWebClient(uw, options = {}) {\n  const {\n    basePath = path.join(__dirname, '../../public'),\n    fs = defaultFs, // Should only be used by the dev server.\n    title = 'Ã¼Wave',\n    ...clientOptions\n  } = options;\n\n  const clientRouter = router();\n\n  const mobile = (req, res) => {\n    const transform = hstream({\n      title,\n      '#u-wave-config': JSON.stringify(clientOptions),\n    });\n\n    fs.createReadStream(path.join(basePath, 'm.html'), 'utf8')\n      .pipe(transform)\n      .pipe(res);\n  };\n\n  return clientRouter\n    .get('/', (req, res) => {\n      res.setHeader('content-type', 'text/html');\n\n      const transform = hstream({\n        title,\n        '#u-wave-config': JSON.stringify(clientOptions),\n      });\n\n      fs.createReadStream(path.join(basePath, 'index.html'), 'utf8')\n        .pipe(transform)\n        .pipe(gzip(req, res))\n        .pipe(res);\n    })\n    .get('/reset/:key', (req, res) => {\n      res.setHeader('content-type', 'text/html');\n\n      const transform = hstream({\n        title,\n        '#u-wave-config': JSON.stringify({ apiUrl: clientOptions.apiUrl }),\n        '#reset-data': req.params.key,\n      });\n\n      fs.createReadStream(path.join(basePath, 'password-reset.html'), 'utf8')\n        .pipe(transform)\n        .pipe(gzip(req, res))\n        .pipe(res);\n    })\n    .get('/u-wave-web-config.json', (req, res) => {\n      res.json(clientOptions);\n    })\n    .get('/m', mobile)\n    .get('/m.html', mobile)\n    .use(serveStatic(basePath));\n}\n"]}