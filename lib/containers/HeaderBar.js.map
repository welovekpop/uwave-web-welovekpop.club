{"version":3,"sources":["containers/HeaderBar.js"],"names":["mapStateToProps","mediaProgress","mediaProgressSelector","mediaTimeRemaining","timeRemainingSelector","media","mediaSelector","dj","djSelector","volume","volumeSelector","muted","isMutedSelector","mapDispatchToProps","dispatch","onVolumeChange","setVolume","onVolumeMute","mute","onVolumeUnmute","unmute","onToggleRoomHistory","toggleRoomHistory","onToggleAboutOverlay","toggleAbout","uwave","PropTypes","object","props","HeaderBar"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,kBAAkB,wCAAyB;AAC7CC,iBAAeC,qCAD8B;AAE7CC,sBAAoBC,qCAFyB;AAG7CC,SAAOC,6BAHsC;AAI7CC,MAAIC,0BAJyC;AAK7CC,UAAQC,gCALqC;AAM7CC,SAAOC;AANsC,CAAzB,CAAtB;;AASA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC,oBAAgBC,iCADQ;AAExBC,kBAAcC,4BAFU;AAGxBC,oBAAgBC,8BAHQ;AAIxBC,yBAAqBC,wCAJG;AAKxBC,0BAAsBC;AALE,GAAnB,EAMJV,QANI,CAAP;AAOD,CARD;;eAUe,sBAAQ,yBAAW;AAChCW,SAAOC,mBAAUC;AADe,CAAX,CAAR,EAEX,yBAAQ3B,eAAR,EAAyBa,kBAAzB,CAFW,EAEmC;AAClD,uBAAS,UAAUe,KAAV,EAAiB;AACxB,SAAO,qBAAOA,KAAP,EAAc,OAAd,CAAP;AACD,CAFD,CAHe,EAKXC,kBALW,C","file":"HeaderBar.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport getContext from 'recompose/getContext';\nimport mapProps from 'recompose/mapProps';\nimport except from 'except';\nimport { createStructuredSelector } from 'reselect';\nimport { setVolume, mute, unmute } from '../actions/PlaybackActionCreators';\nimport { toggleRoomHistory, toggleAbout } from '../actions/OverlayActionCreators';\n\nimport {\n  djSelector,\n  mediaSelector,\n  mediaProgressSelector,\n  timeRemainingSelector,\n} from '../selectors/boothSelectors';\nimport { volumeSelector, isMutedSelector } from '../selectors/settingSelectors';\nimport HeaderBar from '../components/HeaderBar';\n\nconst mapStateToProps = createStructuredSelector({\n  mediaProgress: mediaProgressSelector,\n  mediaTimeRemaining: timeRemainingSelector,\n  media: mediaSelector,\n  dj: djSelector,\n  volume: volumeSelector,\n  muted: isMutedSelector,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onVolumeChange: setVolume,\n  onVolumeMute: mute,\n  onVolumeUnmute: unmute,\n  onToggleRoomHistory: toggleRoomHistory,\n  onToggleAboutOverlay: toggleAbout,\n}, dispatch);\n\nexport default compose(\n  getContext({ uwave: PropTypes.object }),\n  connect(mapStateToProps, mapDispatchToProps),\n  // Remove the \"uwave\" propâ€”it was only necessary for the selector.\n  mapProps(props => except(props, 'uwave')),\n)(HeaderBar);\n"]}