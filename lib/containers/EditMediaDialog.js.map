{"version":3,"sources":["containers/EditMediaDialog.js"],"names":["mapDispatchToProps","dispatch","onUpdateMedia","onCloseDialog","DIALOG_ANIMATION_DURATION","enhance","EditMediaDialogContainer","_ref","playlistID","media","props","transitionName","transitionEnterTimeout","transitionLeaveTimeout","createElement","onEditedMedia","update","_id","propTypes","process","env","NODE_ENV","string","object","func","isRequired"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AAEA;;AACA;;;;;;AAEA,IAAIA,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC,sDADwB;AAExBC;AAFwB,GAAnB,EAGJF,QAHI,CAAP;AAID,CALD;;AAOA,IAAIG,4BAA4B,GAAhC,C,CAAqC;;AAErC,IAAIC,UAAU,mEAAiCL,kBAAjC,CAAd;;AAEA,IAAIM,2BAA2B,SAASA,wBAAT,CAAkCC,IAAlC,EAAwC;AACrE,MAAIL,gBAAgBK,KAAKL,aAAzB;AAAA,MACIM,aAAaD,KAAKC,UADtB;AAAA,MAEIC,QAAQF,KAAKE,KAFjB;AAAA,MAGIC,QAAQ,uCAAyBH,IAAzB,EAA+B,CAAC,eAAD,EAAkB,YAAlB,EAAgC,OAAhC,CAA/B,CAHZ;;AAKA,SAAO,iDAAsB;AAC3BI,oBAAgB,QADW;AAE3BC,4BAAwBR,yBAFG;AAG3BS,4BAAwBT;AAHG,GAAtB,EAIJ,KAAK,CAJD,EAIIK,SAAS,gBAAMK,aAAN,4BAAqC,uBAAS,EAAT,EAAaJ,KAAb,EAAoB;AAC3ED,WAAOA,KADoE;AAE3EM,mBAAe,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC5C,aAAOd,cAAcM,UAAd,EAA0BC,MAAMQ,GAAhC,EAAqCD,MAArC,CAAP;AACD;AAJ0E,GAApB,CAArC,CAJb,CAAP;AAUD,CAhBD;;AAkBAV,yBAAyBY,SAAzB,GAAqCC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC3Eb,cAAY,oBAAUc,MADqD;AAE3Eb,SAAO,oBAAUc,MAF0D;AAG3ErB,iBAAe,oBAAUsB,IAAV,CAAeC;AAH6C,CAAxC,GAIjC,EAJJ;;kBAMepB,QAAQC,wBAAR,C;AACf","file":"EditMediaDialog.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport TransitionGroup from 'react-transition-group/CSSTransitionGroup';\nimport { updateMedia } from '../actions/PlaylistActionCreators';\nimport { closeEditMediaDialog } from '../actions/DialogActionCreators';\n\nimport { editMediaDialogSelector } from '../selectors/dialogSelectors';\nimport EditMediaDialog from '../components/Dialogs/EditMediaDialog';\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onUpdateMedia: updateMedia,\n  onCloseDialog: closeEditMediaDialog\n}, dispatch);\n\nconst DIALOG_ANIMATION_DURATION = 450; // ms\n\nconst enhance = connect(editMediaDialogSelector, mapDispatchToProps);\n\nconst EditMediaDialogContainer = ({\n  onUpdateMedia,\n  playlistID,\n  media,\n  ...props\n}) => (\n  <TransitionGroup\n    transitionName=\"Dialog\"\n    transitionEnterTimeout={DIALOG_ANIMATION_DURATION}\n    transitionLeaveTimeout={DIALOG_ANIMATION_DURATION}\n  >\n    {media && (\n      <EditMediaDialog\n        {...props}\n        media={media}\n        onEditedMedia={update => onUpdateMedia(playlistID, media._id, update)}\n      />\n    )}\n  </TransitionGroup>\n);\n\nEditMediaDialogContainer.propTypes = {\n  playlistID: PropTypes.string,\n  media: PropTypes.object,\n  onUpdateMedia: PropTypes.func.isRequired\n};\n\nexport default enhance(EditMediaDialogContainer);\n"]}