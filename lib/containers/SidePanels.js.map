{"version":3,"sources":["containers/SidePanels.js"],"names":["mapStateToProps","selected","state","selectedPanel","waitlistPosition","waitlistPositionSelector","waitlistSize","waitlistSizeSelector","listenerCount","listenerCountSelector","mapDispatchToProps","dispatch","onChange","panelName","SidePanels"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,IAAIA,kBAAkB,wCAAyB;AAC7CC,YAAU,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACjC,WAAOA,MAAMC,aAAb;AACD,GAH4C;AAI7CC,oBAAkBC,mCAJ2B;AAK7CC,gBAAcC,+BAL+B;AAM7CC,iBAAeC;AAN8B,CAAzB,CAAtB;;AASA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLC,cAAU,SAASA,QAAT,CAAkBC,SAAlB,EAA6B;AACrC;AACA;AACA;AACA,UAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjCF,iBAAS,4CAAYE,SAAZ,CAAT;AACD;AACF;AARI,GAAP;AAUD;;eAEc,yBAAQb,eAAR,EAAyBU,kBAAzB,EAA6CI,mBAA7C,C,EACf","file":"SidePanels.js","sourcesContent":["import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectPanel } from '../actions/PanelSelectActionCreators';\nimport { listenerCountSelector } from '../selectors/userSelectors';\nimport {\n  sizeSelector as waitlistSizeSelector,\n  positionSelector as waitlistPositionSelector,\n} from '../selectors/waitlistSelectors';\n\nimport SidePanels from '../components/SidePanels';\n\nconst mapStateToProps = createStructuredSelector({\n  selected: state => state.selectedPanel,\n  waitlistPosition: waitlistPositionSelector,\n  waitlistSize: waitlistSizeSelector,\n  listenerCount: listenerCountSelector,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChange: (panelName) => {\n      // Ensure that we're actually switching panels--otherwise change events\n      // from eg. the chat box bubble up and trigger a panel rerender on every\n      // keypress.\n      if (typeof panelName === 'string') {\n        dispatch(selectPanel(panelName));\n      }\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidePanels);\n"]}