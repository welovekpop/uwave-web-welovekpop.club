{"version":3,"sources":["containers/ChatInput.js"],"names":["mapStateToProps","isLoggedIn","mentionableUsers","mentionableGroups","availableEmoji","mapDispatchToProps","dispatch","onSend","enhance","_ref","bus","onScroll","direction","emit","_ref3","ChatInputContainer","_ref2","props","createElement","propTypes","process","env","NODE_ENV","bool","isRequired"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,IAAIA,kBAAkB,wCAAyB;AAC7CC,+CAD6C;AAE7CC,mDAF6C;AAG7CC,kEAH6C;AAI7CC;AAJ6C,CAAzB,CAAtB;;AAOA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC;AADwB,GAAnB,EAEJD,QAFI,CAAP;AAGD,CAJD;;AAMA,IAAIE,UAAU,uBAAQ,yBAAQR,eAAR,EAAyBK,kBAAzB,CAAR,EAAsD,wBAAtD,EAAiE,yBAAU,UAAUI,IAAV,EAAgB;AACvG,MAAIC,MAAMD,KAAKC,GAAf;AACA,SAAO;AACLC,cAAU,SAASA,QAAT,CAAkBC,SAAlB,EAA6B;AACrC,aAAOF,IAAIG,IAAJ,CAAS,aAAT,EAAwBD,SAAxB,CAAP;AACD;AAHI,GAAP;AAKD,CAP8E,CAAjE,CAAd;;AASA,IAAIE,QAAQ,mBAAK,MAAL,EAAa,EAAb,CAAZ;;AAEA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,KAA5B,EAAmC;AAC1D,MAAIf,aAAae,MAAMf,UAAvB;AAAA,MACIgB,QAAQ,uCAAyBD,KAAzB,EAAgC,CAAC,YAAD,CAAhC,CADZ;;AAGA,SAAOf,aAAa,gBAAMiB,aAAN,kBAA+BD,KAA/B,CAAb,GAAqDH,KAA5D;AACD,CALD;;AAOAC,mBAAmBI,SAAnB,GAA+BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACrErB,cAAY,oBAAUsB,IAAV,CAAeC;AAD0C,CAAxC,GAE3B,EAFJ;;kBAIehB,QAAQO,kBAAR,C;AACf","file":"ChatInput.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport compose from 'recompose/compose';\nimport withProps from 'recompose/withProps';\nimport { connect } from 'react-redux';\nimport { withBus } from 'react-bus';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  inputMessage\n} from '../actions/ChatActionCreators';\nimport {\n  availableGroupMentionsSelector,\n  emojiCompletionsSelector\n} from '../selectors/chatSelectors';\nimport {\n  userListSelector,\n  isLoggedInSelector\n} from '../selectors/userSelectors';\n\nimport ChatInput from '../components/Chat/Input';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoggedIn: isLoggedInSelector,\n  mentionableUsers: userListSelector,\n  mentionableGroups: availableGroupMentionsSelector,\n  availableEmoji: emojiCompletionsSelector\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onSend: inputMessage\n}, dispatch);\n\nconst enhance = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withBus(),\n  withProps(({ bus }) => ({\n    onScroll: direction => bus.emit('chat:scroll', direction)\n  }))\n);\n\nconst ChatInputContainer = ({ isLoggedIn, ...props }) => (\n  isLoggedIn\n    ? <ChatInput {...props} />\n    : <span />\n);\n\nChatInputContainer.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired\n};\n\nexport default enhance(ChatInputContainer);\n"]}