{"version":3,"sources":["containers/Video.js"],"names":["mapStateToProps","historyID","media","seek","volume","isFullscreen","state","booth","mapDispatchToProps","dispatch","onFullscreenEnter","onFullscreenExit"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;AACA;;AAEA;;;;;;AAEA,IAAIA,kBAAkB,wCAAyB;AAC7CC,8CAD6C;AAE7CC,sCAF6C;AAG7CC,2CAH6C;AAI7CC,gDAJ6C;AAK7CC,gBAAc,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzC,WAAOA,MAAMC,KAAN,CAAYF,YAAnB;AACD;AAP4C,CAAzB,CAAtB;;AAUA,IAAIG,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC,8DADwB;AAExBC;AAFwB,GAAnB,EAGJF,QAHI,CAAP;AAID,CALD;;kBAOe,uBAAQ,sBAAR,EAAiB,yBAAQT,eAAR,EAAyBQ,kBAAzB,CAAjB,kB;AACf","file":"Video.js","sourcesContent":["import compose from 'recompose/compose';\nimport { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport timed from '../utils/timed';\n\nimport {\n  enterFullscreen as onFullscreenEnter,\n  exitFullscreen as onFullscreenExit,\n} from '../actions/PlaybackActionCreators';\nimport {\n  historyIDSelector,\n  mediaSelector,\n  playbackVolumeSelector,\n  timeElapsedSelector,\n} from '../selectors/boothSelectors';\n\nimport Video from '../components/Video';\n\nconst mapStateToProps = createStructuredSelector({\n  historyID: historyIDSelector,\n  media: mediaSelector,\n  seek: timeElapsedSelector,\n  volume: playbackVolumeSelector,\n  isFullscreen: state => state.booth.isFullscreen,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onFullscreenEnter,\n  onFullscreenExit,\n}, dispatch);\n\nexport default compose(\n  timed(),\n  connect(mapStateToProps, mapDispatchToProps),\n)(Video);\n"]}