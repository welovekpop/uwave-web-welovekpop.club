{"version":3,"sources":["containers/AddToPlaylistMenu.js"],"names":["mapDispatchToProps","dispatch","onClose","onCreatePlaylist","onAddMedia","onFavoriteMedia","mapStateToProps","isFavorite","isOpen","position","playlists","media","historyID","_ref2","AddToPlaylistMenuContainer","_ref","onSelect","playlist","open","propTypes","process","env","NODE_ENV","bool","shape","x","number","isRequired","y","arrayOf","object","string","func"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEA,IAAIA,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC,sDADwB;AAExBC,4DAFwB;AAGxBC,gDAHwB;AAIxBC;AAJwB,GAAnB,EAKJJ,QALI,CAAP;AAMD,CAPD;;AASA,IAAIK,kBAAkB,wCAAyB;AAC7CC,4DAD6C;AAE7CC,oDAF6C;AAG7CC,wDAH6C;AAI7CC,iDAJ6C;AAK7CC,kDAL6C;AAM7CC;AAN6C,CAAzB,CAAtB;;AASA,IAAIC,QAAQ,mBAAK,MAAL,EAAa,EAAb,CAAZ;;AAEA,IAAIC,6BAA6B,SAASA,0BAAT,CAAoCC,IAApC,EAA0C;AACzE,MAAIP,SAASO,KAAKP,MAAlB;AAAA,MACIC,WAAWM,KAAKN,QADpB;AAAA,MAEIF,aAAaQ,KAAKR,UAFtB;AAAA,MAGIG,YAAYK,KAAKL,SAHrB;AAAA,MAIIC,QAAQI,KAAKJ,KAJjB;AAAA,MAKIC,YAAYG,KAAKH,SALrB;AAAA,MAMIT,mBAAmBY,KAAKZ,gBAN5B;AAAA,MAOIC,aAAaW,KAAKX,UAPtB;AAAA,MAQIC,kBAAkBU,KAAKV,eAR3B;AAAA,MASIH,UAAUa,KAAKb,OATnB;;AAWA,MAAI,CAACM,MAAL,EAAa;AACX,WAAOK,KAAP;AACD;;AAED,MAAIG,WAAW,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AACzC,WAAOV,aAAaF,gBAAgBY,QAAhB,EAA0BL,SAA1B,CAAb,GAAoDR,WAAWa,QAAX,EAAqBN,KAArB,CAA3D;AACD,GAFD;;AAIA,SAAO,gDAAwB;AAC7BO,UAAMV,MADuB;AAE7BC,cAAUA,QAFmB;AAG7BC,eAAWA,SAHkB;AAI7BR,aAASA,OAJoB;AAK7BC,sBAAkBA,gBALW;AAM7Ba,cAAUA;AANmB,GAAxB,CAAP;AAQD,CA5BD;;AA8BAF,2BAA2BK,SAA3B,GAAuCC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7Ef,cAAY,oBAAUgB,IADuD;AAE7Ef,UAAQ,oBAAUe,IAF2D;AAG7Ed,YAAU,oBAAUe,KAAV,CAAgB;AACxBC,OAAG,oBAAUC,MAAV,CAAiBC,UADI;AAExBC,OAAG,oBAAUF,MAAV,CAAiBC;AAFI,GAAhB,CAHmE;AAO7EjB,aAAW,oBAAUmB,OAAV,CAAkB,oBAAUC,MAA5B,CAPkE;;AAS7EnB,SAAO,oBAAUkB,OAAV,CAAkB,oBAAUC,MAA5B,CATsE;AAU7ElB,aAAW,oBAAUmB,MAVwD;;AAY7E7B,WAAS,oBAAU8B,IAAV,CAAeL,UAZqD;AAa7ExB,oBAAkB,oBAAU6B,IAAV,CAAeL,UAb4C;AAc7EvB,cAAY,oBAAU4B,IAAV,CAAeL,UAdkD;AAe7EtB,mBAAiB,oBAAU2B,IAAV,CAAeL;AAf6C,CAAxC,GAgBnC,EAhBJ;;kBAkBe,yBAAQrB,eAAR,EAAyBN,kBAAzB,EAA6Cc,0BAA7C,C;AACf","file":"AddToPlaylistMenu.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  createPlaylist,\n  addMedia,\n  closeAddMediaMenu\n} from '../actions/PlaylistActionCreators';\nimport { favoriteMedia } from '../actions/VoteActionCreators';\n\nimport {\n  isFavoriteSelector,\n  isOpenSelector,\n  positionSelector,\n  mediaSelector,\n  historyIDSelector\n} from '../selectors/addToPlaylistMenuSelectors';\nimport { playlistsSelector } from '../selectors/playlistSelectors';\nimport AddToPlaylistMenu from '../components/AddToPlaylistMenu';\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onClose: closeAddMediaMenu,\n  onCreatePlaylist: createPlaylist,\n  onAddMedia: addMedia,\n  onFavoriteMedia: favoriteMedia\n}, dispatch);\n\nconst mapStateToProps = createStructuredSelector({\n  isFavorite: isFavoriteSelector,\n  isOpen: isOpenSelector,\n  position: positionSelector,\n  playlists: playlistsSelector,\n  media: mediaSelector,\n  historyID: historyIDSelector\n});\n\nconst AddToPlaylistMenuContainer = ({\n  isOpen,\n  position,\n  isFavorite,\n  playlists,\n  media,\n  historyID,\n  onCreatePlaylist,\n  onAddMedia,\n  onFavoriteMedia,\n  onClose\n}) => {\n  if (!isOpen) {\n    return <span />;\n  }\n\n  const onSelect = playlist => (\n    isFavorite\n      ? onFavoriteMedia(playlist, historyID)\n      : onAddMedia(playlist, media)\n  );\n\n  return (\n    <AddToPlaylistMenu\n      open={isOpen}\n      position={position}\n      playlists={playlists}\n      onClose={onClose}\n      onCreatePlaylist={onCreatePlaylist}\n      onSelect={onSelect}\n    />\n  );\n};\n\nAddToPlaylistMenuContainer.propTypes = {\n  isFavorite: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  position: PropTypes.shape({\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired\n  }),\n  playlists: PropTypes.arrayOf(PropTypes.object),\n\n  media: PropTypes.arrayOf(PropTypes.object),\n  historyID: PropTypes.string,\n\n  onClose: PropTypes.func.isRequired,\n  onCreatePlaylist: PropTypes.func.isRequired,\n  onAddMedia: PropTypes.func.isRequired,\n  onFavoriteMedia: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToPlaylistMenuContainer);\n"]}