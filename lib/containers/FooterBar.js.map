{"version":3,"sources":["containers/FooterBar.js"],"names":["mapStateToProps","baseEta","mediaEndTime","playlist","nextMedia","shouldRandomizePlaylists","user","userInWaitlist","userIsDJ","currentDJ","showSkip","waitlistIsLocked","voteStats","mapDispatchToProps","dispatch","joinWaitlist","leaveWaitlist","openLoginDialog","openRegisterDialog","togglePlaylistManager","toggleSettings","onSkipTurn","onModSkip","onFavorite","onUpvote","onDownvote"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;AAEA,IAAIA,kBAAkB,wCAAyB;AAC7CC,6CAD6C;AAE7CC,+CAF6C;AAG7CC,qDAH6C;AAI7CC,iDAJ6C;AAK7CC,uEAL6C;AAM7CC,0CAN6C;AAO7CC,2DAP6C;AAQ7CC,+CAR6C;AAS7CC,uCAT6C;AAU7CC,2CAV6C;AAW7CC,uDAX6C;AAY7CC;AAZ6C,CAAzB,CAAtB;;AAeA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,+BAAmB;AACxBC,sDADwB;AAExBC,wDAFwB;AAGxBC,0DAHwB;AAIxBC,gEAJwB;AAKxBC,uEALwB;AAMxBC,yDANwB;AAOxBC,6CAPwB;AAQxBC,sDARwB;AASxBC,oDATwB;AAUxBC,0CAVwB;AAWxBC;AAXwB,GAAnB,EAYJX,QAZI,CAAP;AAaD;;kBAEc,yBAAQd,eAAR,EAAyBa,kBAAzB,sB;AACf","file":"FooterBar.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { skipSelf } from '../actions/BoothActionCreators';\nimport { openLoginDialog, openRegisterDialog } from '../actions/DialogActionCreators';\nimport {\n  skipCurrentDJ as modSkipCurrentDJ,\n} from '../actions/ModerationActionCreators';\nimport { togglePlaylistManager, toggleSettings } from '../actions/OverlayActionCreators';\nimport { joinWaitlist, leaveWaitlist } from '../actions/WaitlistActionCreators';\nimport { openFavoriteMenu, doUpvote, doDownvote } from '../actions/VoteActionCreators';\n\nimport {\n  djSelector,\n  isCurrentDJSelector,\n  canSkipSelector,\n  endTimeSelector,\n} from '../selectors/boothSelectors';\nimport {\n  activePlaylistSelector,\n  nextMediaSelector,\n} from '../selectors/playlistSelectors';\nimport {\n  currentUserSelector,\n} from '../selectors/userSelectors';\nimport {\n  baseEtaSelector,\n  userInWaitlistSelector,\n  isLockedSelector,\n} from '../selectors/waitlistSelectors';\nimport {\n  currentVoteStatsSelector,\n} from '../selectors/voteSelectors';\nimport {\n  shouldRandomizePlaylistsSelector\n} from '../_wlk/selectors';\n\nimport FooterBar from '../components/FooterBar';\n\nconst mapStateToProps = createStructuredSelector({\n  baseEta: baseEtaSelector,\n  mediaEndTime: endTimeSelector,\n  playlist: activePlaylistSelector,\n  nextMedia: nextMediaSelector,\n  shouldRandomizePlaylists: shouldRandomizePlaylistsSelector,\n  user: currentUserSelector,\n  userInWaitlist: userInWaitlistSelector,\n  userIsDJ: isCurrentDJSelector,\n  currentDJ: djSelector,\n  showSkip: canSkipSelector,\n  waitlistIsLocked: isLockedSelector,\n  voteStats: currentVoteStatsSelector,\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    joinWaitlist,\n    leaveWaitlist,\n    openLoginDialog,\n    openRegisterDialog,\n    togglePlaylistManager,\n    toggleSettings,\n    onSkipTurn: skipSelf,\n    onModSkip: modSkipCurrentDJ,\n    onFavorite: openFavoriteMenu,\n    onUpvote: doUpvote,\n    onDownvote: doDownvote,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FooterBar);\n"]}