{"version":3,"sources":["selectors/chatSelectors.js"],"names":["baseSelector","state","chat","rawMotdSelector","motd","motdSelector","MAX_MESSAGES","allMessagesSelector","messages","filteredMessagesSelector","notificationSettings","filter","message","type","userJoin","userLeave","userNameChanged","skip","messagesSelector","slice","markupCompilerOptionsSelector","availableEmoji","emojiImages","mutesSelector","mutedUsers","muteTimeoutsSelector","mutes","mute","expirationTimer","mutedUserIDsSelector","Object","keys","mutedUsersSelector","mutedIDs","users","map","userID","currentUserMuteSelector","user","_id","availableGroupMentionsSelector","hasRole","mention","emojiCompletionsSelector","images","name","shortcode","image","canDeleteMessagesSelector"],"mappings":"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","file":"chatSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport objMap from 'object.map';\nimport parseChatMarkup from 'u-wave-parse-chat-markup';\n\nimport { getAvailableGroupMentions } from '../utils/chatMentions';\nimport {\n  availableEmojiNamesSelector,\n  availableEmojiImagesSelector,\n} from './configSelectors';\nimport {\n  usersSelector,\n  currentUserSelector,\n  currentUserHasRoleSelector,\n  createRoleCheckSelector,\n} from './userSelectors';\nimport { notificationSettingsSelector } from './settingSelectors';\n\nconst baseSelector = state => state.chat;\n\nexport const rawMotdSelector = createSelector(baseSelector, chat => chat.motd);\nexport const motdSelector = createSelector(rawMotdSelector, parseChatMarkup);\n\nconst MAX_MESSAGES = 500;\nconst allMessagesSelector = createSelector(baseSelector, chat => chat.messages);\nconst filteredMessagesSelector = createSelector(\n  allMessagesSelector,\n  notificationSettingsSelector,\n  (messages, notificationSettings) => messages.filter((message) => {\n    if (message.type === 'userJoin') return notificationSettings.userJoin;\n    if (message.type === 'userLeave') return notificationSettings.userLeave;\n    if (message.type === 'userNameChanged') return notificationSettings.userNameChanged;\n    if (message.type === 'skip') return notificationSettings.skip;\n    return true;\n  }),\n);\nexport const messagesSelector = createSelector(\n  filteredMessagesSelector,\n  messages => messages.slice(-MAX_MESSAGES),\n);\n\nexport const markupCompilerOptionsSelector = createStructuredSelector({\n  availableEmoji: availableEmojiNamesSelector,\n  emojiImages: availableEmojiImagesSelector,\n});\n\nconst mutesSelector = createSelector(baseSelector, chat => chat.mutedUsers);\n\nexport const muteTimeoutsSelector = createSelector(\n  mutesSelector,\n  mutes => objMap(mutes, mute => mute.expirationTimer),\n);\n\nexport const mutedUserIDsSelector = createSelector(\n  mutesSelector,\n  mutes => Object.keys(mutes),\n);\n\nexport const mutedUsersSelector = createSelector(\n  mutedUserIDsSelector,\n  usersSelector,\n  (mutedIDs, users) => mutedIDs.map(userID => users[userID]),\n);\n\nexport const currentUserMuteSelector = createSelector(\n  currentUserSelector,\n  mutesSelector,\n  (user, mutes) => (user ? mutes[user._id] : null),\n);\n\nexport const availableGroupMentionsSelector = createSelector(\n  currentUserHasRoleSelector,\n  hasRole => getAvailableGroupMentions(mention => hasRole(`chat.mention.${mention}`)),\n);\n\nexport const emojiCompletionsSelector = createSelector(\n  availableEmojiImagesSelector,\n  images => Object.keys(images).map(name => ({\n    shortcode: name,\n    image: images[name],\n  })),\n);\n\nexport const canDeleteMessagesSelector = createRoleCheckSelector('chat.delete');\n"]}