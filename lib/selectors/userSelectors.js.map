{"version":3,"sources":["selectors/userSelectors.js"],"names":["supportsAuthStrategy","authSelector","state","auth","usersBaseSelector","users","usersSelector","base","authErrorSelector","error","currentUserIDSelector","user","currentUserSelector","userID","isLoggedInSelector","Boolean","tokenSelector","token","authStrategiesSelector","strategies","name","indexOf","supportsSocialAuthSelector","_len","arguments","length","support","Array","_key","some","superUserRoleSelector","getAllUserRoles","roles","getSubRoles","subRoles","role","reduce","concat","compareUsers","superuser","a","b","aRoles","bRoles","username","toLowerCase","userListSelector","superuserRole","sort","userCountSelector","guestCountSelector","guests","listenerCountSelector","userHasRoleSelector","superUserRole","userRoles","hasRoleSelector","userHasRole","currentUserHasRoleSelector","createRoleCheckSelector","hasRole","isModeratorSelector","isManagerSelector"],"mappings":"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","file":"userSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport naturalCmp from 'natural-compare';\nimport values from 'object-values';\nimport { rolesSelector } from './configSelectors';\n\nconst authSelector = state => state.auth;\n\nconst usersBaseSelector = state => state.users;\nexport const usersSelector = createSelector(usersBaseSelector, base => base.users);\n\nexport const authErrorSelector = createSelector(authSelector, auth => auth.error);\nconst currentUserIDSelector = createSelector(authSelector, auth => auth.user);\nexport const currentUserSelector = createSelector(\n  usersSelector,\n  currentUserIDSelector,\n  (users, userID) => (\n    userID in users\n      ? users[userID]\n      : null\n  ),\n);\nexport const isLoggedInSelector = createSelector(currentUserSelector, Boolean);\nexport const tokenSelector = createSelector(authSelector, auth => auth.token);\nexport const authStrategiesSelector = createSelector(authSelector, auth => auth.strategies);\nexport function supportsAuthStrategy(name) {\n  return createSelector(authStrategiesSelector, strategies => strategies.indexOf(name) !== -1);\n}\nexport const supportsSocialAuthSelector = createSelector(\n  supportsAuthStrategy('google'),\n  (...support) => support.some(Boolean),\n);\n\n// The Super User role allows a user to do everything. It's hardcoded as the \"*\"\n// role.\nconst superUserRoleSelector = () => '*';\n\n// Flatten a user's roles.\nfunction getAllUserRoles(roles, user) {\n  function getSubRoles(subRoles, role) {\n    // Recursive Reduce!\n    return roles[role].reduce(\n      getSubRoles,\n      [role, ...subRoles],\n    );\n  }\n  return user.roles ? user.roles.reduce(getSubRoles, []) : [];\n}\n\nfunction compareUsers(roles, superuser) {\n  return (a, b) => {\n    const aRoles = getAllUserRoles(roles, a);\n    const bRoles = getAllUserRoles(roles, b);\n    // Sort superusers to the top,\n    if (aRoles.indexOf(superuser) !== -1) {\n      return -1;\n    }\n    if (bRoles.indexOf(superuser) !== -1) {\n      return 1;\n    }\n    // other users by the amount of permissions they have,\n    if (aRoles.length > bRoles.length) {\n      return -1;\n    }\n    if (aRoles.length < bRoles.length) {\n      return 1;\n    }\n    // and sort by username if the roles are equal.\n    return naturalCmp(a.username.toLowerCase(), b.username.toLowerCase());\n  };\n}\n\nexport const userListSelector = createSelector(\n  rolesSelector,\n  superUserRoleSelector,\n  usersSelector,\n  (roles, superuserRole, users) =>\n    values(users).sort(compareUsers(roles, superuserRole)),\n);\n\nexport const userCountSelector = createSelector(\n  userListSelector,\n  users => users.length,\n);\n\nexport const guestCountSelector = createSelector(\n  usersBaseSelector,\n  base => base.guests,\n);\n\nexport const listenerCountSelector = createSelector(\n  userCountSelector,\n  guestCountSelector,\n  (users, guests) => users + guests,\n);\n\nexport const userHasRoleSelector = createSelector(\n  rolesSelector,\n  superUserRoleSelector,\n  (roles, superUserRole) => (user) => {\n    // If there is no authenticated user, we always return false.\n    if (!user) {\n      return () => false;\n    }\n\n    const userRoles = getAllUserRoles(roles, user);\n    // If this is a super user, we always return true.\n    if (userRoles.indexOf(superUserRole) !== -1) {\n      return () => true;\n    }\n\n    return role => userRoles.indexOf(role) !== -1;\n  },\n);\n\n// Selects a function that checks if a user has the given role.\n//\n//   const hasRole = hasRoleSelector(getState());\n//   hasRole(user, 'waitlist.join');\n//\nexport const hasRoleSelector = createSelector(\n  userHasRoleSelector,\n  userHasRole =>\n    (user, role) => userHasRole(user)(role),\n);\n\nexport const currentUserHasRoleSelector = createSelector(\n  userHasRoleSelector,\n  currentUserSelector,\n  (userHasRole, user) => userHasRole(user),\n);\n\n// Creates a selector that will check if the current user has a given role.\n//\n//   createRoleCheckSelector('some.role')(store.getState()) // â†’ true/false\n//\nexport const createRoleCheckSelector = role => createSelector(\n  currentUserHasRoleSelector,\n  hasRole => hasRole(role),\n);\n\n// Selectors for compatibility with the old role system.\n// TODO All uses of these selectors should be phased out in favour of more\n// specific roles in the future.\nexport const isModeratorSelector = createRoleCheckSelector('moderator');\nexport const isManagerSelector = createRoleCheckSelector('manager');\n"]}