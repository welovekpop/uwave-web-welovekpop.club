{"version":3,"sources":["selectors/userSelectors.js"],"names":["authSelector","state","auth","usersBaseSelector","users","usersSelector","base","authErrorSelector","error","currentUserSelector","user","isLoggedInSelector","Boolean","tokenSelector","jwt","currentRoleSelector","role","isModeratorSelector","isManagerSelector","compareUsers","a","b","username","toLowerCase","userListSelector","sort","userCountSelector","length","guestCountSelector","guests","listenerCountSelector"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAIA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,MAAMC,IAAb;AACD,CAFD;;AAIA,IAAIC,oBAAoB,SAASA,iBAAT,CAA2BF,KAA3B,EAAkC;AACxD,SAAOA,MAAMG,KAAb;AACD,CAFD;AAGO,IAAIC,wCAAgB,8BAAeF,iBAAf,EAAkC,UAAUG,IAAV,EAAgB;AAC3E,SAAOA,KAAKF,KAAZ;AACD,CAF0B,CAApB;;AAIA,IAAIG,gDAAoB,8BAAeP,YAAf,EAA6B,UAAUE,IAAV,EAAgB;AAC1E,SAAOA,KAAKM,KAAZ;AACD,CAF8B,CAAxB;AAGA,IAAIC,oDAAsB,8BAAeT,YAAf,EAA6B,UAAUE,IAAV,EAAgB;AAC5E,SAAOA,KAAKQ,IAAZ;AACD,CAFgC,CAA1B;AAGA,IAAIC,kDAAqB,8BAAeF,mBAAf,EAAoCG,OAApC,CAAzB;AACA,IAAIC,wCAAgB,8BAAeb,YAAf,EAA6B,UAAUE,IAAV,EAAgB;AACtE,SAAOA,KAAKY,GAAZ;AACD,CAF0B,CAApB;;AAIP,IAAIC,sBAAsB,8BAAeN,mBAAf,EAAoC,UAAUC,IAAV,EAAgB;AAC5E,SAAOA,OAAOA,KAAKM,IAAZ,GAAmB,CAA1B;AACD,CAFyB,CAA1B;;AAIO,IAAIC,oDAAsB,8BAAeF,mBAAf,EAAoC,UAAUC,IAAV,EAAgB;AACnF,SAAOA,QAAQ,CAAf;AACD,CAFgC,CAA1B;;AAIA,IAAIE,gDAAoB,8BAAeH,mBAAf,EAAoC,UAAUC,IAAV,EAAgB;AACjF,SAAOA,QAAQ,CAAf;AACD,CAF8B,CAAxB;;AAIP,SAASG,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,MAAID,EAAEJ,IAAF,GAASK,EAAEL,IAAf,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD;AACD,MAAII,EAAEJ,IAAF,GAASK,EAAEL,IAAf,EAAqB;AACnB,WAAO,CAAP;AACD;AACD,SAAO,8BAAWI,EAAEE,QAAF,CAAWC,WAAX,EAAX,EAAqCF,EAAEC,QAAF,CAAWC,WAAX,EAArC,CAAP;AACD;;AAEM,IAAIC,8CAAmB,8BAAenB,aAAf,EAA8B,UAAUD,KAAV,EAAiB;AAC3E,SAAO,4BAAOA,KAAP,EAAcqB,IAAd,CAAmBN,YAAnB,CAAP;AACD,CAF6B,CAAvB;;AAIA,IAAIO,gDAAoB,8BAAeF,gBAAf,EAAiC,UAAUpB,KAAV,EAAiB;AAC/E,SAAOA,MAAMuB,MAAb;AACD,CAF8B,CAAxB;;AAIA,IAAIC,kDAAqB,8BAAezB,iBAAf,EAAkC,UAAUG,IAAV,EAAgB;AAChF,SAAOA,KAAKuB,MAAZ;AACD,CAF+B,CAAzB;;AAIA,IAAIC,wDAAwB,8BAAeJ,iBAAf,EAAkCE,kBAAlC,EAAsD,UAAUxB,KAAV,EAAiByB,MAAjB,EAAyB;AAChH,SAAOzB,QAAQyB,MAAf;AACD,CAFkC,CAA5B;AAGP","file":"userSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport naturalCmp from 'natural-compare';\nimport values from 'object-values';\n\nconst authSelector = state => state.auth;\n\nconst usersBaseSelector = state => state.users;\nexport const usersSelector = createSelector(usersBaseSelector, base => base.users);\n\nexport const authErrorSelector = createSelector(authSelector, auth => auth.error);\nexport const currentUserSelector = createSelector(authSelector, auth => auth.user);\nexport const isLoggedInSelector = createSelector(currentUserSelector, Boolean);\nexport const tokenSelector = createSelector(authSelector, auth => auth.jwt);\n\nconst currentRoleSelector = createSelector(\n  currentUserSelector,\n  user => (user ? user.role : 0)\n);\n\nexport const isModeratorSelector = createSelector(\n  currentRoleSelector,\n  role => role >= 2\n);\n\nexport const isManagerSelector = createSelector(\n  currentRoleSelector,\n  role => role >= 3\n);\n\nfunction compareUsers(a, b) {\n  if (a.role > b.role) {\n    return -1;\n  }\n  if (a.role < b.role) {\n    return 1;\n  }\n  return naturalCmp(a.username.toLowerCase(), b.username.toLowerCase());\n}\n\nexport const userListSelector = createSelector(\n  usersSelector,\n  users => values(users).sort(compareUsers)\n);\n\nexport const userCountSelector = createSelector(\n  userListSelector,\n  users => users.length\n);\n\nexport const guestCountSelector = createSelector(\n  usersBaseSelector,\n  base => base.guests\n);\n\nexport const listenerCountSelector = createSelector(\n  userCountSelector,\n  guestCountSelector,\n  (users, guests) => users + guests\n);\n"]}