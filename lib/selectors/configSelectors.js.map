{"version":3,"sources":["selectors/configSelectors.js"],"names":["configSelector","state","config","requestOptionsSelector","options","apiUrl","availableEmojiImagesSelector","emoji","availableEmojiNamesSelector","Object","keys","reCaptchaSelector","recaptcha","reCaptchaSiteKeySelector","rc","key","rolesSelector","roles","roleSelector","roleName"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEO,IAAIA,0CAAiB,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AACzD,SAAOA,MAAMC,MAAb;AACD,CAFM;;AAIA,IAAIC,0DAAyB,8BAAeH,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACnF,MAAIE,UAAU,EAAd;AACA,MAAIF,OAAOG,MAAX,EAAmB;AACjBD,YAAQC,MAAR,GAAiBH,OAAOG,MAAxB;AACD;AACD,SAAOD,OAAP;AACD,CANmC,CAA7B;;AAQA,IAAIE,sEAA+B,8BAAeN,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACzF,SAAOA,OAAOK,KAAP,IAAgB,EAAvB;AACD,CAFyC,CAAnC;;AAIA,IAAIC,oEAA8B,8BAAeF,4BAAf,EAA6C,UAAUC,KAAV,EAAiB;AACrG,SAAOE,OAAOC,IAAP,CAAYH,KAAZ,CAAP;AACD,CAFwC,CAAlC;;AAIP,IAAII,oBAAoB,8BAAeX,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACvE,SAAOA,OAAOU,SAAd;AACD,CAFuB,CAAxB;;AAIO,IAAIC,8DAA2B,8BAAeF,iBAAf,EAAkC,UAAUG,EAAV,EAAc;AACpF,SAAOA,KAAKA,GAAGC,GAAR,GAAc,KAArB;AACD,CAFqC,CAA/B;;AAIA,IAAIC,wCAAgB,8BAAehB,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AAC1E,SAAOA,OAAOe,KAAd;AACD,CAF0B,CAApB;;AAIA,IAAIC,sCAAe,uBAAQ,UAAUC,QAAV,EAAoB;AACpD,SAAO,8BAAeH,aAAf,EAA8B,UAAUC,KAAV,EAAiB;AACpD,WAAOA,MAAME,QAAN,CAAP;AACD,GAFM,CAAP;AAGD,CAJyB,CAAnB;AAKP","file":"configSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash/memoize';\n\nexport const configSelector = state => state.config;\n\nexport const requestOptionsSelector = createSelector(\n  configSelector,\n  (config) => {\n    const options = {};\n    if (config.apiUrl) {\n      options.apiUrl = config.apiUrl;\n    }\n    return options;\n  },\n);\n\nexport const availableEmojiImagesSelector = createSelector(\n  configSelector,\n  config => config.emoji || {},\n);\n\nexport const availableEmojiNamesSelector = createSelector(\n  availableEmojiImagesSelector,\n  emoji => Object.keys(emoji),\n);\n\nconst reCaptchaSelector = createSelector(\n  configSelector,\n  config => config.recaptcha,\n);\n\nexport const reCaptchaSiteKeySelector = createSelector(\n  reCaptchaSelector,\n  rc => (rc ? rc.key : false),\n);\n\nexport const rolesSelector = createSelector(\n  configSelector,\n  config => config.roles,\n);\n\nexport const roleSelector = memoize(roleName => createSelector(\n  rolesSelector,\n  roles => roles[roleName],\n));\n"]}