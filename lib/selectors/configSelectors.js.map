{"version":3,"sources":["selectors/configSelectors.js"],"names":["configSelector","state","config","requestOptionsSelector","options","apiUrl","availableEmojiImagesSelector","emoji","availableEmojiNamesSelector","Object","keys","reCaptchaSelector","recaptcha","reCaptchaSiteKeySelector","rc","key","rolesSelector","roles","roleSelector","roleName","roleColorsSelector","admin","manager","moderator","special","default"],"mappings":";;;;;;;AAAA;;AACA;;;;AACO,IAAIA,iBAAiB,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AACzD,SAAOA,MAAMC,MAAb;AACD,CAFM;;;AAGA,IAAIC,yBAAyB,8BAAeH,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACnF,MAAIE,UAAU,EAAd;;AAEA,MAAIF,OAAOG,MAAX,EAAmB;AACjBD,YAAQC,MAAR,GAAiBH,OAAOG,MAAxB;AACD;;AAED,SAAOD,OAAP;AACD,CARmC,CAA7B;;AASA,IAAIE,+BAA+B,8BAAeN,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACzF,SAAOA,OAAOK,KAAP,IAAgB,EAAvB;AACD,CAFyC,CAAnC;;AAGA,IAAIC,8BAA8B,8BAAeF,4BAAf,EAA6C,UAAUC,KAAV,EAAiB;AACrG,SAAOE,OAAOC,IAAP,CAAYH,KAAZ,CAAP;AACD,CAFwC,CAAlC;;AAGP,IAAII,oBAAoB,8BAAeX,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AACvE,SAAOA,OAAOU,SAAd;AACD,CAFuB,CAAxB;AAGO,IAAIC,2BAA2B,8BAAeF,iBAAf,EAAkC,UAAUG,EAAV,EAAc;AACpF,SAAOA,KAAKA,GAAGC,GAAR,GAAc,KAArB;AACD,CAFqC,CAA/B;;AAGA,IAAIC,gBAAgB,8BAAehB,cAAf,EAA+B,UAAUE,MAAV,EAAkB;AAC1E,SAAOA,OAAOe,KAAd;AACD,CAF0B,CAApB;;AAGA,IAAIC,eAAe,sBAAQ,UAAUC,QAAV,EAAoB;AACpD,SAAO,8BAAeH,aAAf,EAA8B,UAAUC,KAAV,EAAiB;AACpD,WAAOA,MAAME,QAAN,CAAP;AACD,GAFM,CAAP;AAGD,CAJyB,CAAnB,C,CAIH;;;;AAEG,IAAIC,qBAAqB,SAASA,kBAAT,GAA8B;AAC5D,SAAO;AACLC,WAAO,SADF;AAELC,aAAS,SAFJ;AAGLC,eAAW,SAHN;AAILC,aAAS,SAJJ;AAKLC,aAAS;AALJ,GAAP;AAOD,CARM,C,CASP","file":"configSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash/memoize';\n\nexport const configSelector = state => state.config;\n\nexport const requestOptionsSelector = createSelector(\n  configSelector,\n  (config) => {\n    const options = {};\n    if (config.apiUrl) {\n      options.apiUrl = config.apiUrl;\n    }\n    return options;\n  },\n);\n\nexport const availableEmojiImagesSelector = createSelector(\n  configSelector,\n  config => config.emoji || {},\n);\n\nexport const availableEmojiNamesSelector = createSelector(\n  availableEmojiImagesSelector,\n  emoji => Object.keys(emoji),\n);\n\nconst reCaptchaSelector = createSelector(\n  configSelector,\n  config => config.recaptcha,\n);\n\nexport const reCaptchaSiteKeySelector = createSelector(\n  reCaptchaSelector,\n  rc => (rc ? rc.key : false),\n);\n\nexport const rolesSelector = createSelector(\n  configSelector,\n  config => config.roles,\n);\n\nexport const roleSelector = memoize(roleName => createSelector(\n  rolesSelector,\n  roles => roles[roleName],\n));\n\n// TODO configurable.\nexport const roleColorsSelector = () => ({\n  admin: '#ff3b74',\n  manager: '#05daa5',\n  moderator: '#00b3dc',\n  special: '#fc911d',\n  default: '',\n});\n"]}