{"version":3,"sources":["selectors/waitlistSelectors.js"],"names":["baseSelector","state","waitlist","isLockedSelector","wl","locked","waitlistIDsSelector","sizeSelector","list","length","waitlistUsersSelector","usersSelector","ids","users","map","id","djAndWaitlistUsersSelector","djSelector","dj","concat","positionSelector","currentUserSelector","user","indexOf","_id","userInWaitlistSelector","isCurrentDJSelector","position","isDJ","waitlistSelector","averagePlayDuration","baseEtaSelector","size","etaSelector","timeRemainingSelector","eta","remaining"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAIA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,MAAMC,QAAb;AACD,CAFD;;AAIO,IAAIC,mBAAmB,8BAAeH,YAAf,EAA6B,UAAUI,EAAV,EAAc;AACvE,SAAO,CAAC,CAACA,GAAGC,MAAZ;AACD,CAF6B,CAAvB;;AAGP,IAAIC,sBAAsB,8BAAeN,YAAf,EAA6B,UAAUI,EAAV,EAAc;AACnE,SAAOA,GAAGF,QAAV;AACD,CAFyB,CAA1B;AAGO,IAAIK,eAAe,8BAAeD,mBAAf,EAAoC,UAAUE,IAAV,EAAgB;AAC5E,SAAOA,KAAKC,MAAZ;AACD,CAFyB,CAAnB;;AAGA,IAAIC,wBAAwB,8BAAeJ,mBAAf,EAAoCK,4BAApC,EAAmD,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC1G,SAAOD,IAAIE,GAAJ,CAAQ,UAAUC,EAAV,EAAc;AAC3B,WAAOF,MAAME,EAAN,CAAP;AACD,GAFM,CAAP;AAGD,CAJkC,CAA5B;;AAKA,IAAIC,6BAA6B,8BAAeC,0BAAf,EAA2BP,qBAA3B,EAAkD,UAAUQ,EAAV,EAAchB,QAAd,EAAwB;AAChH,SAAOgB,KAAK,CAACA,EAAD,EAAKC,MAAL,CAAYjB,QAAZ,CAAL,GAA6BA,QAApC;AACD,CAFuC,CAAjC;;AAGA,IAAIkB,mBAAmB,8BAAed,mBAAf,EAAoCe,kCAApC,EAAyD,UAAUT,GAAV,EAAeU,IAAf,EAAqB;AAC1G,MAAI,CAACA,IAAL,EAAW,OAAO,CAAC,CAAR;AACX,SAAOV,IAAIW,OAAJ,CAAYD,KAAKE,GAAjB,CAAP;AACD,CAH6B,CAAvB;;AAIA,IAAIC,yBAAyB,8BAAeL,gBAAf,EAAiCM,mCAAjC,EAAsD,UAAUC,QAAV,EAAoBC,IAApB,EAA0B;AAClH,SAAOD,aAAa,CAAC,CAAd,IAAmBC,IAA1B;AACD,CAFmC,CAA7B;;AAGA,IAAIC,mBAAmB,wCAAyB;AACrDxB,UAAQF,gBAD6C;AAErDU,SAAOH;AAF8C,CAAzB,CAAvB,C,CAGH;;;AAEJ,IAAIoB,sBAAsB,IAAI,EAAJ,GAAS,IAAnC;AACO,IAAIC,kBAAkB,8BAAeX,gBAAf,EAAiCb,YAAjC,EAA+C,UAAUoB,QAAV,EAAoBK,IAApB,EAA0B;AACpG,SAAO,CAACL,aAAa,CAAC,CAAd,GAAkBK,IAAlB,GAAyBL,QAA1B,IAAsCG,mBAA7C;AACD,CAF4B,CAAtB;;AAGA,IAAIG,cAAc,8BAAeF,eAAf,EAAgCG,qCAAhC,EAAuD,UAAUC,GAAV,EAAeC,SAAf,EAA0B;AACxG,SAAOD,MAAMC,SAAb;AACD,CAFwB,CAAlB,C,CAGP","file":"waitlistSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport { timeRemainingSelector, djSelector, isCurrentDJSelector } from './boothSelectors';\nimport { currentUserSelector, usersSelector } from './userSelectors';\n\nconst baseSelector = state => state.waitlist;\n\nexport const isLockedSelector = createSelector(baseSelector, wl => !!wl.locked);\nconst waitlistIDsSelector = createSelector(baseSelector, wl => wl.waitlist);\n\nexport const sizeSelector = createSelector(\n  waitlistIDsSelector,\n  list => list.length,\n);\n\nexport const waitlistUsersSelector = createSelector(\n  waitlistIDsSelector,\n  usersSelector,\n  (ids, users) => ids.map(id => users[id]),\n);\n\nexport const djAndWaitlistUsersSelector = createSelector(\n  djSelector,\n  waitlistUsersSelector,\n  (dj, waitlist) => (dj ? [dj, ...waitlist] : waitlist),\n);\n\nexport const positionSelector = createSelector(\n  waitlistIDsSelector,\n  currentUserSelector,\n  (ids, user) => {\n    if (!user) return -1;\n    return ids.indexOf(user._id);\n  },\n);\n\nexport const userInWaitlistSelector = createSelector(\n  positionSelector,\n  isCurrentDJSelector,\n  (position, isDJ) => position !== -1 || isDJ,\n);\n\nexport const waitlistSelector = createStructuredSelector({\n  locked: isLockedSelector,\n  users: waitlistUsersSelector,\n});\n\n// Most videos come in at around 4 minutes.\nconst averagePlayDuration = 4 * 60 * 1000;\nexport const baseEtaSelector = createSelector(\n  positionSelector,\n  sizeSelector,\n  (position, size) =>\n    (position === -1 ? size : position) * averagePlayDuration,\n);\n\nexport const etaSelector = createSelector(\n  baseEtaSelector,\n  timeRemainingSelector,\n  (eta, remaining) => eta + remaining,\n);\n"]}