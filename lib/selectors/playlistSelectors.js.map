{"version":3,"sources":["selectors/playlistSelectors.js"],"names":["byName","a","b","name","toLowerCase","baseSelector","state","playlists","playlistsSelector","sort","playlistItemsSelector","playlistItems","activePlaylistIDSelector","activePlaylistID","activeMediaSelector","activePlaylist","mergePlaylistItems","playlist","media","activePlaylistSelector","activeID","activeMedia","selectedPlaylistIDSelector","selectedPlaylistID","selectedMediaSelector","selectedPlaylist","filterSelector","base","currentFilter","currentFilterSelector","filter","selectedID","playlistID","playlistItemFilterSelector","filteredSelectedPlaylistItemsSelector","selectedItems","items","selectedPlaylistSelector","selectedMedia","nextMediaSelector","isSelectedPlaylistLoadingSelector","Boolean","loading","isFilteredSelector"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACjC,SAAO,8BAAWD,EAAEE,IAAF,CAAOC,WAAP,EAAX,EAAiCF,EAAEC,IAAF,CAAOC,WAAP,EAAjC,CAAP;AACD,CAFD;;AAIA,IAAIC,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,MAAMC,SAAb;AACD,CAFD;;AAIO,IAAIC,gDAAoB,8BAAeH,YAAf,EAA6B,UAAUE,SAAV,EAAqB;AAC/E,SAAO,4BAAOA,UAAUA,SAAjB,EAA4BE,IAA5B,CAAiCT,MAAjC,CAAP;AACD,CAF8B,CAAxB;;AAIA,IAAIU,wDAAwB,8BAAeL,YAAf,EAA6B,UAAUE,SAAV,EAAqB;AACnF,SAAOA,UAAUI,aAAjB;AACD,CAFkC,CAA5B;;AAIA,IAAIC,8DAA2B,8BAAeP,YAAf,EAA6B,UAAUE,SAAV,EAAqB;AACtF,SAAOA,UAAUM,gBAAjB;AACD,CAFqC,CAA/B;;AAIP,IAAIC,sBAAsB,8BAAeJ,qBAAf,EAAsCE,wBAAtC,EAAgE,UAAUD,aAAV,EAAyBI,cAAzB,EAAyC;AACjI,SAAOJ,cAAcI,cAAd,KAAiC,EAAxC;AACD,CAFyB,CAA1B;;AAIA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCN,aAAtC,EAAqD;AACnD,MAAIM,QAAJ,EAAc;AACZ,WAAO,uBAAS,EAAT,EAAaA,QAAb,EAAuB;AAC5BC,aAAOP;AADqB,KAAvB,CAAP;AAGD;AACD,SAAO,IAAP;AACD;;AAEM,IAAIQ,0DAAyB,8BAAed,YAAf,EAA6BO,wBAA7B,EAAuDE,mBAAvD,EAA4E,UAAUP,SAAV,EAAqBa,QAArB,EAA+BC,WAA/B,EAA4C;AAC1J,SAAOL,mBAAmBT,UAAUA,SAAV,CAAoBa,QAApB,CAAnB,EAAkDC,WAAlD,CAAP;AACD,CAFmC,CAA7B;;AAIA,IAAIC,kEAA6B,8BAAejB,YAAf,EAA6B,UAAUE,SAAV,EAAqB;AACxF,SAAOA,UAAUgB,kBAAjB;AACD,CAFuC,CAAjC;;AAIP,IAAIC,wBAAwB,8BAAed,qBAAf,EAAsCY,0BAAtC,EAAkE,UAAUX,aAAV,EAAyBc,gBAAzB,EAA2C;AACvI,SAAOd,cAAcc,gBAAd,KAAmC,EAA1C;AACD,CAF2B,CAA5B;;AAIA,IAAIC,iBAAiB,8BAAerB,YAAf,EAA6B,UAAUsB,IAAV,EAAgB;AAChE,SAAOA,KAAKC,aAAZ;AACD,CAFoB,CAArB;;AAIA,IAAIC,wBAAwB,8BAAeH,cAAf,EAA+BJ,0BAA/B,EAA2D,UAAUQ,MAAV,EAAkBC,UAAlB,EAA8B;AACnH,MAAID,UAAUA,OAAOE,UAAP,KAAsBD,UAApC,EAAgD;AAC9C,WAAOD,MAAP;AACD;AACD,SAAO,IAAP;AACD,CAL2B,CAA5B;;AAOO,IAAIG,kEAA6B,8BAAeJ,qBAAf,EAAsC,UAAUC,MAAV,EAAkB;AAC9F,SAAOA,UAAUA,OAAOA,MAAxB;AACD,CAFuC,CAAjC;;AAIA,IAAII,wFAAwC,8BAAeZ,0BAAf,EAA2CE,qBAA3C,EAAkEK,qBAAlE,EAAyF,UAAUE,UAAV,EAAsBI,aAAtB,EAAqCL,MAArC,EAA6C;AACvL,MAAIA,MAAJ,EAAY;AACV,WAAOA,OAAOM,KAAd;AACD;AACD,SAAOD,aAAP;AACD,CALkD,CAA5C;;AAOA,IAAIE,8DAA2B,8BAAehC,YAAf,EAA6BiB,0BAA7B,EAAyDE,qBAAzD,EAAgF,UAAUjB,SAAV,EAAqBwB,UAArB,EAAiCO,aAAjC,EAAgD;AACpK,SAAOtB,mBAAmBT,UAAUA,SAAV,CAAoBwB,UAApB,CAAnB,EAAoDO,aAApD,CAAP;AACD,CAFqC,CAA/B;;AAIA,IAAIC,gDAAoB,8BAAezB,mBAAf,EAAoC,UAAUI,KAAV,EAAiB;AAClF,SAAOA,QAAQA,MAAM,CAAN,CAAR,GAAmB,IAA1B;AACD,CAF8B,CAAxB;;AAIA,IAAIsB,gFAAoC,8BAAeH,wBAAf,EAAyC,UAAUZ,gBAAV,EAA4B;AAClH,SAAOgB,QAAQhB,iBAAiBiB,OAAzB,CAAP;AACD,CAF8C,CAAxC;;AAIA,IAAIC,kDAAqB,8BAAeV,0BAAf,EAA2C,UAAUH,MAAV,EAAkB;AAC3F,SAAOW,QAAQX,MAAR,CAAP;AACD,CAF+B,CAAzB;AAGP","file":"playlistSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\nimport naturalCmp from 'natural-compare';\nimport values from 'object-values';\n\nconst byName = (a, b) => naturalCmp(a.name.toLowerCase(), b.name.toLowerCase());\n\nconst baseSelector = state => state.playlists;\n\nexport const playlistsSelector = createSelector(\n  baseSelector,\n  playlists => values(playlists.playlists).sort(byName),\n);\n\nexport const playlistItemsSelector = createSelector(\n  baseSelector,\n  playlists => playlists.playlistItems,\n);\n\nexport const activePlaylistIDSelector = createSelector(\n  baseSelector,\n  playlists => playlists.activePlaylistID,\n);\n\nconst activeMediaSelector = createSelector(\n  playlistItemsSelector,\n  activePlaylistIDSelector,\n  (playlistItems, activePlaylist) => playlistItems[activePlaylist] || [],\n);\n\nfunction mergePlaylistItems(playlist, playlistItems) {\n  if (playlist) {\n    return {\n      ...playlist,\n      media: playlistItems,\n    };\n  }\n  return null;\n}\n\nexport const activePlaylistSelector = createSelector(\n  baseSelector,\n  activePlaylistIDSelector,\n  activeMediaSelector,\n  (playlists, activeID, activeMedia) =>\n    mergePlaylistItems(playlists.playlists[activeID], activeMedia),\n);\n\nexport const selectedPlaylistIDSelector = createSelector(\n  baseSelector,\n  playlists => playlists.selectedPlaylistID,\n);\n\nconst selectedMediaSelector = createSelector(\n  playlistItemsSelector,\n  selectedPlaylistIDSelector,\n  (playlistItems, selectedPlaylist) => playlistItems[selectedPlaylist] || [],\n);\n\nconst filterSelector = createSelector(\n  baseSelector,\n  base => base.currentFilter,\n);\n\nconst currentFilterSelector = createSelector(\n  filterSelector,\n  selectedPlaylistIDSelector,\n  (filter, selectedID) => {\n    if (filter && filter.playlistID === selectedID) {\n      return filter;\n    }\n    return null;\n  },\n);\n\nexport const playlistItemFilterSelector = createSelector(\n  currentFilterSelector,\n  filter => filter && filter.filter,\n);\n\nexport const filteredSelectedPlaylistItemsSelector = createSelector(\n  selectedPlaylistIDSelector,\n  selectedMediaSelector,\n  currentFilterSelector,\n  (selectedID, selectedItems, filter) => {\n    if (filter) {\n      return filter.items;\n    }\n    return selectedItems;\n  },\n);\n\nexport const selectedPlaylistSelector = createSelector(\n  baseSelector,\n  selectedPlaylistIDSelector,\n  selectedMediaSelector,\n  (playlists, selectedID, selectedMedia) =>\n    mergePlaylistItems(playlists.playlists[selectedID], selectedMedia),\n);\n\nexport const nextMediaSelector = createSelector(\n  activeMediaSelector,\n  media => (media ? media[0] : null),\n);\n\nexport const isSelectedPlaylistLoadingSelector = createSelector(\n  selectedPlaylistSelector,\n  selectedPlaylist => Boolean(selectedPlaylist.loading),\n);\n\nexport const isFilteredSelector = createSelector(\n  playlistItemFilterSelector,\n  filter => Boolean(filter),\n);\n"]}