{"version":3,"sources":["selectors/voteSelectors.js"],"names":["baseSelector","state","votes","createPropSelector","base","prop","obj","createIsSelector","type","currentUserSelector","users","me","indexOf","_id","createCountSelector","array","length","favoritesSelector","upvotesSelector","downvotesSelector","currentVotesSelector","favorites","upvotes","downvotes","isFavoriteSelector","isUpvoteSelector","isDownvoteSelector","favoritesCountSelector","upvotesCountSelector","downvotesCountSelector","currentVoteStatsSelector","isFavorite","isUpvote","isDownvote","favoritesCount","upvotesCount","downvotesCount"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAIA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,MAAMC,KAAb;AACD,CAFD;;AAIA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AAC/D,SAAO,8BAAeD,IAAf,EAAqB,UAAUE,GAAV,EAAe;AACzC,WAAOA,IAAID,IAAJ,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIE,mBAAmB,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,SAAO,8BAAeA,IAAf,EAAqBC,kCAArB,EAA0C,UAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AACpE,WAAO,CAAC,CAACA,EAAF,IAAQD,MAAME,OAAN,CAAcD,GAAGE,GAAjB,IAAwB,CAAC,CAAxC;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,IAAIC,sBAAsB,SAASA,mBAAT,CAA6BN,IAA7B,EAAmC;AAC3D,SAAO,8BAAeA,IAAf,EAAqB,UAAUO,KAAV,EAAiB;AAC3C,WAAOA,MAAMC,MAAb;AACD,GAFM,CAAP;AAGD,CAJD;;AAMO,IAAIC,oBAAoBd,mBAAmBH,YAAnB,EAAiC,WAAjC,CAAxB;;AACA,IAAIkB,kBAAkBf,mBAAmBH,YAAnB,EAAiC,SAAjC,CAAtB;;AACA,IAAImB,oBAAoBhB,mBAAmBH,YAAnB,EAAiC,WAAjC,CAAxB;;AACA,IAAIoB,uBAAuB,wCAAyB;AACzDC,aAAWJ,iBAD8C;AAEzDK,WAASJ,eAFgD;AAGzDK,aAAWJ;AAH8C,CAAzB,CAA3B;;AAKA,IAAIK,qBAAqBjB,iBAAiBU,iBAAjB,CAAzB;;AACA,IAAIQ,mBAAmBlB,iBAAiBW,eAAjB,CAAvB;;AACA,IAAIQ,qBAAqBnB,iBAAiBY,iBAAjB,CAAzB;;AACA,IAAIQ,yBAAyBb,oBAAoBG,iBAApB,CAA7B;;AACA,IAAIW,uBAAuBd,oBAAoBI,eAApB,CAA3B;;AACA,IAAIW,yBAAyBf,oBAAoBK,iBAApB,CAA7B;;AACA,IAAIW,2BAA2B,wCAAyB;AAC7DC,cAAYP,kBADiD;AAE7DQ,YAAUP,gBAFmD;AAG7DQ,cAAYP,kBAHiD;AAI7DQ,kBAAgBP,sBAJ6C;AAK7DQ,gBAAcP,oBAL+C;AAM7DQ,kBAAgBP;AAN6C,CAAzB,CAA/B,C,CAQP","file":"voteSelectors.js","sourcesContent":["import { createSelector, createStructuredSelector } from 'reselect';\nimport { currentUserSelector } from './userSelectors';\n\nconst baseSelector = state => state.votes;\n\nconst createPropSelector = (base, prop) => createSelector(base, obj => obj[prop]);\nconst createIsSelector = type => createSelector(\n  type,\n  currentUserSelector,\n  (users, me) => !!me && users.indexOf(me._id) > -1,\n);\nconst createCountSelector = type => createSelector(\n  type,\n  array => array.length,\n);\n\nexport const favoritesSelector = createPropSelector(baseSelector, 'favorites');\nexport const upvotesSelector = createPropSelector(baseSelector, 'upvotes');\nexport const downvotesSelector = createPropSelector(baseSelector, 'downvotes');\n\nexport const currentVotesSelector = createStructuredSelector({\n  favorites: favoritesSelector,\n  upvotes: upvotesSelector,\n  downvotes: downvotesSelector,\n});\n\nexport const isFavoriteSelector = createIsSelector(favoritesSelector);\nexport const isUpvoteSelector = createIsSelector(upvotesSelector);\nexport const isDownvoteSelector = createIsSelector(downvotesSelector);\n\nexport const favoritesCountSelector = createCountSelector(favoritesSelector);\nexport const upvotesCountSelector = createCountSelector(upvotesSelector);\nexport const downvotesCountSelector = createCountSelector(downvotesSelector);\n\nexport const currentVoteStatsSelector = createStructuredSelector({\n  isFavorite: isFavoriteSelector,\n  isUpvote: isUpvoteSelector,\n  isDownvote: isDownvoteSelector,\n  favoritesCount: favoritesCountSelector,\n  upvotesCount: upvotesCountSelector,\n  downvotesCount: downvotesCountSelector,\n});\n"]}