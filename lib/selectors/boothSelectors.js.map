{"version":3,"sources":["selectors/boothSelectors.js"],"names":["baseSelector","state","booth","historyIDSelector","historyID","mediaSelector","media","startTimeSelector","startTime","mediaDurationSelector","end","start","endTimeSelector","duration","timeElapsedSelector","currentTimeSelector","currentTime","Math","max","timeRemainingSelector","elapsed","mediaProgressSelector","min","djSelector","usersSelector","users","djID","isCurrentDJSelector","currentUserSelector","dj","me","_id","canSkipSelector","currentUserHasRoleSelector","isCurrentDJ","hasRole","playbackVolumeSelector","volumeSelector","isMutedSelector","isPreviewMediaDialogOpenSelector","volume","isMuted","isPreviewMediaDialogOpen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAIA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,SAAOA,MAAMC,KAAb;AACD,CAFD;;AAIO,IAAIC,oBAAoB,8BAAeH,YAAf,EAA6B,UAAUE,KAAV,EAAiB;AAC3E,SAAOA,MAAME,SAAb;AACD,CAF8B,CAAxB;;AAGA,IAAIC,gBAAgB,8BAAeL,YAAf,EAA6B,UAAUE,KAAV,EAAiB;AACvE,SAAOA,MAAMI,KAAb;AACD,CAF0B,CAApB;;AAGA,IAAIC,oBAAoB,8BAAeP,YAAf,EAA6B,UAAUE,KAAV,EAAiB;AAC3E,SAAOA,MAAMM,SAAN,IAAmB,CAA1B;AACD,CAF8B,CAAxB;;AAGA,IAAIC,wBAAwB,8BAAeJ,aAAf,EAA8B,UAAUC,KAAV,EAAiB;AAChF,SAAOA,QAAQA,MAAMI,GAAN,GAAYJ,MAAMK,KAA1B,GAAkC,CAAzC;AACD,CAFkC,CAA5B;;AAGA,IAAIC,kBAAkB,8BAAeL,iBAAf,EAAkCE,qBAAlC,EAAyD,UAAUD,SAAV,EAAqBK,QAArB,EAA+B;AACnH,SAAOL,YAAYK,WAAW,IAAvB,IAA+B,CAAtC;AACD,CAF4B,CAAtB;;AAGA,IAAIC,sBAAsB,8BAAeP,iBAAf,EAAkCQ,kCAAlC,EAAuD;AACxF,UAAUP,SAAV,EAAqBQ,WAArB,EAAkC;AAChC,SAAOR,YAAYS,KAAKC,GAAL,CAAS,CAACF,cAAcR,SAAf,IAA4B,IAArC,EAA2C,CAA3C,CAAZ,GAA4D,CAAnE;AACD,CAHgC,CAA1B;;AAIA,IAAIW,wBAAwB,8BAAeV,qBAAf,EAAsCK,mBAAtC,EAA2D,UAAUD,QAAV,EAAoBO,OAApB,EAA6B;AACzH,SAAOP,WAAW,CAAX,GAAeA,WAAWO,OAA1B,GAAoC,CAA3C;AACD,CAFkC,CAA5B;;AAGA,IAAIC,wBAAwB,8BAAeZ,qBAAf,EAAsCK,mBAAtC,EAA2D,UAAUD,QAAV,EAAoBO,OAApB,EAA6B;AACzH,SAAOP,SAAS;AAAT,IACLI,KAAKC,GAAL,CAAS,CAAT,EAAYD,KAAKK,GAAL,CAAS,CAAT,EAAYF,UAAUP,QAAtB,CAAZ,CADK,GAC0C,CADjD;AAED,CAHkC,CAA5B;;AAIA,IAAIU,aAAa,8BAAevB,YAAf,EAA6BwB,4BAA7B,EAA4C,UAAUtB,KAAV,EAAiBuB,KAAjB,EAAwB;AAC1F,SAAOA,MAAMvB,MAAMwB,IAAZ,CAAP;AACD,CAFuB,CAAjB;;AAGA,IAAIC,sBAAsB,8BAAeJ,UAAf,EAA2BK,kCAA3B,EAAgD,UAAUC,EAAV,EAAcC,EAAd,EAAkB;AACjG,SAAOD,MAAMC,EAAN,GAAWD,GAAGE,GAAH,KAAWD,GAAGC,GAAzB,GAA+B,KAAtC;AACD,CAFgC,CAA1B;;AAGA,IAAIC,kBAAkB,8BAAe7B,iBAAf,EAAkCwB,mBAAlC,EAAuDM,yCAAvD,EAAmF,UAAU7B,SAAV,EAAqB8B,WAArB,EAAkCC,OAAlC,EAA2C;AACzJ,MAAI,CAAC/B,SAAL,EAAgB;AACd,WAAO,KAAP;AACD;;AAED,SAAO8B,cAAcC,QAAQ,iBAAR,CAAd,GAA2CA,QAAQ,kBAAR,CAAlD;AACD,CAN4B,CAAtB;;AAOA,IAAIC,yBAAyB,8BAAeC,gCAAf,EAA+BC,iCAA/B,EAAgDC,iDAAhD,EAAkF,UAAUC,MAAV,EAAkBC,OAAlB,EAA2BC,wBAA3B,EAAqD;AACzK,SAAOD,WAAWC,wBAAX,GAAsC,CAAtC,GAA0CF,MAAjD;AACD,CAFmC,CAA7B,C,CAGP","file":"boothSelectors.js","sourcesContent":["import { createSelector } from 'reselect';\n\nimport { isPreviewMediaDialogOpenSelector } from './dialogSelectors';\nimport { isMutedSelector, volumeSelector } from './settingSelectors';\nimport { currentTimeSelector } from './timeSelectors';\nimport {\n  currentUserSelector,\n  currentUserHasRoleSelector,\n  usersSelector,\n} from './userSelectors';\n\nconst baseSelector = state => state.booth;\n\nexport const historyIDSelector = createSelector(baseSelector, booth => booth.historyID);\nexport const mediaSelector = createSelector(baseSelector, booth => booth.media);\nexport const startTimeSelector = createSelector(baseSelector, booth => booth.startTime || 0);\n\nexport const mediaDurationSelector = createSelector(\n  mediaSelector,\n  media => (media ? media.end - media.start : 0),\n);\n\nexport const endTimeSelector = createSelector(\n  startTimeSelector,\n  mediaDurationSelector,\n  (startTime, duration) => startTime + (duration * 1000) || 0,\n);\n\nexport const timeElapsedSelector = createSelector(\n  startTimeSelector,\n  currentTimeSelector,\n  // in seconds! because media duration is in seconds, too.\n  (startTime, currentTime) => (startTime ? Math.max((currentTime - startTime) / 1000, 0) : 0),\n);\n\nexport const timeRemainingSelector = createSelector(\n  mediaDurationSelector,\n  timeElapsedSelector,\n  (duration, elapsed) => (duration > 0 ? duration - elapsed : 0),\n);\n\nexport const mediaProgressSelector = createSelector(\n  mediaDurationSelector,\n  timeElapsedSelector,\n  (duration, elapsed) => (\n    duration\n      // Ensure that the result is between 0 and 1\n      ? Math.max(0, Math.min(1, elapsed / duration))\n      : 0\n  ),\n);\n\nexport const djSelector = createSelector(\n  baseSelector,\n  usersSelector,\n  (booth, users) => users[booth.djID],\n);\n\nexport const isCurrentDJSelector = createSelector(\n  djSelector,\n  currentUserSelector,\n  (dj, me) => (\n    dj && me ? dj._id === me._id : false\n  ),\n);\n\nexport const canSkipSelector = createSelector(\n  historyIDSelector,\n  isCurrentDJSelector,\n  currentUserHasRoleSelector,\n  (historyID, isCurrentDJ, hasRole) => {\n    if (!historyID) {\n      return false;\n    }\n    return isCurrentDJ ? hasRole('booth.skip.self') : hasRole('booth.skip.other');\n  },\n);\n\nexport const playbackVolumeSelector = createSelector(\n  volumeSelector,\n  isMutedSelector,\n  isPreviewMediaDialogOpenSelector,\n  (volume, isMuted, isPreviewMediaDialogOpen) =>\n    (isMuted || isPreviewMediaDialogOpen ? 0 : volume),\n);\n"]}