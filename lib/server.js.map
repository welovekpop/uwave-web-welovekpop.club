{"version":3,"sources":["server.js"],"names":["mockAsset","modulePath","path","require","resolve","cache","exports","_ref","mark","_callee","config","sessionKey","_ref2","Uwave","uw","wrap","_callee$","_context","prev","next","sent","default","t0","t1","source","call","t2","t3","build","abrupt","renderToString","getComponent","stop","serverRender","_x","_x2","apply","arguments"],"mappings":";;;;;;AAAA;;;;AACA;;;;AADA;;AACA;;;;AAEA;AACA,SAASA,SAAT,CAAmBC,UAAnB,EAA+B;AAC7B,MAAMC,OAAOC,QAAQC,OAARD,CAAgBF,UAAhBE,CAAb;AACAA,UAAQE,KAARF,CAAcD,IAAdC,IAAsB;AACpBG,aAASJ;AADW,GAAtBC;AAGD;;AAEDH,UAAU,6BAAVA;AACAA,UAAU,8BAAVA;AACAA,UAAU,qCAAVA;AACAA,UAAU,2BAAVA;;kBAEA,YAAA;AAAA,MAAAO,OAAA,iCAAA,aAAA,sBAAAC,IAAA,CAAe,SAAAC,OAAA,CAA4BC,MAA5B,EAAoCC,UAApC,EAAA;AAAA,QAAAC,KAAA,EAAAC,KAAA,EAAAC,EAAA;;AAAA,WAAA,sBAAAC,IAAA,CAAA,SAAAC,QAAA,CAAAC,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAAA,SAAAC,IAAA,GAAAD,SAAAE,IAAA;AAAA,eAAA,CAAA;AAAAF,qBAAAE,IAAA,GAAA,CAAA;AAAA,wDAC2B,SAD3B;;AAAA,eAAA,CAAA;AAAAP,oBAAAK,SAAAG,IAAA;AACIP,oBADJD,MACLS,OAASR;AAEXC,iBAAK,IAAID,KAAJ,CAAUH,MAAV,EAAkBC,UAAlB,CAALG;;AAEN;;AALaG,qBAAAK,EAAA,GAMbR,EANa;AAAAG,qBAAAE,IAAA,GAAA,CAAA;AAAA,wDAMqB,mBANrB;;AAAA,eAAA,CAAA;AAAAF,qBAAAM,EAAA,GAAAN,SAAAG,IAAA;;AAAAH,qBAAAK,EAAA,CAMVE,MANU,CAAAC,IAAA,CAAAR,SAAAK,EAAA,EAMH,SANG,EAAAL,SAAAM,EAAA;;AAAAN,qBAAAS,EAAA,GAObZ,EAPa;AAAAG,qBAAAE,IAAA,GAAA,EAAA;AAAA,wDAOwB,sBAPxB;;AAAA,eAAA,EAAA;AAAAF,qBAAAU,EAAA,GAAAV,SAAAG,IAAA;;AAAAH,qBAAAS,EAAA,CAOVF,MAPU,CAAAC,IAAA,CAAAR,SAAAS,EAAA,EAOH,YAPG,EAAAT,SAAAU,EAAA;;AAAAV,qBAAAE,IAAA,GAAA,EAAA;AAAA,mBASPL,GAAGc,KAAHd,EATO;;AAAA,eAAA,EAAA;AAAA,mBAAAG,SAAAY,MAAA,CAAA,QAAA,EAUNC,4BAAehB,GAAGiB,YAAHjB,EAAfgB,CAVM,CAAA;;AAAA,eAAA,EAAA;AAAA,eAAA,KAAA;AAAA,mBAAAb,SAAAe,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAAvB,OAAA,EAAA,IAAA,CAAA;AAAf,GAAA,CAAA,CAAA;;AAAA,WAA8BwB,YAA9B,CAAAC,EAAA,EAAAC,GAAA,EAAA;AAAA,WAAA5B,KAAA6B,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA;AAAA;;AAAA,SAA8BJ,YAA9B;AAAA,CAAA,E;AA0DA","file":"server.js","sourcesContent":["import 'isomorphic-fetch';\nimport { renderToString } from 'react-dom/server';\n\n// Mock an asset like Webpack's file-loader.\nfunction mockAsset(modulePath) {\n  const path = require.resolve(modulePath);\n  require.cache[path] = {\n    exports: path\n  };\n}\n\nmockAsset('../assets/audio/mention.mp3');\nmockAsset('../assets/img/soundcloud.png');\nmockAsset('../assets/img/soundcloud-inline.png');\nmockAsset('../assets/img/youtube.png');\n\nexport default async function serverRender(config, sessionKey) {\n  const { default: Uwave } = await import('./Uwave');\n\n  const uw = new Uwave(config, sessionKey);\n\n  // Configure the Media sources to be used by this Ã¼Wave client instance.\n  uw.source('youtube', await import('./sources/youtube'));\n  uw.source('soundcloud', await import('./sources/soundcloud'));\n\n  await uw.build();\n  return renderToString(uw.getComponent());\n}\n"]}