{"version":3,"sources":["reducers/settings.js"],"names":["fixVolume","state","volume","initialState","language","mentionSound","muted","videoEnabled","videoSize","notifications","userJoin","userLeave","userNameChanged","skip","reduce","action","_action","type","payload","LOAD_SETTINGS","CHANGE_SETTING","clone"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAA0E;AAC1E;AACA;AAEA,SAASA,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIA,MAAMC,MAAN,GAAe,CAAnB,EAAsB,OAAO,uBAAS,EAAT,EAAaD,KAAb,EAAoB;AAC/CC,YAAQ;AADuC,GAApB,CAAP;AAGtB,MAAID,MAAMC,MAAN,GAAe,GAAnB,EAAwB,OAAO,uBAAS,EAAT,EAAaD,KAAb,EAAoB;AACjDC,YAAQ;AADyC,GAApB,CAAP;AAGxB,SAAOD,KAAP;AACD;;AAED,IAAIE,eAAe;AACjBC,YAAU,IADO;AAEjBC,gBAAc,IAFG;AAGjBC,SAAO,KAHU;AAIjBC,gBAAc,IAJG;AAKjBC,aAAW,OALM;AAMjBN,UAAQ,CANS;AAOjBO,iBAAe;AACbC,cAAU,IADG;AAEbC,eAAW,IAFE;AAGbC,qBAAiB,IAHJ;AAIbC,UAAM;AAJO;AAPE,CAAnB;;AAeA,SAASC,MAAT,CAAgBb,KAAhB,EAAuBc,MAAvB,EAA+B;AAC7B,MAAId,UAAU,KAAK,CAAnB,EAAsB;AACpBA,YAAQE,YAAR;AACD;;AAED,MAAIY,WAAW,KAAK,CAApB,EAAuB;AACrBA,aAAS,EAAT;AACD;;AAED,MAAIC,UAAUD,MAAd;AAAA,MACIE,OAAOD,QAAQC,IADnB;AAAA,MAEIC,UAAUF,QAAQE,OAFtB;;AAIA,UAAQD,IAAR;AACE,SAAKE,0BAAL;AACE;AACA,aAAO,uBAAS,EAAT,EAAahB,YAAb,EAA2Be,OAA3B,EAAoC;AACzC;AACA;AACA;AACAT,uBAAeS,UAAU,uBAAS,EAAT,EAAaf,aAAaM,aAA1B,EAAyCS,QAAQT,aAAjD,CAAV,GAA4EN,aAAaM;AAJ/D,OAApC,CAAP;;AAOF,SAAKW,2BAAL;AACE,aAAO,wBAAMnB,KAAN,EAAaiB,OAAb,EAAsB;AAC3BG,eAAO;AADoB,OAAtB,CAAP;;AAIF;AACE,aAAOpB,KAAP;AAhBJ;AAkBD;;eAEc,sBAAQD,SAAR,EAAmBc,MAAnB,C","file":"settings.js","sourcesContent":["import merge from 'deepmerge';\nimport compose from 'recompose/compose';\nimport {\n  LOAD_SETTINGS,\n  CHANGE_SETTING,\n} from '../constants/ActionTypes';\n\n// Some people have >100% volumes stored in their localStorage settings\n// because of a bug in Ã¼Wave 1.4. This ensures that _everyone's_ volume\n// is between 0 and 100.\nfunction fixVolume(state) {\n  if (state.volume < 0) return { ...state, volume: 0 };\n  if (state.volume > 100) return { ...state, volume: 100 };\n  return state;\n}\n\nconst initialState = {\n  language: null,\n  mentionSound: true,\n  muted: false,\n  videoEnabled: true,\n  videoSize: 'large',\n  volume: 0,\n  notifications: {\n    userJoin: true,\n    userLeave: true,\n    userNameChanged: true,\n    skip: true,\n  },\n};\n\nfunction reduce(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_SETTINGS:\n    // Loading settings defaults to the initial state.\n      return {\n        ...initialState,\n        ...payload,\n        // Merge notification settings if we have new ones.\n        // Needed if new notification types were added since the last time\n        // settings were saved to localStorage.\n        notifications: payload ? {\n          ...initialState.notifications,\n          ...payload.notifications,\n        } : initialState.notifications,\n      };\n    case CHANGE_SETTING:\n      return merge(state, payload, { clone: true });\n    default:\n      return state;\n  }\n}\n\nexport default compose(fixVolume, reduce);\n"]}