{"version":3,"sources":["reducers/settings.js"],"names":["reduce","initialState","language","mentionSound","muted","videoEnabled","videoSize","volume","notifications","userJoin","userLeave","userNameChanged","skip","state","arguments","length","undefined","action","type","payload","clone"],"mappings":";;;;;kBAmBwBA,M;;AAnBxB;;;;AACA;;;;AACA;;;;AAEA,IAAIC,eAAe;AACjBC,YAAU,IADO;AAEjBC,gBAAc,IAFG;AAGjBC,SAAO,KAHU;AAIjBC,gBAAc,IAJG;AAKjBC,aAAW,OALM;AAMjBC,UAAQ,CANS;AAOjBC,iBAAe;AACbC,cAAU,IADG;AAEbC,eAAW,IAFE;AAGbC,qBAAiB,IAHJ;AAIbC,UAAM;AAJO;AAPE,CAAnB;;AAee,SAASZ,MAAT,GAAkB;AAC/B,MAAIa,QAAQC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoEb,YAAhF;AACA,MAAIgB,SAASH,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAAjF;AACA,MAAII,OAAOD,OAAOC,IAAlB;AAAA,MACIC,UAAUF,OAAOE,OADrB;;AAGA,UAAQD,IAAR;AACE;AACE;AACA,aAAO,uBAAS,EAAT,EAAajB,YAAb,EAA2BkB,OAA3B,EAAoC;AACzC;AACA;AACA;AACAX,uBAAeW,UAAU,uBAAS,EAAT,EAAalB,aAAaO,aAA1B,EAAyCW,QAAQX,aAAjD,CAAV,GAA4EP,aAAaO;AAJ/D,OAApC,CAAP;AAMF;AACE,aAAO,yBAAMK,KAAN,EAAaM,OAAb,EAAsB,EAAEC,OAAO,IAAT,EAAtB,CAAP;AACF;AACE,aAAOP,KAAP;AAZJ;AAcD;AACD","file":"settings.js","sourcesContent":["import merge from 'deepmerge';\nimport {\n  LOAD_SETTINGS,\n  CHANGE_SETTING,\n} from '../constants/actionTypes/settings';\n\nconst initialState = {\n  language: null,\n  mentionSound: true,\n  muted: false,\n  videoEnabled: true,\n  videoSize: 'large',\n  volume: 0,\n  notifications: {\n    userJoin: true,\n    userLeave: true,\n    userNameChanged: true,\n    skip: true,\n  },\n};\n\nexport default function reduce(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_SETTINGS:\n    // Loading settings defaults to the initial state.\n      return {\n        ...initialState,\n        ...payload,\n        // Merge notification settings if we have new ones.\n        // Needed if new notification types were added since the last time\n        // settings were saved to localStorage.\n        notifications: payload ? {\n          ...initialState.notifications,\n          ...payload.notifications,\n        } : initialState.notifications,\n      };\n    case CHANGE_SETTING:\n      return merge(state, payload, { clone: true });\n    default:\n      return state;\n  }\n}\n"]}