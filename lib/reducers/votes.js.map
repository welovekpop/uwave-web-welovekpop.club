{"version":3,"sources":["reducers/votes.js"],"names":["initialState","upvotes","downvotes","favorites","reduce","state","action","_action","type","payload","ADVANCE","stats","LOAD_VOTES","UPVOTE","concat","userID","filter","vote","DOWNVOTE","FAVORITE","indexOf","DO_FAVORITE_START","DO_FAVORITE_COMPLETE"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA,IAAIA,eAAe;AACjBC,WAAS,EADQ;AAEjBC,aAAW,EAFM;AAGjBC,aAAW;AAHM,CAAnB;;AAKe,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC5C,MAAID,UAAU,KAAK,CAAnB,EAAsB;AACpBA,YAAQL,YAAR;AACD;;AAED,MAAIM,WAAW,KAAK,CAApB,EAAuB;AACrBA,aAAS,EAAT;AACD;;AAED,MAAIC,UAAUD,MAAd;AAAA,MACIE,OAAOD,QAAQC,IADnB;AAAA,MAEIC,UAAUF,QAAQE,OAFtB;;AAIA,UAAQD,IAAR;AACE,SAAKE,oBAAL;AACE,UAAID,WAAWA,QAAQE,KAAvB,EAA8B;AAC5B,eAAO,uBAAS,EAAT,EAAaN,KAAb,EAAoB;AACzBJ,mBAASQ,QAAQE,KAAR,CAAcV,OADE;AAEzBC,qBAAWO,QAAQE,KAAR,CAAcT,SAFA;AAGzBC,qBAAWM,QAAQE,KAAR,CAAcR;AAHA,SAApB,CAAP;AAKD;;AAED,aAAOH,YAAP;;AAEF,SAAKY,uBAAL;AACE,aAAO,uBAAS,EAAT,EAAaP,KAAb,EAAoB;AACzBJ,iBAASQ,QAAQR,OADQ;AAEzBC,mBAAWO,QAAQP,SAFM;AAGzBC,mBAAWM,QAAQN;AAHM,OAApB,CAAP;;AAMF,SAAKU,mBAAL;AACE,aAAO,uBAAS,EAAT,EAAaR,KAAb,EAAoB;AACzBJ,iBAASI,MAAMJ,OAAN,CAAca,MAAd,CAAqB,CAACL,QAAQM,MAAT,CAArB,CADgB;AAEzBb,mBAAWG,MAAMH,SAAN,CAAgBc,MAAhB,CAAuB,UAAUC,IAAV,EAAgB;AAChD,iBAAOA,SAASR,QAAQM,MAAxB;AACD,SAFU;AAFc,OAApB,CAAP;;AAOF,SAAKG,qBAAL;AACE,aAAO,uBAAS,EAAT,EAAab,KAAb,EAAoB;AACzBJ,iBAASI,MAAMJ,OAAN,CAAce,MAAd,CAAqB,UAAUC,IAAV,EAAgB;AAC5C,iBAAOA,SAASR,QAAQM,MAAxB;AACD,SAFQ,CADgB;AAIzBb,mBAAWG,MAAMH,SAAN,CAAgBY,MAAhB,CAAuB,CAACL,QAAQM,MAAT,CAAvB;AAJc,OAApB,CAAP;;AAOF,SAAKI,qBAAL;AACE,UAAId,MAAMF,SAAN,CAAgBiB,OAAhB,CAAwBX,QAAQM,MAAhC,MAA4C,CAAC,CAAjD,EAAoD;AAClD,eAAO,uBAAS,EAAT,EAAaV,KAAb,EAAoB;AACzBF,qBAAWE,MAAMF,SAAN,CAAgBW,MAAhB,CAAuB,CAACL,QAAQM,MAAT,CAAvB;AADc,SAApB,CAAP;AAGD;;AAED,aAAOV,KAAP;;AAEF,SAAKgB,8BAAL;AACE,aAAOhB,KAAP;;AAEF,SAAKiB,iCAAL;AACE,aAAOjB,KAAP;;AAEF;AACE,aAAOA,KAAP;AAnDJ;AAqDD","file":"votes.js","sourcesContent":["import {\n  ADVANCE,\n  LOAD_VOTES,\n  FAVORITE,\n  UPVOTE,\n  DOWNVOTE,\n  DO_FAVORITE_START,\n  DO_FAVORITE_COMPLETE,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n  upvotes: [],\n  downvotes: [],\n  favorites: [],\n};\n\nexport default function reduce(state = initialState, action = {}) {\n  const { type, payload } = action;\n  switch (type) {\n    case ADVANCE:\n      if (payload && payload.stats) {\n        return {\n          ...state,\n          upvotes: payload.stats.upvotes,\n          downvotes: payload.stats.downvotes,\n          favorites: payload.stats.favorites,\n        };\n      }\n      return initialState;\n    case LOAD_VOTES:\n      return {\n        ...state,\n        upvotes: payload.upvotes,\n        downvotes: payload.downvotes,\n        favorites: payload.favorites,\n      };\n    case UPVOTE:\n      return {\n        ...state,\n        upvotes: [...state.upvotes, payload.userID],\n        downvotes: state.downvotes.filter(vote => vote !== payload.userID),\n      };\n    case DOWNVOTE:\n      return {\n        ...state,\n        upvotes: state.upvotes.filter(vote => vote !== payload.userID),\n        downvotes: [...state.downvotes, payload.userID],\n      };\n    case FAVORITE:\n      if (state.favorites.indexOf(payload.userID) === -1) {\n        return {\n          ...state,\n          favorites: [...state.favorites, payload.userID],\n        };\n      }\n      return state;\n    case DO_FAVORITE_START:\n      return state;\n    case DO_FAVORITE_COMPLETE:\n      return state;\n    default:\n      return state;\n  }\n}\n"]}