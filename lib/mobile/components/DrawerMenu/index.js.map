{"version":3,"sources":["mobile/components/DrawerMenu/index.js"],"names":["enhance","onShowAbout","props","event","preventDefault","onDrawerClose","onShowSettings","_ref2","_ref3","_ref4","DrawerMenu","_ref","user","playlists","open","onShowPlaylist","onClose","onClick","subheader","map","playlist","_id","active","primary","name","propTypes","process","env","NODE_ENV","object","arrayOf","shape","string","isRequired","bool","func"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,UAAU,4BAAa;AACzB;AACA;AACAC,eAAa,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AACvC,WAAO,UAAUC,KAAV,EAAiB;AACtBA,YAAMC,cAAN;AACAF,YAAMD,WAAN;AACAC,YAAMG,aAAN;AACD,KAJD;AAKD,GATwB;AAUzBC,kBAAgB,SAASA,cAAT,CAAwBJ,KAAxB,EAA+B;AAC7C,WAAO,UAAUC,KAAV,EAAiB;AACtBA,YAAMC,cAAN;AACAF,YAAMI,cAAN;AACAJ,YAAMG,aAAN;AACD,KAJD;AAKD;AAhBwB,CAAb,CAAd;;AAmBA,IAAIE,QAAQ,sCAAc,EAAd,CAAZ;;AAEA,IAAIC,QAAQ,wCAAoB,EAApB,EAAwB,KAAK,CAA7B,EAAgC,WAAhC,CAAZ;;AAEA,IAAIC,QAAQ,uCAAmB,EAAnB,EAAuB,KAAK,CAA5B,EAA+B,oCAAiB,EAAjB,CAA/B,CAAZ;;AAEA,IAAIC,aAAa,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACzC,MAAIC,OAAOD,KAAKC,IAAhB;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAAA,MAEIC,OAAOH,KAAKG,IAFhB;AAAA,MAGIb,cAAcU,KAAKV,WAHvB;AAAA,MAIIK,iBAAiBK,KAAKL,cAJ1B;AAAA,MAKIS,iBAAiBJ,KAAKI,cAL1B;AAAA,MAMIV,gBAAgBM,KAAKN,aANzB;AAOA,SAAO,qCAAa;AAClBS,UAAMA,IADY;AAElBE,aAASX;AAFS,GAAb,EAGJ,KAAK,CAHD,EAGIO,QAAQ,uCAAe;AAChCA,UAAMA;AAD0B,GAAf,CAHZ,EAKH,mCAAe,EAAf,EAAmB,KAAK,CAAxB,EAA2B,mCAAe;AAC5CK,aAAShB;AADmC,GAAf,EAE5B,KAAK,CAFuB,EAEpB,OAFoB,CAA3B,EAEiB,mCAAe;AAClCgB,aAASX;AADyB,GAAf,EAElB,KAAK,CAFa,EAEV,UAFU,CAFjB,CALG,EASkBC,KATlB,EASyB,mCAAe;AAC7CW,eAAWV;AADkC,GAAf,EAE7B,KAAK,CAFwB,EAErBK,UAAUM,GAAV,CAAc,UAAUC,QAAV,EAAoB;AAC3C,WAAO,mCAAe;AACpBH,eAAS,SAASA,OAAT,CAAiBd,KAAjB,EAAwB;AAC/BA,cAAMC,cAAN;AACAW,uBAAeK,SAASC,GAAxB;AACAhB;AACD;AALmB,KAAf,EAMJe,SAASC,GANL,EAMUD,SAASE,MAAT,IAAmBb,KAN7B,EAMoC,uCAAmB;AAC5Dc,eAASH,SAASI;AAD0C,KAAnB,CANpC,CAAP;AASD,GAVU,CAFqB,CATzB,CAAP;AAsBD,CA9BD;;AAgCAd,WAAWe,SAAX,GAAuBC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC7DhB,QAAM,oBAAUiB,MAD6C;AAE7DhB,aAAW,oBAAUiB,OAAV,CAAkB,oBAAUC,KAAV,CAAgB,EAAEP,MAAM,oBAAUQ,MAAV,CAAiBC,UAAzB,EAAhB,CAAlB,CAFkD;AAG7DnB,QAAM,oBAAUoB,IAAV,CAAeD,UAHwC;AAI7DhC,eAAa,oBAAUkC,IAAV,CAAeF,UAJiC;AAK7D3B,kBAAgB,oBAAU6B,IAAV,CAAeF,UAL8B;AAM7DlB,kBAAgB,oBAAUoB,IAAV,CAAeF,UAN8B;AAO7D5B,iBAAe,oBAAU8B,IAAV,CAAeF;AAP+B,CAAxC,GAQnB,EARJ;;kBAUejC,QAAQU,UAAR,C;AACf","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withHandlers from 'recompose/withHandlers';\nimport Drawer from 'material-ui/Drawer';\nimport { MenuList, MenuItem } from 'material-ui/Menu';\nimport { ListItemIcon, ListSubheader, ListItemText } from 'material-ui/List';\nimport Divider from 'material-ui/Divider';\nimport ActiveIcon from 'material-ui-icons/Check';\nimport UserCard from '../../../components/UserCard/UserCard';\n\nconst enhance = withHandlers({\n  // Prevent defaults for react-tap-event-plugin:\n  // https://github.com/zilverline/react-tap-event-plugin/issues/77\n  onShowAbout: props => (event) => {\n    event.preventDefault();\n    props.onShowAbout();\n    props.onDrawerClose();\n  },\n  onShowSettings: props => (event) => {\n    event.preventDefault();\n    props.onShowSettings();\n    props.onDrawerClose();\n  },\n});\n\nconst DrawerMenu = ({\n  user,\n  playlists,\n  open,\n  onShowAbout,\n  onShowSettings,\n  onShowPlaylist,\n  onDrawerClose,\n}) => (\n  <Drawer open={open} onClose={onDrawerClose}>\n    {user && <UserCard user={user} />}\n    <MenuList>\n      <MenuItem onClick={onShowAbout}>About</MenuItem>\n      <MenuItem onClick={onShowSettings}>Settings</MenuItem>\n    </MenuList>\n    <Divider />\n    <MenuList\n      subheader={<ListSubheader>Playlists</ListSubheader>}\n    >\n      {playlists.map(playlist => (\n        <MenuItem\n          key={playlist._id}\n          onClick={(event) => {\n            event.preventDefault();\n            onShowPlaylist(playlist._id);\n            onDrawerClose();\n          }}\n        >\n          {playlist.active && (\n            <ListItemIcon>\n              <ActiveIcon />\n            </ListItemIcon>\n          )}\n          <ListItemText primary={playlist.name} />\n        </MenuItem>\n      ))}\n    </MenuList>\n  </Drawer>\n);\n\nDrawerMenu.propTypes = {\n  user: PropTypes.object,\n  playlists: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string.isRequired })),\n  open: PropTypes.bool.isRequired,\n  onShowAbout: PropTypes.func.isRequired,\n  onShowSettings: PropTypes.func.isRequired,\n  onShowPlaylist: PropTypes.func.isRequired,\n  onDrawerClose: PropTypes.func.isRequired,\n};\n\nexport default enhance(DrawerMenu);\n"]}