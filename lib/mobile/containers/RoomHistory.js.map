{"version":3,"sources":["mobile/containers/RoomHistory.js"],"names":["selectionOrOne","media","selection","isSelected","get","map","item","mapStateToProps","roomHistoryWithVotesSelector","onOpenAddMediaMenu","position","mapDispatchToProps","dispatch","onOpenPreviewMediaDialog","openPreviewMediaDialog","OverlayFromTop","direction","Overlay","RoomHistory"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA,iBAAiB,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,SAA/B,EAA0C;AAC7D;AACA,MAAIA,UAAUC,UAAV,CAAqBF,KAArB,CAAJ,EAAiC;AAC/B,WAAOC,UAAUE,GAAV,GAAgBC,GAAhB,CAAoB,UAAUC,IAAV,EAAgB;AACzC,aAAOA,KAAKL,KAAZ;AACD,KAFM,CAAP;AAGD;;AAED,SAAO,CAACA,MAAMA,KAAP,CAAP;AACD,CATD;;AAWA,IAAIM,kBAAkB,wCAAyB;AAC7CN,SAAOO;AADsC,CAAzB,CAAtB;;AAIA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsCT,KAAtC,EAA6CC,SAA7C,EAAwD;AAC/E,SAAO,0CAAaF,eAAeC,KAAf,EAAsBC,SAAtB,CAAb,EAA+CQ,QAA/C,CAAP;AACD,CAFD;;AAIA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBH,wBAAoBA,kBADI;AAExBI,8BAA0BC;AAFF,GAAnB,EAGJF,QAHI,CAAP;AAID,CALD;;AAOA,IAAIG,iBAAiB,wBAAU;AAC7BC,aAAW;AADkB,CAAV,EAElBC,gBAFkB,CAArB;;eAGe,yBAAQV,eAAR,EAAyBI,kBAAzB,EAA6C,mBAAKI,cAAL,EAAqBG,oBAArB,CAA7C,C,EACf","file":"RoomHistory.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport nest from 'recompose/nest';\nimport withProps from 'recompose/withProps';\nimport { openPreviewMediaDialog } from '../../actions/DialogActionCreators';\nimport { addMediaMenu } from '../../actions/PlaylistActionCreators';\nimport { roomHistoryWithVotesSelector } from '../../selectors/roomHistorySelectors';\nimport Overlay from '../../components/Overlay';\nimport RoomHistory from '../components/RoomHistory';\n\nconst selectionOrOne = (media, selection) => {\n  // History entries store the played media on their `.media` property\n  if (selection.isSelected(media)) {\n    return selection.get().map(item => item.media);\n  }\n  return [media.media];\n};\n\nconst mapStateToProps = createStructuredSelector({\n  media: roomHistoryWithVotesSelector,\n});\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onOpenAddMediaMenu,\n  onOpenPreviewMediaDialog: openPreviewMediaDialog,\n}, dispatch);\n\nconst OverlayFromTop = withProps({ direction: 'top' })(Overlay);\nexport default connect(mapStateToProps, mapDispatchToProps)(nest(OverlayFromTop, RoomHistory));\n"]}