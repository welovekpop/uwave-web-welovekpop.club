{"version":3,"sources":["mobile/containers/PlaylistPanel.js"],"names":["mapStateToProps","playlist","media","loading","isFiltered","selectionOrOne","selection","isSelected","get","onOpenAddMediaMenu","position","onRemoveFromPlaylist","onMoveMedia","opts","onMoveToFirst","at","onEditMedia","onLoadPlaylistPage","_ref","page","_id","mapDispatchToProps","dispatch","mergeProps","state","_ref2","props","onShufflePlaylist","bind","onActivatePlaylist","onRenamePlaylist","onDeletePlaylist","onNotDeletable","onOpenPreviewMediaDialog","onFilterPlaylistItems"],"mappings":"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","file":"PlaylistPanel.js","sourcesContent":["import { bindActionCreators } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport {\n  selectedPlaylistSelector,\n  filteredSelectedPlaylistItemsSelector,\n  isSelectedPlaylistLoadingSelector,\n  isFilteredSelector,\n} from '../../selectors/playlistSelectors';\n\nimport { openPreviewMediaDialog } from '../../actions/DialogActionCreators';\nimport {\n  addMediaMenu,\n  editMedia,\n  moveMedia,\n  removeMedia,\n  filterPlaylistItems,\n  renamePlaylist,\n  deletePlaylist,\n  cannotDeleteActivePlaylist,\n  shufflePlaylist,\n  activatePlaylist,\n  loadPlaylist,\n  loadFilteredPlaylistItems,\n} from '../../actions/PlaylistActionCreators';\n\nimport PlaylistPanel from '../components/PlaylistManager/PlaylistPanel';\n\nconst mapStateToProps = createStructuredSelector({\n  playlist: selectedPlaylistSelector,\n  media: filteredSelectedPlaylistItemsSelector,\n  loading: isSelectedPlaylistLoadingSelector,\n  isFiltered: isFilteredSelector,\n});\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nconst onOpenAddMediaMenu = (position, media, selection) =>\n  addMediaMenu(selectionOrOne(media, selection), position);\nconst onRemoveFromPlaylist = playlist => (media, selection) =>\n  removeMedia(playlist, selectionOrOne(media, selection));\nconst onMoveMedia = playlist => (media, opts) =>\n  moveMedia(playlist, media, opts);\nconst onMoveToFirst = playlist => (media, selection) =>\n  moveMedia(playlist, selectionOrOne(media, selection), { at: 'start' });\nconst onEditMedia = playlist => media =>\n  editMedia(playlist, media);\nconst onLoadPlaylistPage = ({ isFiltered, playlist }) => page => (\n  isFiltered ? loadFilteredPlaylistItems(playlist._id, page) :\n    loadPlaylist(playlist._id, page)\n);\n\n// Most of the playlist-related action creators need to know which playlist to\n// use, i.e. need to have a reference to the selected playlist. The selected\n// playlist is picked out in `mapStateToProps`, but we can't access its result\n// in `mapDispatchToProps` yet. Instead, `mapDispatchToProps` passes the\n// `dispatch` function to the `mergeProps` function below, and then that\n// configures the action creators.\n// TODO Maybe it's better to have versions of these action creators that work on\n// the selected playlist by default? using redux-thunk.\nconst mapDispatchToProps = dispatch => ({ dispatch });\n\nconst mergeProps = (state, { dispatch }, props) => ({\n  ...props,\n  ...state,\n  ...bindActionCreators({\n    onShufflePlaylist: shufflePlaylist.bind(null, state.playlist._id),\n    onActivatePlaylist: activatePlaylist.bind(null, state.playlist._id),\n    onRenamePlaylist: renamePlaylist.bind(null, state.playlist._id),\n    onDeletePlaylist: deletePlaylist.bind(null, state.playlist._id),\n    onNotDeletable: cannotDeleteActivePlaylist,\n\n    onOpenAddMediaMenu,\n    onOpenPreviewMediaDialog: openPreviewMediaDialog,\n    onMoveToFirst: onMoveToFirst(state.playlist._id),\n    onMoveMedia: onMoveMedia(state.playlist._id),\n    onEditMedia: onEditMedia(state.playlist._id),\n    onRemoveFromPlaylist: onRemoveFromPlaylist(state.playlist._id),\n    onLoadPlaylistPage: onLoadPlaylistPage(state),\n    onFilterPlaylistItems: filterPlaylistItems.bind(null, state.playlist._id),\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(PlaylistPanel);\n"]}