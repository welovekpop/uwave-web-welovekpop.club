{"version":3,"sources":["sources/youtube/PlayerEmbed.js"],"names":["YouTubePlayerEmbed","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleYTPause","event","props","controllable","active","target","playVideo","refPlayer","player","_proto","prototype","render","_props","media","seek","volume","React","createElement","YouTube","ref","video","sourceID","width","height","autoplay","modestBranding","playbackRate","controls","showRelatedVideos","showInfo","annotations","startSeconds","start","endSeconds","end","duration","onPause","Component","defaultProps","propTypes","process","env","NODE_ENV","PropTypes","bool","isRequired","object","number"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAIA;AACJ;AACA,UAAUC,gBAAV,EAA4B;AAC1B,+BAAeD,kBAAf,EAAmCC,gBAAnC;;AAEA,WAASD,kBAAT,GAA8B;AAC5B,QAAIE,KAAJ,EAAWC,KAAX;;AAEA,SAAK,IAAIC,OAAOC,UAAUC,MAArB,EAA6BC,OAAO,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,OAAO,CAAjE,EAAoEA,OAAOL,IAA3E,EAAiFK,MAAjF,EAAyF;AACvFF,WAAKE,IAAL,IAAaJ,UAAUI,IAAV,CAAb;AACD;;AAED,WAAO,CAACP,QAAQC,QAAQF,iBAAiBS,IAAjB,CAAsBC,KAAtB,CAA4BV,gBAA5B,EAA8C,CAAC,IAAD,EAAOW,MAAP,CAAcL,IAAd,CAA9C,KAAsE,IAAtF,EAA4FJ,MAAMU,aAAN,GAAsB,UAAUC,KAAV,EAAiB;AACzI,UAAI,CAACX,MAAMY,KAAN,CAAYC,YAAb,IAA6Bb,MAAMY,KAAN,CAAYE,MAA7C,EAAqD;AACnDH,cAAMI,MAAN,CAAaC,SAAb;AACD;AACF,KAJO,EAILhB,MAAMiB,SAAN,GAAkB,UAAUC,MAAV,EAAkB;AACrClB,YAAMkB,MAAN,GAAeA,MAAf;AACD,KANO,EAMLnB,KANI,KAMM,qCAAuBC,KAAvB,CANb;AAOD;;AAED,MAAImB,SAAStB,mBAAmBuB,SAAhC;;AAEAD,SAAOE,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,SAAS,KAAKV,KAAlB;AAAA,QACIE,SAASQ,OAAOR,MADpB;AAAA,QAEIS,QAAQD,OAAOC,KAFnB;AAAA,QAGIC,OAAOF,OAAOE,IAHlB;AAAA,QAIIC,SAASH,OAAOG,MAJpB;AAAA,QAKIZ,eAAeS,OAAOT,YAL1B;AAMA,WAAOa,eAAMC,aAAN,CAAoBC,qBAApB,EAA6B;AAClCC,WAAK,KAAKZ,SADwB;AAElCa,aAAOhB,SAASS,MAAMQ,QAAf,GAA0B,IAFC;AAGlCC,aAAO,MAH2B;AAIlCC,cAAQ,MAJ0B;AAKlCC,gBAAU,IALwB;AAMlCC,sBAAgB,IANkB;AAOlCV,cAAQA,SAAS,GAPiB;AAQlCW,oBAAc,CARoB;AASlCC,gBAAUxB,YATwB;AAUlCyB,yBAAmB,KAVe;AAWlCC,gBAAU,KAXwB;AAYlCC,mBAAa,KAZqB;AAalCC,oBAAc,CAACjB,QAAQ,CAAT,KAAeD,MAAMmB,KAAN,IAAe,CAA9B,CAboB;AAclCC,kBAAYpB,MAAMqB,GAAN,IAAarB,MAAMsB,QAdG;AAelCC,eAAS,KAAKpC;AAfoB,KAA7B,CAAP;AAiBD,GAxBD;;AA0BA,SAAOb,kBAAP;AACD,CAhDD,CAgDE6B,eAAMqB,SAhDR,CAFA;;;AAoDAlD,mBAAmBmD,YAAnB,GAAkC;AAChCnC,gBAAc;AADkB,CAAlC;AAIAhB,mBAAmBoD,SAAnB,GAA+BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACrEtC,UAAQuC,mBAAUC,IAAV,CAAeC,UAD8C;AAErEhC,SAAO8B,mBAAUG,MAFoD;AAGrEhC,QAAM6B,mBAAUI,MAHqD;AAIrEhC,UAAQ4B,mBAAUI,MAJmD;AAKrE5C,gBAAcwC,mBAAUC;AAL6C,CAAxC,GAM3B,EANJ,C,CAOA","file":"PlayerEmbed.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport YouTube from '@u-wave/react-youtube';\n\nexport default class YouTubePlayerEmbed extends React.Component {\n  static propTypes = {\n    active: PropTypes.bool.isRequired,\n    media: PropTypes.object,\n    seek: PropTypes.number,\n    volume: PropTypes.number,\n    controllable: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    controllable: false,\n  };\n\n  handleYTPause = (event) => {\n    if (!this.props.controllable && this.props.active) {\n      event.target.playVideo();\n    }\n  };\n\n  refPlayer = (player) => {\n    this.player = player;\n  };\n\n  render() {\n    const {\n      active, media, seek, volume, controllable,\n    } = this.props;\n\n    return (\n      <YouTube\n        ref={this.refPlayer}\n        video={active ? media.sourceID : null}\n        width=\"100%\"\n        height=\"100%\"\n        autoplay\n        modestBranding\n        volume={volume / 100}\n        playbackRate={1}\n        controls={controllable}\n        showRelatedVideos={false}\n        showInfo={false}\n        annotations={false}\n        startSeconds={(seek || 0) + (media.start || 0)}\n        endSeconds={media.end || media.duration}\n        onPause={this.handleYTPause}\n      />\n    );\n  }\n}\n"]}