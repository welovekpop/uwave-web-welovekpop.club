{"version":3,"sources":["sources/youtube/ImportPanel.js"],"names":["mapStateToProps","mapDispatchToProps","dispatch","onImportPlaylist","onOpenAddMediaMenu","YouTubeImportPanel","_ref","type","importingState","props","createElement","propTypes","process","env","NODE_ENV","oneOf","isRequired"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,kBAAkB,SAASA,eAAT,GAA2B;AAC/C,SAAO,EAAP;AACD,CAFD;AAGA,IAAIC,qBAAqB,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,+BAAmB;AACxBC,6CADwB;AAExBC;AAFwB,GAAnB,EAGJF,QAHI,CAAP;AAID,CALD;;AAOA,IAAIG,qBAAqB,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACzD,MAAIC,OAAOD,KAAKC,IAAhB;AAAA,MACIC,iBAAiBF,KAAKE,cAD1B;AAAA,MAEIC,QAAQ,uCAAyBH,IAAzB,EAA+B,CAAC,MAAD,EAAS,gBAAT,CAA/B,CAFZ;;AAIA,MAAIE,wCAAJ,EAA+B;AAC7B,QAAID,4BAAJ,EAAuB;AACrB,aAAO,gBAAMG,aAAN,0BAAmCD,KAAnC,CAAP;AACD;AACD,WAAO,gBAAMC,aAAN,yBAAkCD,KAAlC,CAAP;AACD;AACD,SAAO,gBAAMC,aAAN,yBAAkCD,KAAlC,CAAP;AACD,CAZD;;AAcAJ,mBAAmBM,SAAnB,GAA+BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACrEP,QAAM,oBAAUQ,KAAV,CAAgB,yCAAhB,EAAqCC,UAD0B;AAErER,kBAAgB,oBAAUO,KAAV,CAAgB,oEAAhB;AAFqD,CAAxC,GAG3B,EAHJ;;kBAKe,yBAAQf,eAAR,EAAyBC,kBAAzB,EAA6CI,kBAA7C,C;AACf","file":"ImportPanel.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { IDLE, LOADING, LOADED } from '../../constants/LoadingStates';\n\nimport {\n  addMediaMenu as openAddMediaMenu,\n} from '../../actions/PlaylistActionCreators';\nimport { PLAYLIST, CHANNEL } from './constants';\nimport { importPlaylist } from './actions';\nimport LoadingPanel from './LoadingPanel';\nimport ChannelPanel from './ChannelPanel';\nimport PlaylistPanel from './PlaylistPanel';\n\nconst mapStateToProps = () => ({});\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onImportPlaylist: importPlaylist,\n  onOpenAddMediaMenu: openAddMediaMenu,\n}, dispatch);\n\nconst YouTubeImportPanel = ({ type, importingState, ...props }) => {\n  if (importingState === LOADED) {\n    if (type === PLAYLIST) {\n      return <PlaylistPanel {...props} />;\n    }\n    return <ChannelPanel {...props} />;\n  }\n  return <LoadingPanel {...props} />;\n};\n\nYouTubeImportPanel.propTypes = {\n  type: PropTypes.oneOf([PLAYLIST, CHANNEL]).isRequired,\n  importingState: PropTypes.oneOf([IDLE, LOADING, LOADED]),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YouTubeImportPanel);\n"]}