{"version":3,"sources":["sources/youtube/actions.js"],"names":["getImportablePlaylist","importPlaylist","getChannelPlaylists","getImportablePlaylistStart","url","type","payload","getImportablePlaylistComplete","playlist","items","qs","onStart","onComplete","_ref","onError","error","meta","importPlaylistStart","id","name","dispatch","importPlaylistComplete","getChannelPlaylistsStart","getChannelPlaylistsComplete","channel","playlists","_ref2"],"mappings":"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","file":"actions.js","sourcesContent":["import { get, post } from '../../actions/RequestActionCreators';\n\nimport {\n  createPlaylistStart,\n  createPlaylistComplete\n} from '../../actions/PlaylistActionCreators';\n\nimport {\n  GET_IMPORTABLE_PLAYLIST_START,\n  GET_IMPORTABLE_PLAYLIST_COMPLETE,\n  GET_CHANNEL_PLAYLISTS_START,\n  GET_CHANNEL_PLAYLISTS_COMPLETE,\n  IMPORT_PLAYLIST_START,\n  IMPORT_PLAYLIST_COMPLETE\n} from './constants';\n\nfunction getImportablePlaylistStart(url) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_START,\n    payload: { url }\n  };\n}\n\nfunction getImportablePlaylistComplete(url, playlist, items) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n    payload: { url, playlist, items }\n  };\n}\n\nexport function getImportablePlaylist(url) {\n  return get('/import/youtube/playlist', {\n    qs: { url },\n    onStart: () => getImportablePlaylistStart(url),\n    onComplete: ({ playlist, items }) =>\n      getImportablePlaylistComplete(url, playlist, items),\n    onError: error => ({\n      type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url }\n    })\n  });\n}\n\nfunction importPlaylistStart(id, name) {\n  return (dispatch) => {\n    dispatch(createPlaylistStart({ name }, `yt:${id}`));\n    dispatch({\n      type: IMPORT_PLAYLIST_START,\n      payload: { id, name }\n    });\n  };\n}\n\nfunction importPlaylistComplete(id, playlist) {\n  return (dispatch) => {\n    dispatch({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      payload: { playlist },\n      meta: { id }\n    });\n    dispatch(createPlaylistComplete(playlist, `yt:${id}`));\n  };\n}\n\nexport function importPlaylist(id, name) {\n  return post('/import/youtube/importplaylist', { id, name }, {\n    onStart: () => importPlaylistStart(id, name),\n    onComplete: playlist => importPlaylistComplete(id, playlist),\n    onError: error => ({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { id }\n    })\n  });\n}\n\nfunction getChannelPlaylistsStart(url) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_START,\n    payload: { url }\n  };\n}\n\nfunction getChannelPlaylistsComplete(channel, playlists) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n    payload: {\n      channel,\n      playlists\n    }\n  };\n}\n\nexport function getChannelPlaylists(url) {\n  return get('/import/youtube/channel', {\n    qs: { url },\n    onStart: () => getChannelPlaylistsStart(url),\n    onComplete: ({ channel, playlists }) =>\n      getChannelPlaylistsComplete(channel, playlists),\n    onError: error => ({\n      type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url }\n    })\n  });\n}\n"]}