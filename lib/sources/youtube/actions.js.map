{"version":3,"sources":["sources/youtube/actions.js"],"names":["getImportablePlaylistStart","url","type","GET_IMPORTABLE_PLAYLIST_START","payload","getImportablePlaylistComplete","playlist","items","GET_IMPORTABLE_PLAYLIST_COMPLETE","getImportablePlaylist","qs","onStart","onComplete","_ref","onError","error","meta","importPlaylistStart","id","name","dispatch","IMPORT_PLAYLIST_START","importPlaylistComplete","IMPORT_PLAYLIST_COMPLETE","importPlaylist","getChannelPlaylistsStart","GET_CHANNEL_PLAYLISTS_START","getChannelPlaylistsComplete","channel","playlists","GET_CHANNEL_PLAYLISTS_COMPLETE","getChannelPlaylists","_ref2"],"mappings":"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","file":"actions.js","sourcesContent":["import { get, post } from '../../actions/RequestActionCreators';\n\nimport {\n  createPlaylistStart,\n  createPlaylistComplete,\n} from '../../actions/PlaylistActionCreators';\n\nimport {\n  GET_IMPORTABLE_PLAYLIST_START,\n  GET_IMPORTABLE_PLAYLIST_COMPLETE,\n  GET_CHANNEL_PLAYLISTS_START,\n  GET_CHANNEL_PLAYLISTS_COMPLETE,\n  IMPORT_PLAYLIST_START,\n  IMPORT_PLAYLIST_COMPLETE,\n} from './constants';\n\nfunction getImportablePlaylistStart(url) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_START,\n    payload: { url },\n  };\n}\n\nfunction getImportablePlaylistComplete(url, playlist, items) {\n  return {\n    type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n    payload: { url, playlist, items },\n  };\n}\n\nexport function getImportablePlaylist(url) {\n  return get('/import/youtube/playlist', {\n    qs: { url },\n    onStart: () => getImportablePlaylistStart(url),\n    onComplete: ({ playlist, items }) =>\n      getImportablePlaylistComplete(url, playlist, items),\n    onError: error => ({\n      type: GET_IMPORTABLE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url },\n    }),\n  });\n}\n\nfunction importPlaylistStart(id, name) {\n  return (dispatch) => {\n    dispatch(createPlaylistStart({ name }, `yt:${id}`));\n    dispatch({\n      type: IMPORT_PLAYLIST_START,\n      payload: { id, name },\n    });\n  };\n}\n\nfunction importPlaylistComplete(id, playlist) {\n  return (dispatch) => {\n    dispatch({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      payload: { playlist },\n      meta: { id },\n    });\n    dispatch(createPlaylistComplete(playlist, `yt:${id}`));\n  };\n}\n\nexport function importPlaylist(id, name) {\n  return post('/import/youtube/importplaylist', { id, name }, {\n    onStart: () => importPlaylistStart(id, name),\n    onComplete: playlist => importPlaylistComplete(id, playlist),\n    onError: error => ({\n      type: IMPORT_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { id },\n    }),\n  });\n}\n\nfunction getChannelPlaylistsStart(url) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_START,\n    payload: { url },\n  };\n}\n\nfunction getChannelPlaylistsComplete(channel, playlists) {\n  return {\n    type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n    payload: {\n      channel,\n      playlists,\n    },\n  };\n}\n\nexport function getChannelPlaylists(url) {\n  return get('/import/youtube/channel', {\n    qs: { url },\n    onStart: () => getChannelPlaylistsStart(url),\n    onComplete: ({ channel, playlists }) =>\n      getChannelPlaylistsComplete(channel, playlists),\n    onError: error => ({\n      type: GET_CHANNEL_PLAYLISTS_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { url },\n    }),\n  });\n}\n"]}