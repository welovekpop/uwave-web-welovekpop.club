{"version":3,"sources":["sources/youtube/PlaylistPanel.js"],"names":["selectionOrOne","media","selection","isSelected","get","_ref","color","hoverColor","YouTubeImportPlaylistPanel","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","handleImportFull","_this$props","props","importingPlaylist","onImportPlaylist","sourceID","name","prototype","render","_props","importingPlaylistItems","onOpenAddMediaMenu","onClosePanel","className","onClick","tooltip","tooltipPosition","makeActions","onAdd","position","Component","propTypes","process","env","NODE_ENV","shape","string","isRequired","arrayOf","object","func"],"mappings":"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","file":"PlaylistPanel.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from 'material-ui/IconButton';\nimport ImportIcon from 'material-ui/svg-icons/av/playlist-add';\nimport MediaList from '../../components/MediaList';\nimport AddToPlaylistAction from '../../components/MediaList/Actions/AddToPlaylist';\nimport ImportPanelHeader from '../../components/PlaylistManager/Import/ImportPanelHeader';\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [ media ];\n};\n\nexport default class YouTubeImportPlaylistPanel extends React.Component {\n  static propTypes = {\n    importingPlaylist: PropTypes.shape({\n      sourceID: PropTypes.string,\n      name: PropTypes.string\n    }).isRequired,\n    importingPlaylistItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    onImportPlaylist: PropTypes.func.isRequired,\n    onOpenAddMediaMenu: PropTypes.func.isRequired,\n    onClosePanel: PropTypes.func.isRequired\n  };\n\n  handleImportFull = () => {\n    const {\n      importingPlaylist,\n      onImportPlaylist\n    } = this.props;\n    onImportPlaylist(importingPlaylist.sourceID, importingPlaylist.name);\n  };\n\n  render() {\n    const {\n      importingPlaylist,\n      importingPlaylistItems,\n      onOpenAddMediaMenu,\n      onClosePanel\n    } = this.props;\n\n    return (\n      <div className=\"ImportPanel src-youtube-PlaylistPanel\">\n        <ImportPanelHeader onClosePanel={onClosePanel}>\n          <div className=\"src-youtube-PlaylistPanel-header\">\n            <div className=\"src-youtube-PlaylistPanel-name\">\n              {importingPlaylist.name}\n            </div>\n            <IconButton\n              onClick={this.handleImportFull}\n              tooltip={`Import All (${importingPlaylistItems.length})`}\n              tooltipPosition=\"top-center\"\n            >\n              <ImportIcon color=\"#555\" hoverColor=\"#fff\" />\n            </IconButton>\n          </div>\n        </ImportPanelHeader>\n        <MediaList\n          className=\"ImportPanel-body\"\n          media={importingPlaylistItems}\n          makeActions={(media, selection) => [\n            <AddToPlaylistAction\n              key=\"add\"\n              onAdd={position => onOpenAddMediaMenu(selectionOrOne(media, selection), position)}\n            />\n          ]}\n        />\n      </div>\n    );\n  }\n}\n"]}