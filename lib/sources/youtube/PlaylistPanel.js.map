{"version":3,"sources":["sources/youtube/PlaylistPanel.js"],"names":["selectionOrOne","media","selection","isSelected","get","_ref","ImportIcon","className","YouTubeImportPlaylistPanel","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleImportFull","_this$props","props","importingPlaylist","onImportPlaylist","sourceID","name","_proto","prototype","render","_props","importingPlaylistItems","onOpenAddMediaMenu","onClosePanel","ImportPanelHeader","Tooltip","title","placement","IconButton","onClick","MediaList","makeActions","React","Fragment","AddToPlaylistAction","onAdd","position","Component","propTypes","process","env","NODE_ENV","PropTypes","shape","string","isRequired","arrayOf","object","func"],"mappings":"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","file":"PlaylistPanel.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport ImportIcon from '@material-ui/icons/PlaylistAdd';\nimport MediaList from '../../components/MediaList';\nimport AddToPlaylistAction from '../../components/MediaList/Actions/AddToPlaylist';\nimport ImportPanelHeader from '../../components/PlaylistManager/Import/ImportPanelHeader';\n\nconst selectionOrOne = (media, selection) => {\n  if (selection.isSelected(media)) {\n    return selection.get();\n  }\n  return [media];\n};\n\nexport default class YouTubeImportPlaylistPanel extends React.Component {\n  static propTypes = {\n    importingPlaylist: PropTypes.shape({\n      sourceID: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n    importingPlaylistItems: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n    onImportPlaylist: PropTypes.func.isRequired,\n    onOpenAddMediaMenu: PropTypes.func.isRequired,\n    onClosePanel: PropTypes.func.isRequired,\n  };\n\n  handleImportFull = () => {\n    const {\n      importingPlaylist,\n      onImportPlaylist,\n    } = this.props;\n    onImportPlaylist(importingPlaylist.sourceID, importingPlaylist.name);\n  };\n\n  render() {\n    const {\n      importingPlaylist,\n      importingPlaylistItems,\n      onOpenAddMediaMenu,\n      onClosePanel,\n    } = this.props;\n\n    return (\n      <div className=\"ImportPanel src-youtube-PlaylistPanel\">\n        <ImportPanelHeader onClosePanel={onClosePanel}>\n          <div className=\"src-youtube-PlaylistPanel-header\">\n            <div className=\"src-youtube-PlaylistPanel-name\">\n              {importingPlaylist.name}\n            </div>\n            <Tooltip title={`Import All (${importingPlaylistItems.length})`} placement=\"top\">\n              <IconButton onClick={this.handleImportFull}>\n                <ImportIcon className=\"src-youtube-PlaylistPanel-importIcon\" />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </ImportPanelHeader>\n        <MediaList\n          className=\"ImportPanel-body\"\n          media={importingPlaylistItems}\n          makeActions={(media, selection) => (\n            <React.Fragment>\n              <AddToPlaylistAction\n                key=\"add\"\n                onAdd={position => onOpenAddMediaMenu(selectionOrOne(media, selection), position)}\n              />\n            </React.Fragment>\n          )}\n        />\n      </div>\n    );\n  }\n}\n"]}