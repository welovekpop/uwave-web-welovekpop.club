{"version":3,"sources":["actions/VoteActionCreators.js"],"names":["setVoteStats","voteStats","type","LOAD_VOTES","payload","favorited","_ref","userID","historyID","FAVORITE","receiveVote","_ref2","vote","UPVOTE","DOWNVOTE","doUpvote","DO_UPVOTE","doDownvote","DO_DOWNVOTE","openFavoriteMenu","position","dispatch","getState","playlists","OPEN_ADD_MEDIA_MENU","meta","favoriteMediaStart","playlistID","DO_FAVORITE_START","favoriteMediaComplete","changes","DO_FAVORITE_COMPLETE","added","map","flattenPlaylistItem","newSize","playlistSize","favoriteMedia","playlist","_id","onStart","onComplete","res","onError","error"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACO,SAASA,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAO;AACLC,UAAMC,uBADD;AAELC,aAASH;AAFJ,GAAP;AAID;;AACM,SAASI,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAIC,SAASD,KAAKC,MAAlB;AAAA,MACIC,YAAYF,KAAKE,SADrB;AAEA,SAAO;AACLN,UAAMO,qBADD;AAELL,aAAS;AACPG,cAAQA,MADD;AAEPC,iBAAWA;AAFJ;AAFJ,GAAP;AAOD;;AACM,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAIJ,SAASI,MAAMJ,MAAnB;AAAA,MACIK,OAAOD,MAAMC,IADjB;AAEA,MAAIV,OAAOU,OAAO,CAAP,GAAWC,mBAAX,GAAoBC,qBAA/B;AACA,SAAO;AACLZ,UAAMA,IADD;AAELE,aAAS;AACPG,cAAQA;AADD;AAFJ,GAAP;AAMD;;AACM,SAASQ,QAAT,GAAoB;AACzB,SAAO;AACLb,UAAMc;AADD,GAAP;AAGD;;AACM,SAASC,UAAT,GAAsB;AAC3B,SAAO;AACLf,UAAMgB;AADD,GAAP;AAGD;;AACM,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACzC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACnC,QAAIC,YAAY,0CAAkBD,UAAlB,CAAhB;AACA,QAAId,YAAY,uCAAkBc,UAAlB,CAAhB;AACAD,aAAS;AACPnB,YAAMsB,gCADC;AAEPpB,eAAS;AACPI,mBAAWA;AADJ,OAFF;AAKPiB,YAAM;AACJF,mBAAWA,SADP;AAEJH,kBAAUA,QAFN;AAGJlB,cAAM;AAHF;AALC,KAAT;AAWD,GAdD;AAeD;;AACM,SAASwB,kBAAT,CAA4BC,UAA5B,EAAwCnB,SAAxC,EAAmD;AACxD,SAAO;AACLN,UAAM0B,8BADD;AAELxB,aAAS;AACPI,iBAAWA,SADJ;AAEPmB,kBAAYA;AAFL;AAFJ,GAAP;AAOD;;AACM,SAASE,qBAAT,CAA+BF,UAA/B,EAA2CnB,SAA3C,EAAsDsB,OAAtD,EAA+D;AACpE,SAAO;AACL5B,UAAM6B,iCADD;AAEL3B,aAAS;AACPI,iBAAWA,SADJ;AAEPmB,kBAAYA,UAFL;AAGPK,aAAOF,QAAQE,KAAR,CAAcC,GAAd,CAAkBC,2CAAlB,CAHA;AAIPC,eAASL,QAAQM;AAJV;AAFJ,GAAP;AASD;;AACM,SAASC,aAAT,CAAuBC,QAAvB,EAAiC9B,SAAjC,EAA4C;AACjD,MAAImB,aAAaW,SAASC,GAA1B;AACA,SAAO,iCAAK,iBAAL,EAAwB;AAC7B/B,eAAWA,SADkB;AAE7BmB,gBAAYA;AAFiB,GAAxB,EAGJ;AACDa,aAAS,SAASA,OAAT,GAAmB;AAC1B,aAAOd,mBAAmBC,UAAnB,EAA+BnB,SAA/B,CAAP;AACD,KAHA;AAIDiC,gBAAY,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACnC,aAAOb,sBAAsBF,UAAtB,EAAkCnB,SAAlC,EAA6C;AAClDwB,eAAO,kCAAoBU,GAApB,CAD2C;AAElDN,sBAAcM,IAAIjB,IAAJ,CAASW;AAF2B,OAA7C,CAAP;AAID,KATA;AAUDO,aAAS,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,aAAO;AACL1C,cAAM6B,iCADD;AAELa,eAAO,IAFF;AAGLxC,iBAASwC,KAHJ;AAILnB,cAAM;AACJjB,qBAAWA,SADP;AAEJmB,sBAAYA;AAFR;AAJD,OAAP;AASD;AApBA,GAHI,CAAP;AAyBD","file":"VoteActionCreators.js","sourcesContent":["import { post } from './RequestActionCreators';\nimport { historyIDSelector } from '../selectors/boothSelectors';\nimport { playlistsSelector } from '../selectors/playlistSelectors';\nimport {\n  OPEN_ADD_MEDIA_MENU,\n  LOAD_VOTES,\n  FAVORITE, UPVOTE, DOWNVOTE,\n  DO_FAVORITE_START, DO_FAVORITE_COMPLETE,\n  DO_UPVOTE, DO_DOWNVOTE,\n} from '../constants/ActionTypes';\nimport mergeIncludedModels from '../utils/mergeIncludedModels';\nimport { flattenPlaylistItem } from './PlaylistActionCreators';\n\nexport function setVoteStats(voteStats) {\n  return {\n    type: LOAD_VOTES,\n    payload: voteStats,\n  };\n}\n\nexport function favorited({ userID, historyID }) {\n  return {\n    type: FAVORITE,\n    payload: { userID, historyID },\n  };\n}\n\nexport function receiveVote({ userID, vote }) {\n  const type = vote > 0 ? UPVOTE : DOWNVOTE;\n  return {\n    type,\n    payload: { userID },\n  };\n}\n\nexport function doUpvote() {\n  return { type: DO_UPVOTE };\n}\n\nexport function doDownvote() {\n  return { type: DO_DOWNVOTE };\n}\n\nexport function openFavoriteMenu(position) {\n  return (dispatch, getState) => {\n    const playlists = playlistsSelector(getState());\n    const historyID = historyIDSelector(getState());\n    dispatch({\n      type: OPEN_ADD_MEDIA_MENU,\n      payload: { historyID },\n      meta: {\n        playlists,\n        position,\n        type: 'favorite',\n      },\n    });\n  };\n}\n\nexport function favoriteMediaStart(playlistID, historyID) {\n  return {\n    type: DO_FAVORITE_START,\n    payload: { historyID, playlistID },\n  };\n}\n\nexport function favoriteMediaComplete(playlistID, historyID, changes) {\n  return {\n    type: DO_FAVORITE_COMPLETE,\n    payload: {\n      historyID,\n      playlistID,\n      added: changes.added.map(flattenPlaylistItem),\n      newSize: changes.playlistSize,\n    },\n  };\n}\n\nexport function favoriteMedia(playlist, historyID) {\n  const playlistID = playlist._id;\n  return post('/booth/favorite', { historyID, playlistID }, {\n    onStart: () => favoriteMediaStart(playlistID, historyID),\n    onComplete: res =>\n      favoriteMediaComplete(playlistID, historyID, {\n        added: mergeIncludedModels(res),\n        playlistSize: res.meta.playlistSize,\n      }),\n    onError: error => ({\n      type: DO_FAVORITE_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { historyID, playlistID },\n    }),\n  });\n}\n"]}