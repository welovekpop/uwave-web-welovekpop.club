{"version":3,"sources":["actions/VoteActionCreators.js"],"names":["setVoteStats","favorited","receiveVote","doUpvote","doDownvote","openFavoriteMenu","favoriteMediaStart","favoriteMediaComplete","favoriteMedia","voteStats","type","payload","_ref","userID","historyID","_ref2","vote","position","dispatch","getState","playlists","meta","playlistID","changes","added","map","newSize","playlistSize","playlist","_id","onStart","onComplete","res","onError","error"],"mappings":"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","file":"VoteActionCreators.js","sourcesContent":["import { post } from './RequestActionCreators';\nimport { historyIDSelector } from '../selectors/boothSelectors';\nimport { playlistsSelector } from '../selectors/playlistSelectors';\n\nimport { OPEN_ADD_MEDIA_MENU } from '../constants/actionTypes/playlists';\nimport {\n  LOAD_VOTES,\n  FAVORITE, UPVOTE, DOWNVOTE,\n  DO_FAVORITE_START, DO_FAVORITE_COMPLETE,\n  DO_UPVOTE, DO_DOWNVOTE\n} from '../constants/actionTypes/votes';\nimport mergeIncludedModels from '../utils/mergeIncludedModels';\n\nimport { flattenPlaylistItem } from './PlaylistActionCreators';\n\nexport function setVoteStats(voteStats) {\n  return {\n    type: LOAD_VOTES,\n    payload: voteStats\n  };\n}\n\nexport function favorited({ userID, historyID }) {\n  return {\n    type: FAVORITE,\n    payload: { userID, historyID }\n  };\n}\n\nexport function receiveVote({ userID, vote }) {\n  const type = vote > 0 ? UPVOTE : DOWNVOTE;\n  return {\n    type,\n    payload: { userID }\n  };\n}\n\nexport function doUpvote() {\n  return { type: DO_UPVOTE };\n}\n\nexport function doDownvote() {\n  return { type: DO_DOWNVOTE };\n}\n\nexport function openFavoriteMenu(position) {\n  return (dispatch, getState) => {\n    const playlists = playlistsSelector(getState());\n    const historyID = historyIDSelector(getState());\n    dispatch({\n      type: OPEN_ADD_MEDIA_MENU,\n      payload: { historyID },\n      meta: {\n        playlists,\n        position,\n        type: 'favorite'\n      }\n    });\n  };\n}\n\nexport function favoriteMediaStart(playlistID, historyID) {\n  return {\n    type: DO_FAVORITE_START,\n    payload: { historyID, playlistID }\n  };\n}\n\nexport function favoriteMediaComplete(playlistID, historyID, changes) {\n  return {\n    type: DO_FAVORITE_COMPLETE,\n    payload: {\n      historyID,\n      playlistID,\n      added: changes.added.map(flattenPlaylistItem),\n      newSize: changes.playlistSize\n    }\n  };\n}\n\nexport function favoriteMedia(playlist, historyID) {\n  const playlistID = playlist._id;\n  return post('/booth/favorite', { historyID, playlistID }, {\n    onStart: () => favoriteMediaStart(playlistID, historyID),\n    onComplete: res =>\n      favoriteMediaComplete(playlistID, historyID, {\n        added: mergeIncludedModels(res),\n        playlistSize: res.meta.playlistSize\n      }),\n    onError: error => ({\n      type: DO_FAVORITE_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { historyID, playlistID }\n    })\n  });\n}\n"]}