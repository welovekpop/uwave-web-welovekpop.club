{"version":3,"sources":["actions/WaitlistActionCreators.js"],"names":["setWaitList","setLocked","clearWaitlist","updatedWaitlist","joinWaitlist","joinedWaitlist","leaveWaitlist","leftWaitlist","movedInWaitlist","modLockWaitlist","modUnlockWaitlist","modClearWaitlist","data","type","payload","waitlist","locked","lock","user","dispatch","userID","_id","onStart","onComplete","_ref","onError","error","_ref2","_ref3","_ref4","_ref5","moderatorID","position","meta","putLock","status","clear","_ref6"],"mappings":"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","file":"WaitlistActionCreators.js","sourcesContent":["import {\n  WAITLIST_LOAD,\n  WAITLIST_LOCK,\n  WAITLIST_CLEAR,\n  WAITLIST_UPDATE,\n  WAITLIST_JOIN,\n  WAITLIST_LEAVE,\n  WAITLIST_MOVE,\n  DO_JOIN_START, DO_JOIN_COMPLETE,\n  DO_LEAVE_START, DO_LEAVE_COMPLETE,\n  DO_LOCK_START, DO_LOCK_COMPLETE,\n  DO_CLEAR_START, DO_CLEAR_COMPLETE,\n} from '../constants/actionTypes/waitlist';\nimport { del, post, put } from './RequestActionCreators';\n\nexport function setWaitList(data) {\n  return {\n    type: WAITLIST_LOAD,\n    payload: {\n      waitlist: data.waitlist,\n      locked: data.locked,\n    },\n  };\n}\n\nexport function setLocked(lock) {\n  return {\n    type: WAITLIST_LOCK,\n    payload: {\n      locked: lock,\n    },\n  };\n}\n\nexport function clearWaitlist() {\n  return { type: WAITLIST_CLEAR };\n}\n\nexport function updatedWaitlist(waitlist) {\n  return {\n    type: WAITLIST_UPDATE,\n    payload: { waitlist },\n  };\n}\n\nexport function joinWaitlist(user) {\n  return (dispatch) => {\n    if (!user) {\n      return null;\n    }\n    // TODO don't post an object at all once the API server supports it\n    return dispatch(post('/waitlist', { userID: user._id }, {\n      onStart: () => ({ type: DO_JOIN_START }),\n      onComplete: ({ data }) => ({\n        type: DO_JOIN_COMPLETE,\n        payload: { waitlist: data },\n      }),\n      onError: error => ({\n        type: DO_JOIN_COMPLETE,\n        error: true,\n        payload: error,\n      }),\n    }));\n  };\n}\n\nexport function joinedWaitlist({ userID, waitlist }) {\n  return {\n    type: WAITLIST_JOIN,\n    payload: { userID, waitlist },\n  };\n}\n\nexport function leaveWaitlist(user) {\n  return (dispatch) => {\n    if (!user) {\n      return null;\n    }\n    return dispatch(del(`/waitlist/${user._id}`, {}, {\n      onStart: () => ({ type: DO_LEAVE_START }),\n      onComplete: ({ data }) => ({\n        type: DO_LEAVE_COMPLETE,\n        payload: { waitlist: data },\n      }),\n      onError: error => ({\n        type: DO_LEAVE_COMPLETE,\n        error: true,\n        payload: error,\n      }),\n    }));\n  };\n}\n\nexport function leftWaitlist({ userID, waitlist }) {\n  return {\n    type: WAITLIST_LEAVE,\n    payload: { userID, waitlist },\n  };\n}\n\nexport function movedInWaitlist({\n  userID, moderatorID, position, waitlist,\n}) {\n  return (dispatch) => {\n    dispatch({\n      type: WAITLIST_MOVE,\n      payload: { userID, position },\n      meta: { moderatorID },\n    });\n    dispatch(updatedWaitlist(waitlist));\n  };\n}\n\nfunction putLock(status) {\n  return put('/waitlist/lock', { lock: status, clear: false }, {\n    onStart: () => ({\n      type: DO_LOCK_START,\n      payload: { locked: status },\n    }),\n    onComplete: ({ data }) => ({\n      type: DO_LOCK_COMPLETE,\n      payload: { locked: data.locked },\n    }),\n    onError: error => ({\n      type: DO_LOCK_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function modLockWaitlist() {\n  return putLock(true);\n}\nexport function modUnlockWaitlist() {\n  return putLock(false);\n}\n\nexport function modClearWaitlist() {\n  return del('/waitlist', {}, {\n    onStart: () => ({ type: DO_CLEAR_START }),\n    onComplete: () => ({ type: DO_CLEAR_COMPLETE }),\n    onError: error => ({\n      type: DO_CLEAR_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n"]}