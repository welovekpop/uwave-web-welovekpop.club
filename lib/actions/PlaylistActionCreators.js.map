{"version":3,"sources":["actions/PlaylistActionCreators.js"],"names":["MEDIA_PAGE_SIZE","setPlaylists","playlists","type","LOAD_ALL_PLAYLISTS_COMPLETE","payload","flattenPlaylistItem","item","media","loadPlaylistStart","playlistID","page","_temp","_ref","_ref$sneaky","sneaky","LOAD_PLAYLIST_START","meta","loadPlaylistComplete","pagination","LOAD_PLAYLIST_COMPLETE","loadPlaylist","qs","limit","onStart","onComplete","res","map","offset","pageSize","size","total","onError","error","filterPlaylistItemsStart","filter","FILTER_PLAYLIST_ITEMS_START","filterPlaylistItemsComplete","FILTER_PLAYLIST_ITEMS_COMPLETE","loadFilteredPlaylistItems","dispatch","getState","results","filterPlaylistItems","FILTER_PLAYLIST_ITEMS","loadAll","loadFiltered","selectPlaylist","SELECT_PLAYLIST","playlistCycled","PLAYLIST_CYCLED","shouldLoadAfterCycle","playlist","length","every","Boolean","slice","cyclePlaylist","activePlaylist","selectedPlaylist","_id","activatePlaylistStart","ACTIVATE_PLAYLIST_START","activatePlaylistComplete","ACTIVATE_PLAYLIST_COMPLETE","activatePlaylist","loadPlaylistsStart","LOAD_ALL_PLAYLISTS_START","loadPlaylistsComplete","loadPlaylists","data","createPlaylistStart","props","tempId","CREATE_PLAYLIST_START","createPlaylistComplete","CREATE_PLAYLIST_COMPLETE","createPlaylist","name","Date","now","description","shared","isFirstPlaylist","renamePlaylist","RENAME_PLAYLIST_START","_ref2","RENAME_PLAYLIST_COMPLETE","deselectPlaylist","selectedID","activeID","deletePlaylistStart","DELETE_PLAYLIST_START","deletePlaylistComplete","DELETE_PLAYLIST_COMPLETE","cannotDeleteActivePlaylist","Error","deletePlaylist","addMediaMenu","items","position","OPEN_ADD_MEDIA_MENU","closeAddMediaMenu","CLOSE_ADD_MEDIA_MENU","addMediaStart","location","ADD_MEDIA_START","addMediaComplete","newSize","insert","ADD_MEDIA_COMPLETE","afterID","appendedMedia","minimizePlaylistItem","sourceType","sourceID","artist","title","start","end","addMedia","after","playlistSize","editMedia","updateMediaStart","mediaID","UPDATE_MEDIA_START","updateMediaComplete","UPDATE_MEDIA_COMPLETE","updateMedia","removeMediaStart","REMOVE_MEDIA_START","medias","removeMediaComplete","removedMedia","REMOVE_MEDIA_COMPLETE","removeMedia","itemIDs","_ref3","moveMediaStart","MOVE_MEDIA_START","moveMediaComplete","MOVE_MEDIA_COMPLETE","resolveMoveOptions","opts","before","i","l","at","moveMedia","playlistItems","shufflePlaylistStart","SHUFFLE_PLAYLIST_START","shufflePlaylistComplete","SHUFFLE_PLAYLIST_COMPLETE","shufflePlaylist","shuffleOperation","loadOperation","then"],"mappings":"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","file":"PlaylistActionCreators.js","sourcesContent":["import {\n  LOAD_ALL_PLAYLISTS_START, LOAD_ALL_PLAYLISTS_COMPLETE,\n  LOAD_PLAYLIST_START, LOAD_PLAYLIST_COMPLETE,\n  FILTER_PLAYLIST_ITEMS,\n  FILTER_PLAYLIST_ITEMS_START, FILTER_PLAYLIST_ITEMS_COMPLETE,\n  PLAYLIST_CYCLED,\n  SELECT_PLAYLIST,\n  ACTIVATE_PLAYLIST_START, ACTIVATE_PLAYLIST_COMPLETE,\n  CREATE_PLAYLIST_START, CREATE_PLAYLIST_COMPLETE,\n  RENAME_PLAYLIST_START, RENAME_PLAYLIST_COMPLETE,\n  DELETE_PLAYLIST_START, DELETE_PLAYLIST_COMPLETE,\n  OPEN_ADD_MEDIA_MENU, CLOSE_ADD_MEDIA_MENU,\n  ADD_MEDIA_START, ADD_MEDIA_COMPLETE,\n  REMOVE_MEDIA_START, REMOVE_MEDIA_COMPLETE,\n  MOVE_MEDIA_START, MOVE_MEDIA_COMPLETE,\n  UPDATE_MEDIA_START, UPDATE_MEDIA_COMPLETE,\n  SHUFFLE_PLAYLIST_START, SHUFFLE_PLAYLIST_COMPLETE,\n} from '../constants/actionTypes/playlists';\n\nimport { openEditMediaDialog } from './DialogActionCreators';\nimport { del, get, post, put } from './RequestActionCreators';\n\nimport {\n  playlistsSelector,\n  playlistItemsSelector,\n  playlistItemFilterSelector,\n  activePlaylistIDSelector,\n  selectedPlaylistIDSelector,\n  activePlaylistSelector,\n  selectedPlaylistSelector,\n} from '../selectors/playlistSelectors';\nimport mergeIncludedModels from '../utils/mergeIncludedModels';\n\nconst MEDIA_PAGE_SIZE = 50;\n\nexport function setPlaylists(playlists) {\n  return {\n    type: LOAD_ALL_PLAYLISTS_COMPLETE,\n    payload: { playlists },\n  };\n}\n\nexport function flattenPlaylistItem(item) {\n  return {\n    ...item.media,\n    ...item,\n  };\n}\n\nexport function loadPlaylistStart(playlistID, page, { sneaky = false } = {}) {\n  return {\n    type: LOAD_PLAYLIST_START,\n    payload: { playlistID },\n    meta: { page, sneaky },\n  };\n}\n\nexport function loadPlaylistComplete(playlistID, media, pagination) {\n  return {\n    type: LOAD_PLAYLIST_COMPLETE,\n    payload: { playlistID, media },\n    meta: pagination,\n  };\n}\n\nexport function loadPlaylist(playlistID, page = 0, meta = {}) {\n  return get(`/playlists/${playlistID}/media`, {\n    qs: { page, limit: MEDIA_PAGE_SIZE },\n    onStart: () => loadPlaylistStart(playlistID, page, meta),\n    onComplete: res => loadPlaylistComplete(\n      playlistID,\n      mergeIncludedModels(res).map(flattenPlaylistItem),\n      {\n        page: res.meta.offset / res.meta.pageSize,\n        pageSize: res.meta.pageSize,\n        size: res.meta.total,\n      },\n    ),\n    onError: error => ({\n      type: LOAD_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { page },\n    }),\n  });\n}\n\nexport function filterPlaylistItemsStart(playlistID, page, filter) {\n  return {\n    type: FILTER_PLAYLIST_ITEMS_START,\n    payload: { playlistID, filter },\n    meta: { page },\n  };\n}\n\nexport function filterPlaylistItemsComplete(playlistID, media, pagination) {\n  return {\n    type: FILTER_PLAYLIST_ITEMS_COMPLETE,\n    payload: { playlistID, media },\n    meta: pagination,\n  };\n}\n\nexport function loadFilteredPlaylistItems(playlistID, page = 0) {\n  return (dispatch, getState) => {\n    const filter = playlistItemFilterSelector(getState()) || '';\n    return dispatch(get(`/playlists/${playlistID}/media`, {\n      qs: { filter, page, limit: MEDIA_PAGE_SIZE },\n      onStart: () => filterPlaylistItemsStart(playlistID, page, filter),\n      onComplete: res => filterPlaylistItemsComplete(\n        playlistID,\n        mergeIncludedModels(res).map(flattenPlaylistItem),\n        {\n          page: res.meta.offset / res.meta.pageSize,\n          pageSize: res.meta.pageSize,\n          size: res.meta.results,\n          filter,\n        },\n      ),\n      onError: error => ({\n        type: FILTER_PLAYLIST_ITEMS_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { page },\n      }),\n    }));\n  };\n}\n\nexport function filterPlaylistItems(playlistID, filter) {\n  return (dispatch) => {\n    dispatch({\n      type: FILTER_PLAYLIST_ITEMS,\n      payload: { playlistID, filter },\n    });\n\n    const loadAll = loadPlaylist(playlistID, 0);\n    const loadFiltered = loadFilteredPlaylistItems(playlistID, 0);\n    dispatch(filter === '' ? loadAll : loadFiltered);\n  };\n}\n\nexport function selectPlaylist(playlistID) {\n  return (dispatch) => {\n    dispatch({\n      type: SELECT_PLAYLIST,\n      payload: { playlistID },\n    });\n\n    if (playlistID) {\n      dispatch(loadPlaylist(playlistID));\n    }\n  };\n}\n\nexport function playlistCycled(playlistID) {\n  return {\n    type: PLAYLIST_CYCLED,\n    payload: { playlistID },\n  };\n}\n\nfunction shouldLoadAfterCycle(playlist) {\n  const { media } = playlist;\n  // If the playlist was fully loaded, we can cycle naively\n  if (media.length === playlist.size && media.every(Boolean)) {\n    return false;\n  }\n  // If the first page _after_ cycle is fully loaded, we also don't need to do\n  // anything.\n  if (media.length > MEDIA_PAGE_SIZE &&\n      media.slice(1, 1 + MEDIA_PAGE_SIZE).every(Boolean)) {\n    return false;\n  }\n  // Otherwise, there will be unloaded items on the first page after cycling,\n  // so we want to eagerly load the page again.\n  return true;\n}\n\nexport function cyclePlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const activePlaylist = activePlaylistSelector(getState());\n    const selectedPlaylist = selectedPlaylistSelector(getState());\n\n    let playlist;\n\n    if (playlistID === activePlaylist._id) {\n      playlist = activePlaylist;\n    } else if (playlistID === selectedPlaylist._id) {\n      playlist = selectedPlaylist;\n    }\n\n    dispatch(playlistCycled(playlistID));\n\n    if (playlist && shouldLoadAfterCycle(playlist)) {\n      dispatch(loadPlaylist(playlistID, 0));\n    }\n  };\n}\n\nexport function activatePlaylistStart(playlistID) {\n  return {\n    type: ACTIVATE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function activatePlaylistComplete(playlistID) {\n  return {\n    type: ACTIVATE_PLAYLIST_COMPLETE,\n    payload: { playlistID },\n  };\n}\n\nexport function activatePlaylist(playlistID) {\n  return put(`/playlists/${playlistID}/activate`, {}, {\n    onStart: () => activatePlaylistStart(playlistID),\n    onComplete: () => activatePlaylistComplete(playlistID),\n    onError: error => ({\n      type: ACTIVATE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { playlistID },\n    }),\n  });\n}\n\nexport function loadPlaylistsStart() {\n  return { type: LOAD_ALL_PLAYLISTS_START };\n}\n\nexport function loadPlaylistsComplete(playlists) {\n  return {\n    type: LOAD_ALL_PLAYLISTS_COMPLETE,\n    payload: { playlists },\n  };\n}\n\nexport function loadPlaylists() {\n  return get('/playlists', {\n    onStart: loadPlaylistsStart,\n    onComplete: res => loadPlaylistsComplete(res.data),\n    onError: error => ({\n      type: LOAD_ALL_PLAYLISTS_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function createPlaylistStart(props, tempId) {\n  return {\n    type: CREATE_PLAYLIST_START,\n    payload: props,\n    meta: { tempId },\n  };\n}\n\nexport function createPlaylistComplete(playlist, tempId) {\n  return {\n    type: CREATE_PLAYLIST_COMPLETE,\n    payload: { playlist },\n    meta: { tempId },\n  };\n}\n\nexport function createPlaylist(name) {\n  const tempId = -Date.now();\n  const description = '';\n  const shared = false;\n\n  return post('/playlists', { name, description, shared }, {\n    onStart: () => createPlaylistStart({ name, description, shared }, tempId),\n    onComplete: res => (dispatch, getState) => {\n      const playlist = res.data;\n      const isFirstPlaylist = !activePlaylistIDSelector(getState());\n      dispatch(createPlaylistComplete(playlist, tempId));\n      if (isFirstPlaylist) {\n        dispatch(activatePlaylistComplete(playlist._id));\n      }\n      return playlist;\n    },\n    onError: error => ({\n      type: CREATE_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { tempId },\n    }),\n  });\n}\n\nexport function renamePlaylist(playlistID, name) {\n  return put(`/playlists/${playlistID}/rename`, { name }, {\n    onStart: () => ({\n      type: RENAME_PLAYLIST_START,\n      payload: { playlistID, name },\n    }),\n    onComplete: ({ data }) => ({\n      type: RENAME_PLAYLIST_COMPLETE,\n      payload: { playlistID, name: data.name },\n    }),\n    onError: error => ({\n      type: RENAME_PLAYLIST_COMPLETE,\n      error: true,\n      payload: error,\n      meta: { playlistID, name },\n    }),\n  });\n}\n\n/**\n * Select or activate a different playlist than the one given.\n * @return Promise\n */\n\nexport function deselectPlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const selectedID = selectedPlaylistIDSelector(getState());\n    const activeID = activePlaylistIDSelector(getState());\n    if (playlistID === selectedID) {\n      dispatch(selectPlaylist(activeID));\n    }\n  };\n}\n\nexport function deletePlaylistStart(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function deletePlaylistComplete(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_COMPLETE,\n    payload: { playlistID },\n  };\n}\n\nexport function cannotDeleteActivePlaylist(playlistID) {\n  return {\n    type: DELETE_PLAYLIST_COMPLETE,\n    error: true,\n    payload: new Error('The active playlist cannot be deleted. ' +\n      'Activate a different playlist first, before deleting this one.'),\n    meta: { playlistID },\n  };\n}\n\nexport function deletePlaylist(playlistID) {\n  return (dispatch, getState) => {\n    const activeID = activePlaylistIDSelector(getState());\n\n    if (playlistID === activeID) {\n      dispatch(cannotDeleteActivePlaylist(playlistID));\n      return null;\n    }\n\n    dispatch(deselectPlaylist(playlistID));\n\n    return dispatch(del(`/playlists/${playlistID}`, {}, {\n      onStart: () => deletePlaylistStart(playlistID),\n      onComplete: () => deletePlaylistComplete(playlistID),\n      onError: error => ({\n        type: DELETE_PLAYLIST_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID },\n      }),\n    }));\n  };\n}\n\nexport function addMediaMenu(items, position) {\n  return (dispatch, getState) => {\n    const playlists = playlistsSelector(getState());\n    dispatch({\n      type: OPEN_ADD_MEDIA_MENU,\n      payload: {\n        media: items,\n      },\n      meta: {\n        playlists,\n        position,\n        type: 'add',\n      },\n    });\n  };\n}\n\nexport function closeAddMediaMenu() {\n  return { type: CLOSE_ADD_MEDIA_MENU };\n}\n\nexport function addMediaStart(playlistID, media, location) {\n  return {\n    type: ADD_MEDIA_START,\n    payload: { playlistID, media, location },\n  };\n}\n\nexport function addMediaComplete(playlistID, newSize, insert) {\n  return {\n    type: ADD_MEDIA_COMPLETE,\n    payload: {\n      playlistID,\n      newSize,\n      afterID: insert.afterID,\n      appendedMedia: insert.media,\n    },\n  };\n}\n\n/**\n * Keep only the playlist item properties that are necessary to add an item to\n * a playlist. The rest (\"thumbnail\" etc) is left out for smaller payloads.\n */\n\nfunction minimizePlaylistItem(item) {\n  return {\n    sourceType: item.sourceType,\n    sourceID: item.sourceID,\n    artist: item.artist,\n    title: item.title,\n    start: item.start,\n    end: item.end,\n  };\n}\n\nexport function addMedia(playlist, items, afterID = null) {\n  const payload = {\n    items: items.map(minimizePlaylistItem),\n    after: afterID,\n  };\n\n  return post(`/playlists/${playlist._id}/media`, payload, {\n    onStart: () => addMediaStart(playlist._id, items, afterID),\n    onComplete: res => addMediaComplete(\n      playlist._id,\n      res.meta.playlistSize,\n      { afterID, media: mergeIncludedModels(res).map(flattenPlaylistItem) },\n    ),\n    onError: error => ({\n      type: ADD_MEDIA_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function editMedia(playlistID, media) {\n  return openEditMediaDialog(playlistID, media);\n}\n\nexport function updateMediaStart(playlistID, mediaID, props) {\n  return {\n    type: UPDATE_MEDIA_START,\n    payload: { playlistID, mediaID, props },\n  };\n}\n\nexport function updateMediaComplete(playlistID, mediaID, media) {\n  return {\n    type: UPDATE_MEDIA_COMPLETE,\n    payload: { playlistID, mediaID, media },\n  };\n}\n\nexport function updateMedia(playlistID, mediaID, props) {\n  return put(`/playlists/${playlistID}/media/${mediaID}`, props, {\n    onStart: () => updateMediaStart(playlistID, mediaID, props),\n    onComplete: res => updateMediaComplete(playlistID, mediaID, res.data),\n    onError: error => ({\n      type: UPDATE_MEDIA_COMPLETE,\n      payload: error,\n      error: true,\n      meta: { playlistID, mediaID, props },\n    }),\n  });\n}\n\nexport function removeMediaStart(playlistID, items) {\n  return {\n    type: REMOVE_MEDIA_START,\n    payload: { playlistID, medias: items },\n  };\n}\n\nexport function removeMediaComplete(playlistID, newSize, removedMedia) {\n  return {\n    type: REMOVE_MEDIA_COMPLETE,\n    payload: {\n      playlistID,\n      newSize,\n      removedMedia,\n    },\n  };\n}\n\nexport function removeMedia(playlistID, items) {\n  const itemIDs = items.map(media => media._id);\n  return del(`/playlists/${playlistID}/media`, { items: itemIDs }, {\n    onStart: () => removeMediaStart(playlistID, items),\n    onComplete: ({ meta }) => removeMediaComplete(\n      playlistID,\n      meta.playlistSize,\n      items,\n    ),\n    onError: error => ({\n      type: REMOVE_MEDIA_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function moveMediaStart(playlistID, items, location) {\n  return {\n    type: MOVE_MEDIA_START,\n    payload: { playlistID, location, medias: items },\n  };\n}\n\nexport function moveMediaComplete(playlistID, items, location) {\n  return {\n    type: MOVE_MEDIA_COMPLETE,\n    payload: { playlistID, location, medias: items },\n  };\n}\n\nfunction resolveMoveOptions(playlist = [], opts = {}) {\n  if (opts.after) {\n    return { after: opts.after };\n  }\n  if (opts.before) {\n    for (let i = 0, l = playlist.length; i < l; i += 1) {\n      if (playlist[i] && playlist[i]._id === opts.before) {\n        if (i === 0) {\n          return { at: 'start' };\n        }\n        return { after: playlist[i - 1]._id };\n      }\n    }\n  }\n  if (opts.at) {\n    return { at: opts.at };\n  }\n  return null;\n}\n\nexport function moveMedia(playlistID, medias, opts) {\n  return (dispatch, getState) => {\n    const playlistItems = playlistItemsSelector(getState())[playlistID];\n    const location = resolveMoveOptions(playlistItems, opts);\n\n    const items = medias.map(media => media._id);\n\n    return dispatch(put(`/playlists/${playlistID}/move`, { items, ...location }, {\n      onStart: () => moveMediaStart(playlistID, medias, location),\n      onComplete: () => moveMediaComplete(playlistID, medias, location),\n      onError: error => ({\n        type: MOVE_MEDIA_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID, medias, location },\n      }),\n    }));\n  };\n}\n\nexport function shufflePlaylistStart(playlistID) {\n  return {\n    type: SHUFFLE_PLAYLIST_START,\n    payload: { playlistID },\n  };\n}\n\nexport function shufflePlaylistComplete(playlistID) {\n  return (dispatch) => {\n    dispatch({\n      type: SHUFFLE_PLAYLIST_COMPLETE,\n      payload: { playlistID },\n    });\n  };\n}\n\nexport function shufflePlaylist(playlistID) {\n  return (dispatch) => {\n    const shuffleOperation = post(`/playlists/${playlistID}/shuffle`, {}, {\n      onStart: () => shufflePlaylistStart(playlistID),\n      // onComplete: () => shufflePlaylistComplete(playlistID),\n      onError: error => ({\n        type: SHUFFLE_PLAYLIST_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { playlistID },\n      }),\n    });\n    const loadOperation = loadPlaylist(playlistID, 0, { sneaky: true });\n\n    return dispatch(shuffleOperation)\n      .then(() => dispatch(loadOperation))\n      .then(() => dispatch(shufflePlaylistComplete(playlistID)));\n  };\n}\n"]}