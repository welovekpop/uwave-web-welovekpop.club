{"version":3,"sources":["actions/UserActionCreators.js"],"names":["setUsers","receiveGuestCount","join","leave","changeUsername","doChangeUsername","changeUserRole","users","type","payload","guests","user","timestamp","Date","now","id","dispatch","getState","userID","username","_id","onStart","onComplete","_ref","data","onError","error","meta","role"],"mappings":";;;;;QAIgBA,Q,GAAAA,Q;QAOAC,iB,GAAAA,iB;QAOAC,I,GAAAA,I;QAUAC,K,GAAAA,K;QAcAC,c,GAAAA,c;QAeAC,gB,GAAAA,gB;QA8BAC,c,GAAAA,c;;AAvFhB;;AACA;;AACA;;AAEO,SAASN,QAAT,CAAkBO,KAAlB,EAAyB;AAC9B,SAAO;AACLC,kCADK;AAELC,aAAS,EAAEF,OAAOA,KAAT;AAFJ,GAAP;AAID;;AAEM,SAASN,iBAAT,CAA2BS,MAA3B,EAAmC;AACxC,SAAO;AACLF,oCADK;AAELC,aAAS,EAAEC,QAAQA,MAAV;AAFJ,GAAP;AAID;;AAEM,SAASR,IAAT,CAAcS,IAAd,EAAoB;AACzB,SAAO;AACLH,0BADK;AAELC,aAAS;AACPE,YAAMA,IADC;AAEPC,iBAAWC,KAAKC,GAAL;AAFJ;AAFJ,GAAP;AAOD;;AAEM,SAASX,KAAT,CAAeY,EAAf,EAAmB;AACxB,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACnC,QAAIN,OAAO,kCAAcM,UAAd,EAA0BF,EAA1B,CAAX;AACA,WAAOC,SAAS;AACdR,6BADc;AAEdC,eAAS;AACPE,cAAMA,IADC;AAEPO,gBAAQH,EAFD;AAGPH,mBAAWC,KAAKC,GAAL;AAHJ;AAFK,KAAT,CAAP;AAQD,GAVD;AAWD;;AAEM,SAASV,cAAT,CAAwBc,MAAxB,EAAgCC,QAAhC,EAA0C;AAC/C,SAAO,UAAUH,QAAV,EAAoBC,QAApB,EAA8B;AACnC,QAAIN,OAAO,kCAAcM,UAAd,EAA0BC,MAA1B,CAAX;AACA,WAAOF,SAAS;AACdR,kCADc;AAEdC,eAAS;AACPE,cAAMA,IADC;AAEPO,gBAAQA,MAFD;AAGPC,kBAAUA,QAHH;AAIPP,mBAAWC,KAAKC,GAAL;AAJJ;AAFK,KAAT,CAAP;AASD,GAXD;AAYD;;AAEM,SAAST,gBAAT,CAA0Bc,QAA1B,EAAoC;AACzC,SAAO,UAAUH,QAAV,EAAoBC,QAApB,EAA8B;AACnC,QAAIN,OAAO,wCAAoBM,UAApB,CAAX;;AAEA,WAAOD,SAAS,gCAAI,YAAYL,KAAKS,GAAjB,GAAuB,WAA3B,EAAwC,EAAED,UAAUA,QAAZ,EAAxC,EAAgE;AAC9EE,eAAS,SAASA,OAAT,GAAmB;AAC1B,eAAO;AACLb,+CADK;AAELC,mBAAS,EAAEU,UAAUA,QAAZ;AAFJ,SAAP;AAID,OAN6E;AAO9EG,kBAAY,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACpC,YAAIC,OAAOD,KAAKC,IAAhB;AACA,eAAO;AACLhB,kDADK;AAELC,mBAAS,EAAEU,UAAUK,KAAKL,QAAjB;AAFJ,SAAP;AAID,OAb6E;AAc9EM,eAAS,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,eAAO;AACLlB,kDADK;AAELkB,iBAAO,IAFF;AAGLjB,mBAASiB,KAHJ;AAILC,gBAAM,EAAER,UAAUA,QAAZ;AAJD,SAAP;AAMD;AArB6E,KAAhE,CAAT,CAAP;AAuBD,GA1BD;AA2BD;;AAEM,SAASb,cAAT,CAAwBY,MAAxB,EAAgCU,IAAhC,EAAsC;AAC3C,SAAO;AACLpB,4BADK;AAELC,aAAS;AACPS,cAAQA,MADD;AAEPU,YAAMA,IAFC;AAGPhB,iBAAWC,KAAKC,GAAL;AAHJ;AAFJ,GAAP;AAQD;AACD","file":"UserActionCreators.js","sourcesContent":["import {\n  LOAD_ONLINE_USERS,\n  USER_JOIN,\n  USER_LEAVE,\n  CHANGE_USERNAME,\n  CHANGE_ROLE,\n\n  RECEIVE_GUEST_COUNT,\n\n  DO_CHANGE_USERNAME_START,\n  DO_CHANGE_USERNAME_COMPLETE\n} from '../constants/actionTypes/users';\nimport {\n  currentUserSelector,\n  usersSelector\n} from '../selectors/userSelectors';\nimport { put } from './RequestActionCreators';\n\nexport function setUsers(users) {\n  return {\n    type: LOAD_ONLINE_USERS,\n    payload: { users }\n  };\n}\n\nexport function receiveGuestCount(guests) {\n  return {\n    type: RECEIVE_GUEST_COUNT,\n    payload: { guests }\n  };\n}\n\nexport function join(user) {\n  return {\n    type: USER_JOIN,\n    payload: {\n      user,\n      timestamp: Date.now()\n    }\n  };\n}\n\nexport function leave(id) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[id];\n    return dispatch({\n      type: USER_LEAVE,\n      payload: {\n        user,\n        userID: id,\n        timestamp: Date.now()\n      }\n    });\n  };\n}\n\nexport function changeUsername(userID, username) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: CHANGE_USERNAME,\n      payload: {\n        user,\n        userID,\n        username,\n        timestamp: Date.now()\n      }\n    });\n  };\n}\n\nexport function doChangeUsername(username) {\n  return (dispatch, getState) => {\n    const user = currentUserSelector(getState());\n\n    return dispatch(put(`/users/${user._id}/username`, { username }, {\n      onStart: () => ({\n        type: DO_CHANGE_USERNAME_START,\n        payload: { username }\n      }),\n      onComplete: ({ data }) => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        payload: { username: data.username }\n      }),\n      onError: error => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { username }\n      })\n    }));\n  };\n}\n\nexport function changeUserRole(userID, role) {\n  return {\n    type: CHANGE_ROLE,\n    payload: {\n      userID,\n      role,\n      timestamp: Date.now()\n    }\n  };\n}\n"]}