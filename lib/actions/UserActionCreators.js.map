{"version":3,"sources":["actions/UserActionCreators.js"],"names":["setUsers","users","type","LOAD_ONLINE_USERS","payload","receiveGuestCount","guests","RECEIVE_GUEST_COUNT","join","user","USER_JOIN","timestamp","Date","now","leave","id","dispatch","getState","USER_LEAVE","userID","changeUsername","username","CHANGE_USERNAME","doChangeUsername","_id","onStart","DO_CHANGE_USERNAME_START","onComplete","_ref","data","DO_CHANGE_USERNAME_COMPLETE","onError","error","meta","addUserRoles","roles","USER_ADD_ROLES","removeUserRoles","USER_REMOVE_ROLES"],"mappings":"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","file":"UserActionCreators.js","sourcesContent":["import {\n  LOAD_ONLINE_USERS,\n  USER_JOIN,\n  USER_LEAVE,\n  CHANGE_USERNAME,\n  USER_ADD_ROLES,\n  USER_REMOVE_ROLES,\n\n  RECEIVE_GUEST_COUNT,\n\n  DO_CHANGE_USERNAME_START,\n  DO_CHANGE_USERNAME_COMPLETE,\n} from '../constants/actionTypes/users';\nimport {\n  currentUserSelector,\n  usersSelector,\n} from '../selectors/userSelectors';\nimport { put } from './RequestActionCreators';\n\nexport function setUsers(users) {\n  return {\n    type: LOAD_ONLINE_USERS,\n    payload: { users },\n  };\n}\n\nexport function receiveGuestCount(guests) {\n  return {\n    type: RECEIVE_GUEST_COUNT,\n    payload: { guests },\n  };\n}\n\nexport function join(user) {\n  return {\n    type: USER_JOIN,\n    payload: {\n      user,\n      timestamp: Date.now(),\n    },\n  };\n}\n\nexport function leave(id) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[id];\n    return dispatch({\n      type: USER_LEAVE,\n      payload: {\n        user,\n        userID: id,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function changeUsername(userID, username) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: CHANGE_USERNAME,\n      payload: {\n        user,\n        userID,\n        username,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function doChangeUsername(username) {\n  return (dispatch, getState) => {\n    const user = currentUserSelector(getState());\n\n    return dispatch(put(`/users/${user._id}/username`, { username }, {\n      onStart: () => ({\n        type: DO_CHANGE_USERNAME_START,\n        payload: { username },\n      }),\n      onComplete: ({ data }) => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        payload: { username: data.username },\n      }),\n      onError: error => ({\n        type: DO_CHANGE_USERNAME_COMPLETE,\n        error: true,\n        payload: error,\n        meta: { username },\n      }),\n    }));\n  };\n}\n\nexport function addUserRoles(userID, roles) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: USER_ADD_ROLES,\n      payload: {\n        user,\n        userID,\n        roles,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n\nexport function removeUserRoles(userID, roles) {\n  return (dispatch, getState) => {\n    const user = usersSelector(getState())[userID];\n    return dispatch({\n      type: USER_REMOVE_ROLES,\n      payload: {\n        user,\n        userID,\n        roles,\n        timestamp: Date.now(),\n      },\n    });\n  };\n}\n"]}