{"version":3,"sources":["actions/LoginActionCreators.js"],"names":["debug","socketConnect","type","SOCKET_CONNECT","socketReconnect","SOCKET_RECONNECT","setAuthenticationStrategies","strategies","AUTH_STRATEGIES","payload","loginComplete","_ref","token","socketToken","user","dispatch","LOGIN_COMPLETE","loadedState","state","getState","INIT_STATE","motd","authStrategies","users","playlists","waitlist","locked","waitlistLocked","booth","historyID","stats","activePlaylist","initState","beforeTime","Date","now","onStart","LOAD_ALL_PLAYLISTS_START","onComplete","time","setSessionToken","SET_TOKEN","loginStart","LOGIN_START","login","_ref2","email","password","sessionType","Session","preferredSessionType","res","set","meta","jwt","onError","error","register","_ref3","username","grecaptcha","REGISTER_START","data","REGISTER_COMPLETE","then","matchMedia","matches","logoutStart","LOGOUT_START","logoutComplete","LOGOUT_COMPLETE","logout","unset","resetPassword","RESET_PASSWORD_COMPLETE","getSocketAuthToken","whenWindowClosed","window","Promise","resolve","i","setInterval","closed","clearInterval","socialLogin","service","apiUrl","config","loginWindow","open","loginWithGoogle"],"mappings":"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","file":"LoginActionCreators.js","sourcesContent":["import createDebug from 'debug';\nimport {\n  INIT_STATE,\n  SOCKET_CONNECT,\n  SOCKET_RECONNECT,\n\n  AUTH_STRATEGIES,\n  REGISTER_START,\n  REGISTER_COMPLETE,\n  LOGIN_START,\n  LOGIN_COMPLETE,\n  SET_TOKEN,\n  LOGOUT_START,\n  LOGOUT_COMPLETE,\n\n  RESET_PASSWORD_COMPLETE,\n} from '../constants/actionTypes/auth';\nimport { LOAD_ALL_PLAYLISTS_START } from '../constants/actionTypes/playlists';\nimport * as Session from '../utils/Session';\nimport { get, post, del } from './RequestActionCreators';\nimport { advance, loadHistory } from './BoothActionCreators';\nimport { receiveMotd } from './ChatActionCreators';\nimport { setPlaylists, selectPlaylist, activatePlaylistComplete } from './PlaylistActionCreators';\nimport { syncTimestamps } from './TickerActionCreators';\nimport { closeLoginDialog } from './DialogActionCreators';\nimport { setUsers } from './UserActionCreators';\nimport { setVoteStats } from './VoteActionCreators';\nimport { setWaitList } from './WaitlistActionCreators';\nimport { tokenSelector } from '../selectors/userSelectors';\nimport startTutorial from '../_wlk/startTutorial';\n\nconst debug = createDebug('uwave:actions:login');\n\nexport function socketConnect() {\n  return { type: SOCKET_CONNECT };\n}\n\nexport function socketReconnect() {\n  return { type: SOCKET_RECONNECT };\n}\n\nexport function setAuthenticationStrategies(strategies) {\n  return {\n    type: AUTH_STRATEGIES,\n    payload: { strategies },\n  };\n}\n\nexport function loginComplete({ token, socketToken, user }) {\n  return (dispatch) => {\n    dispatch({\n      type: LOGIN_COMPLETE,\n      payload: {\n        token,\n        socketToken,\n        user,\n      },\n    });\n    dispatch(closeLoginDialog());\n  };\n}\n\nexport function loadedState(state) {\n  return (dispatch, getState) => {\n    dispatch({\n      type: INIT_STATE,\n      payload: state,\n    });\n    if (state.motd) {\n      dispatch(receiveMotd(state.motd));\n    }\n    dispatch(setAuthenticationStrategies(state.authStrategies));\n    dispatch(setUsers(state.users || []));\n    dispatch(setPlaylists(state.playlists || []));\n    dispatch(setWaitList({\n      waitlist: state.waitlist,\n      locked: state.waitlistLocked,\n    }));\n    if (state.booth && state.booth.historyID) {\n      // TODO don't set this when logging in _after_ entering the page?\n      dispatch(advance(state.booth));\n      dispatch(setVoteStats(state.booth.stats));\n    }\n    if (state.user) {\n      const token = tokenSelector(getState());\n      dispatch(loginComplete({\n        token,\n        socketToken: state.socketToken,\n        user: state.user,\n      }));\n    }\n    if (state.activePlaylist) {\n      dispatch(activatePlaylistComplete(state.activePlaylist));\n      dispatch(selectPlaylist(state.activePlaylist));\n    }\n  };\n}\n\nexport function initState() {\n  const beforeTime = Date.now();\n\n  return get('/now', {\n    onStart: () => ({ type: LOAD_ALL_PLAYLISTS_START }),\n    onComplete: state => (dispatch) => {\n      dispatch(syncTimestamps(beforeTime, state.time));\n      dispatch(loadedState(state));\n      dispatch(loadHistory());\n    },\n  });\n}\n\nexport function setSessionToken(token) {\n  return {\n    type: SET_TOKEN,\n    payload: { token },\n  };\n}\n\nfunction loginStart() {\n  return { type: LOGIN_START };\n}\n\nexport function login({ email, password }) {\n  const sessionType = Session.preferredSessionType();\n  return post(`/auth/login?session=${sessionType}`, { email, password }, {\n    onStart: loginStart,\n    onComplete: res => (dispatch) => {\n      Session.set(res.meta.jwt);\n      dispatch(setSessionToken(res.meta.jwt));\n      dispatch(initState());\n    },\n    onError: error => ({\n      type: LOGIN_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function register({\n  email, username, password, grecaptcha,\n}) {\n  return post('/auth/register', {\n    email, username, password, grecaptcha,\n  }, {\n    onStart: () => ({ type: REGISTER_START }),\n    onComplete: res => (dispatch) => {\n      const user = res.data;\n      debug('registered', user);\n      dispatch({\n        type: REGISTER_COMPLETE,\n        payload: { user },\n      });\n      dispatch(login({ email, password }))\n        .then(() => {\n          if (matchMedia('(min-width: 769px)').matches) {\n            return startTutorial();\n          }\n          return null;\n        });\n    },\n    onError: error => ({\n      type: REGISTER_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nfunction logoutStart() {\n  return { type: LOGOUT_START };\n}\n\nfunction logoutComplete() {\n  return (dispatch) => {\n    dispatch({ type: LOGOUT_COMPLETE });\n    dispatch(setPlaylists([]));\n  };\n}\n\nexport function logout() {\n  return del('/auth', {}, {\n    onStart: () => (dispatch) => {\n      dispatch(logoutStart());\n      Session.unset();\n    },\n    onComplete: logoutComplete,\n  });\n}\n\nexport function resetPassword(email) {\n  return post('/auth/password/reset', email, {\n    onComplete: () => ({\n      type: RESET_PASSWORD_COMPLETE,\n      payload: 'Successfully sent password reset email',\n    }),\n    onError: error => ({\n      type: RESET_PASSWORD_COMPLETE,\n      error: true,\n      payload: error,\n    }),\n  });\n}\n\nexport function getSocketAuthToken() {\n  return get('/auth/socket', {\n    onComplete: res => () => ({\n      socketToken: res.data.socketToken,\n    }),\n  });\n}\n\nfunction whenWindowClosed(window) {\n  return new Promise((resolve) => {\n    const i = setInterval(() => {\n      if (window.closed) {\n        clearInterval(i);\n        resolve();\n      }\n    }, 50);\n  });\n}\nfunction socialLogin(service) {\n  return (dispatch, getState) => {\n    const { apiUrl } = getState().config;\n    const loginWindow = window.open(`${apiUrl}/auth/service/${service}`);\n    return whenWindowClosed(loginWindow).then(() => {\n      // Check login state after the window closed.\n      dispatch(initState());\n    });\n  };\n}\nexport function loginWithGoogle() {\n  return socialLogin('google');\n}\n"]}