{"version":3,"sources":["password-reset/components/PasswordResetPage/index.js"],"names":["enhance","_ref","color","_ref2","_ref3","PasswordResetPage","_React$Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","call","apply","concat","state","newPassword","newPasswordConfirm","handlePasswordChange","event","setState","target","value","handlePasswordConfirmChange","handleSubmit","preventDefault","isValid","props","onSubmit","prototype","render","_props","t","email","className","type","disabled","placeholder","icon","onChange","Component","propTypes","process","env","NODE_ENV","func","isRequired","string"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailIcon from 'material-ui/svg-icons/communication/email';\nimport PasswordIcon from 'material-ui/svg-icons/action/lock';\nimport Paper from 'material-ui/Paper';\nimport { translate } from 'react-i18next';\nimport Form from '../../../components/Form';\nimport FormGroup from '../../../components/Form/Group';\nimport TextField from '../../../components/Form/TextField';\nimport Button from '../../../components/Form/Button';\n\nconst enhance = translate();\n\nclass PasswordResetPage extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  state = {\n    newPassword: '',\n    newPasswordConfirm: ''\n  };\n\n  isValid() {\n    return this.state.newPassword.length >= 6 &&\n      this.state.newPassword === this.state.newPasswordConfirm;\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({\n      newPassword: event.target.value\n    });\n  };\n\n  handlePasswordConfirmChange = (event) => {\n    this.setState({\n      newPasswordConfirm: event.target.value\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.props.onSubmit(this.state.newPassword);\n    }\n  };\n\n  render() {\n    const { t, email } = this.props;\n    const isValid = this.isValid();\n\n    return (\n      <Paper className=\"PasswordReset\">\n        <p>\n          {t('resetPassword.introduction')}\n        </p>\n        <Form onSubmit={this.handleSubmit}>\n          {email && (\n            // Not used at the moment, but we may show (parts of) the user's\n            // email address on the reset page at some point.\n            <FormGroup>\n              <TextField\n                type=\"email\"\n                disabled\n                value={email}\n                placeholder={t('login.email')}\n                icon={<EmailIcon color=\"#9f9d9e\" />}\n              />\n            </FormGroup>\n          )}\n          <FormGroup>\n            <TextField\n              type=\"password\"\n              value={this.state.newPassword}\n              onChange={this.handlePasswordChange}\n              placeholder={t('login.password')}\n              icon={<PasswordIcon color=\"#9f9d9e\" />}\n            />\n          </FormGroup>\n          <FormGroup>\n            <TextField\n              type=\"password\"\n              value={this.state.newPasswordConfirm}\n              onChange={this.handlePasswordConfirmChange}\n              placeholder={t('login.password')}\n              icon={<PasswordIcon color=\"#9f9d9e\" />}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button disabled={!isValid}>\n              {t('resetPassword.submit')}\n            </Button>\n          </FormGroup>\n        </Form>\n      </Paper>\n    );\n  }\n}\n\nexport default enhance(PasswordResetPage);\n"]}