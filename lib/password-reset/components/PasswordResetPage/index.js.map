{"version":3,"sources":["password-reset/components/PasswordResetPage/index.js"],"names":["enhance","_ref","EmailIcon","nativeColor","_ref2","PasswordIcon","_ref3","PasswordResetPage","_React$Component","_temp","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","newPassword","newPasswordConfirm","handlePasswordChange","event","setState","target","value","handlePasswordConfirmChange","handleSubmit","preventDefault","isValid","props","onSubmit","_proto","prototype","render","_this$props","t","email","Paper","className","Form","FormGroup","Typography","TextField","type","disabled","placeholder","icon","autocomplete","onChange","Button","React","Component","propTypes","process","env","NODE_ENV","PropTypes","func","isRequired","string"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PasswordIcon from '@material-ui/icons/Lock';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { translate } from 'react-i18next';\nimport Form from '../../../components/Form';\nimport FormGroup from '../../../components/Form/Group';\nimport TextField from '../../../components/Form/TextField';\nimport Button from '../../../components/Form/Button';\n\nconst enhance = translate();\n\nclass PasswordResetPage extends React.Component {\n  static propTypes = {\n    t: PropTypes.func.isRequired,\n    email: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    newPassword: '',\n    newPasswordConfirm: '',\n  };\n\n  isValid() {\n    return this.state.newPassword.length >= 6 &&\n      this.state.newPassword === this.state.newPasswordConfirm;\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({\n      newPassword: event.target.value,\n    });\n  };\n\n  handlePasswordConfirmChange = (event) => {\n    this.setState({\n      newPasswordConfirm: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.isValid()) {\n      this.props.onSubmit(this.state.newPassword);\n    }\n  };\n\n  render() {\n    const { t, email } = this.props;\n    const isValid = this.isValid();\n\n    return (\n      <Paper className=\"PasswordReset\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Typography>\n              {t('resetPassword.introduction')}\n            </Typography>\n          </FormGroup>\n          {email && (\n            // Not used at the moment, but we may show (parts of) the user's\n            // email address on the reset page at some point.\n            <FormGroup>\n              <TextField\n                type=\"email\"\n                disabled\n                value={email}\n                placeholder={t('login.email')}\n                icon={<EmailIcon nativeColor=\"#9f9d9e\" />}\n              />\n            </FormGroup>\n          )}\n          <FormGroup>\n            <TextField\n              type=\"password\"\n              autocomplete=\"new-password\"\n              value={this.state.newPassword}\n              onChange={this.handlePasswordChange}\n              placeholder={t('login.password')}\n              icon={<PasswordIcon nativeColor=\"#9f9d9e\" />}\n            />\n          </FormGroup>\n          <FormGroup>\n            <TextField\n              type=\"password\"\n              autocomplete=\"new-password\"\n              value={this.state.newPasswordConfirm}\n              onChange={this.handlePasswordConfirmChange}\n              placeholder={t('login.password')}\n              icon={<PasswordIcon nativeColor=\"#9f9d9e\" />}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button disabled={!isValid}>\n              {t('resetPassword.submit')}\n            </Button>\n          </FormGroup>\n        </Form>\n      </Paper>\n    );\n  }\n}\n\nexport default enhance(PasswordResetPage);\n"]}