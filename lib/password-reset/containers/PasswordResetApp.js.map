{"version":3,"sources":["password-reset/containers/PasswordResetApp.js"],"names":["mapStateToProps","muiTheme","success","state","passwordReset","mapDispatchToProps","onSubmit","enhance","_ref2","_ref3","PasswordResetApp","_ref","locale","props","i18n","createElement","propTypes","process","env","NODE_ENV","object","isRequired","bool"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAIA,kBAAkB,wCAAyB;AAC7CC,8CAD6C;AAE7CC,WAAS,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,WAAOA,MAAMC,aAAN,CAAoBF,OAA3B;AACD;AAJ4C,CAAzB,CAAtB;;AAOA,IAAIG,qBAAqB;AACvBC;AADuB,CAAzB;;AAIA,IAAIC,UAAU,yBAAQP,eAAR,EAAyBK,kBAAzB,CAAd;;AAEA,IAAIG,QAAQ,uDAA+B,EAA/B,CAAZ;;AAEA,IAAIC,QAAQ,wCAAgB,EAAhB,CAAZ;;AAEA,IAAIC,mBAAmB,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIV,WAAWU,KAAKV,QAApB;AAAA,MACIW,SAASD,KAAKC,MADlB;AAAA,MAEIV,UAAUS,KAAKT,OAFnB;AAAA,MAGIW,QAAQ,uCAAyBF,IAAzB,EAA+B,CAAC,UAAD,EAAa,QAAb,EAAuB,SAAvB,CAA/B,CAHZ;;AAKA,SAAO,+CAAuB;AAC5BV,cAAUA;AADkB,GAAvB,EAEJ,KAAK,CAFD,EAEI,kDAAsB;AAC/Ba,UAAMF;AADyB,GAAtB,EAER,KAAK,CAFG,EAEA,mBAAK,KAAL,EAAY,EAAZ,EAAgB,KAAK,CAArB,EAAwBV,UAAUM,KAAV,GAAkB,gBAAMO,aAAN,8BAAuCF,KAAvC,CAA1C,EAAyFJ,KAAzF,CAFA,CAFJ,CAAP;AAKD,CAXD;;AAaAC,iBAAiBM,SAAjB,GAA6BC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACnElB,YAAU,oBAAUmB,MAAV,CAAiBC,UADwC;AAEnET,UAAQ,oBAAUQ,MAAV,CAAiBC,UAF0C;AAGnEnB,WAAS,oBAAUoB;AAHgD,CAAxC,GAIzB,EAJJ;;kBAMef,QAAQG,gBAAR,C;AACf","file":"PasswordResetApp.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport { I18nextProvider } from 'react-i18next';\nimport { resetPassword } from '../actions';\nimport ErrorArea from '../../containers/ErrorArea';\nimport PasswordResetPage from '../components/PasswordResetPage';\nimport PasswordResetSuccessPage from '../components/PasswordResetSuccessPage';\nimport { muiThemeSelector } from '../../selectors/settingSelectors';\n\nconst mapStateToProps = createStructuredSelector({\n  muiTheme: muiThemeSelector,\n  success: state => state.passwordReset.success\n});\n\nconst mapDispatchToProps = {\n  onSubmit: resetPassword\n};\n\nconst enhance = connect(mapStateToProps, mapDispatchToProps);\n\nconst PasswordResetApp = ({\n  muiTheme, locale, success, ...props\n}) => (\n  <MuiThemeProvider muiTheme={muiTheme}>\n    <I18nextProvider i18n={locale}>\n      <div>\n        {success ? (\n          <PasswordResetSuccessPage />\n        ) : (\n          <PasswordResetPage {...props} />\n        )}\n        <ErrorArea />\n      </div>\n    </I18nextProvider>\n  </MuiThemeProvider>\n);\n\nPasswordResetApp.propTypes = {\n  muiTheme: PropTypes.object.isRequired,\n  locale: PropTypes.object.isRequired,\n  success: PropTypes.bool\n};\n\nexport default enhance(PasswordResetApp);\n"]}