{"version":3,"sources":["utils/commands/staff.js"],"names":["action","dispatch","getState","allRoles","Object","keys","roles","filter","role","indexOf","permissions","join","guard","username","user"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA,4BAAS,OAAT,EAAkB,aAAlB,EAAiC;AAC/BA,UAAQ,SAASA,MAAT,GAAkB;AACxB,WAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACnC,UAAIC,WAAWC,OAAOC,IAAP,CAAY,oCAAcH,UAAd,CAAZ,CAAf;AACA,UAAII,QAAQH,SAASI,MAAT,CAAgB,UAAUC,IAAV,EAAgB;AAC1C,eAAOA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA9B;AACD,OAFW,CAAZ;AAGA,UAAIC,cAAcP,SAASI,MAAT,CAAgB,UAAUC,IAAV,EAAgB;AAChD,eAAOA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA9B;AACD,OAFiB,CAAlB;;AAIAR,eAAS,6BAAI,YAAYK,MAAMK,IAAN,CAAW,IAAX,CAAhB,CAAT;AACA,aAAOV,SAAS,6BAAI,kBAAkBS,YAAYC,IAAZ,CAAiB,IAAjB,CAAtB,CAAT,CAAP;AACD,KAXD;AAYD;AAd8B,CAAjC;;AAiBA,4BAAS,SAAT,EAAoB,2DAApB,EAAiF;AAC/EC,yCAD+E;AAE/EZ,UAAQ,SAASA,MAAT,CAAgBa,QAAhB,EAA0BL,IAA1B,EAAgC;AACtC,WAAO,UAAUP,QAAV,EAAoBC,QAApB,EAA8B;AACnC,UAAI,CAACW,QAAL,EAAe;AACb,eAAOZ,SAAS,6BAAI,sCAAJ,CAAT,CAAP;AACD;AACD,UAAI,CAACO,IAAL,EAAW;AACT,eAAOP,SAAS,6BAAI,iCAAiCY,QAAjC,GAA4C,+BAAhD,CAAT,CAAP;AACD;AACD,UAAIC,OAAO,4BAAS,qCAAiBZ,UAAjB,CAAT,EAAuCW,QAAvC,CAAX;AACA,aAAOZ,SAAS,2CAAYa,IAAZ,EAAkBN,IAAlB,CAAT,CAAP;AACD,KATD;AAUD;AAb8E,CAAjF;;AAgBA,4BAAS,YAAT,EAAuB,gEAAvB,EAAyF;AACvFI,yCADuF;AAEvFZ,UAAQ,SAASA,MAAT,CAAgBa,QAAhB,EAA0BL,IAA1B,EAAgC;AACtC,WAAO,UAAUP,QAAV,EAAoBC,QAApB,EAA8B;AACnC,UAAI,CAACW,QAAL,EAAe;AACb,eAAOZ,SAAS,6BAAI,sCAAJ,CAAT,CAAP;AACD;AACD,UAAI,CAACO,IAAL,EAAW;AACT,eAAOP,SAAS,6BAAI,8BAA8BY,QAA9B,GAAyC,+BAA7C,CAAT,CAAP;AACD;AACD,UAAIC,OAAO,4BAAS,qCAAiBZ,UAAjB,CAAT,EAAuCW,QAAvC,CAAX;AACA,aAAOZ,SAAS,8CAAea,IAAf,EAAqBN,IAArB,CAAT,CAAP;AACD,KATD;AAUD;AAbsF,CAAzF;;AAgBA,4BAAS,OAAT,EAAkB,gCAAlB,EAAoD;AAClDI,2CADkD;AAElDZ;AAFkD,CAApD;AAIA","file":"staff.js","sourcesContent":["import { register, findUser } from '../ChatCommands';\nimport { log } from '../../actions/ChatActionCreators';\n\nimport { rolesSelector } from '../../selectors/configSelectors';\nimport {\n  userListSelector,\n  isModeratorSelector,\n  isManagerSelector,\n} from '../../selectors/userSelectors';\nimport {\n  addUserRole,\n  removeUserRole,\n} from '../../actions/ModerationActionCreators';\nimport { toggleAdmin } from '../../actions/OverlayActionCreators';\n\nregister(\n  'roles',\n  'List roles.',\n  {\n    action: () => (dispatch, getState) => {\n      const allRoles = Object.keys(rolesSelector(getState()));\n      const roles = allRoles.filter(role => role.indexOf('.') === -1);\n      const permissions = allRoles.filter(role => role.indexOf('.') !== -1);\n\n      dispatch(log(`Roles: ${roles.join(', ')}`));\n      return dispatch(log(`Permissions: ${permissions.join(', ')}`));\n    },\n  },\n);\n\nregister(\n  'addrole',\n  'Assign a role to a user. Syntax: \"/addrole username role\"',\n  {\n    guard: isManagerSelector,\n    action: (username, role) => (dispatch, getState) => {\n      if (!username) {\n        return dispatch(log('Provide a user to promote or demote.'));\n      }\n      if (!role) {\n        return dispatch(log(`Provide a role to assign to ${username}. Use /roles for a full list.`));\n      }\n      const user = findUser(\n        userListSelector(getState()),\n        username,\n      );\n      return dispatch(addUserRole(user, role));\n    },\n  },\n);\n\nregister(\n  'removerole',\n  'Remove a role from a user. Syntax: \"/removerole username role\"',\n  {\n    guard: isManagerSelector,\n    action: (username, role) => (dispatch, getState) => {\n      if (!username) {\n        return dispatch(log('Provide a user to promote or demote.'));\n      }\n      if (!role) {\n        return dispatch(log(`Provide a role assign to ${username}. Use /roles for a full list.`));\n      }\n      const user = findUser(\n        userListSelector(getState()),\n        username,\n      );\n      return dispatch(removeUserRole(user, role));\n    },\n  },\n);\n\nregister(\n  'admin',\n  'Open the administration panel.',\n  {\n    guard: isModeratorSelector,\n    action: toggleAdmin,\n  },\n);\n"]}