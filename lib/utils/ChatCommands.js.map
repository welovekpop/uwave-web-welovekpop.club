{"version":3,"sources":["utils/ChatCommands.js"],"names":["getCommands","register","canExecute","execute","findUser","debug","commands","name","description","_ref","action","guard","state","_ref2","arguments","length","undefined","args","allowed","_commands$name","apply","users","username","lname","toLowerCase","o"],"mappings":";;;;;QAOgBA,W,GAAAA,W;QAIAC,Q,GAAAA,Q;QAOAC,U,GAAAA,U;QAOAC,O,GAAAA,O;QAiBAC,Q,GAAAA,Q;;AA1ChB;;;;AACA;;;;;;AAEA,IAAIC,QAAQ,qBAAY,qBAAZ,CAAZ;;AAEA,IAAIC,WAAW,EAAf;;AAEO,SAASN,WAAT,GAAuB;AAC5B,SAAOM,QAAP;AACD;;AAEM,SAASL,QAAT,CAAkBM,IAAlB,EAAwBC,WAAxB,EAAqCC,IAArC,EAA2C;AAChD,MAAIC,SAASD,KAAKC,MAAlB;AAAA,MACIC,QAAQF,KAAKE,KADjB;;AAGAL,WAASC,IAAT,IAAiB,EAAEC,aAAaA,WAAf,EAA4BE,QAAQA,MAApC,EAA4CC,OAAOA,KAAnD,EAAjB;AACD;;AAEM,SAAST,UAAT,CAAoBU,KAApB,EAA2B;AAChC,MAAIC,QAAQC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAAhF;AAAA,MACIH,QAAQE,MAAMF,KADlB;;AAGA,SAAOA,QAAQA,MAAMC,KAAN,CAAR,GAAuB,IAA9B;AACD;;AAEM,SAAST,OAAT,CAAiBS,KAAjB,EAAwBL,IAAxB,EAA8B;AACnC,MAAIU,OAAOH,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAA/E;;AAEAT,QAAM,SAAN,EAAiBE,IAAjB,EAAuBU,IAAvB;AACA,MAAIX,SAASC,IAAT,CAAJ,EAAoB;AAClB,QAAIW,UAAUhB,WAAWU,KAAX,EAAkBN,SAASC,IAAT,CAAlB,CAAd;AACAF,UAAM,YAAN,EAAoBa,OAApB;AACA,QAAIA,OAAJ,EAAa;AACX,UAAIC,cAAJ;;AAEA,aAAO,CAACA,iBAAiBb,SAASC,IAAT,CAAlB,EAAkCG,MAAlC,CAAyCU,KAAzC,CAA+CD,cAA/C,EAA+DF,IAA/D,CAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED;AACO,SAASb,QAAT,CAAkBiB,KAAlB,EAAyBC,QAAzB,EAAmC;AACxC,MAAIC,QAAQD,SAASE,WAAT,EAAZ;AACA,SAAO,yBAAKH,KAAL,EAAY,UAAUI,CAAV,EAAa;AAC9B,WAAOA,EAAEH,QAAF,CAAWE,WAAX,OAA6BD,KAApC;AACD,GAFM,CAAP;AAGD;AACD","file":"ChatCommands.js","sourcesContent":["import find from 'array-find';\nimport createDebug from 'debug';\n\nconst debug = createDebug('uwave:chat-commands');\n\nconst commands = {};\n\nexport function getCommands() {\n  return commands;\n}\n\nexport function register(name, description, { action, guard }) {\n  commands[name] = { description, action, guard };\n}\n\nexport function canExecute(state, { guard } = {}) {\n  return guard ? guard(state) : true;\n}\n\nexport function execute(state, name, args = []) {\n  debug('execute', name, args);\n  if (commands[name]) {\n    const allowed = canExecute(state, commands[name]);\n    debug('canExecute', allowed);\n    if (allowed) {\n      return commands[name].action(...args);\n    }\n  }\n  return null;\n}\n\n// Helper to consistently find online users in command handlers.\nexport function findUser(users, username) {\n  const lname = username.toLowerCase();\n  return find(users, o => o.username.toLowerCase() === lname);\n}\n"]}