{"version":3,"sources":["utils/ChatCommands.js"],"names":["debug","commands","getCommands","register","name","description","_ref","action","guard","canExecute","state","_temp","_ref2","execute","args","allowed","_commands$name","apply","findUser","users","username","lname","toLowerCase","o"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;AACA,IAAIA,QAAQ,oBAAY,qBAAZ,CAAZ;AACA,IAAIC,WAAW,EAAf;;AACO,SAASC,WAAT,GAAuB;AAC5B,SAAOD,QAAP;AACD;;AACM,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,WAAxB,EAAqCC,IAArC,EAA2C;AAChD,MAAIC,SAASD,KAAKC,MAAlB;AAAA,MACIC,QAAQF,KAAKE,KADjB;AAEAP,WAASG,IAAT,IAAiB;AACfC,iBAAaA,WADE;AAEfE,YAAQA,MAFO;AAGfC,WAAOA;AAHQ,GAAjB;AAKD;;AACM,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkC;AACvC,MAAIC,QAAQD,UAAU,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAApC;AAAA,MACIH,QAAQI,MAAMJ,KADlB;;AAGA,SAAOA,QAAQA,MAAME,KAAN,CAAR,GAAuB,IAA9B;AACD;;AACM,SAASG,OAAT,CAAiBH,KAAjB,EAAwBN,IAAxB,EAA8BU,IAA9B,EAAoC;AACzC,MAAIA,SAAS,KAAK,CAAlB,EAAqB;AACnBA,WAAO,EAAP;AACD;;AAEDd,QAAM,SAAN,EAAiBI,IAAjB,EAAuBU,IAAvB;;AAEA,MAAIb,SAASG,IAAT,CAAJ,EAAoB;AAClB,QAAIW,UAAUN,WAAWC,KAAX,EAAkBT,SAASG,IAAT,CAAlB,CAAd;AACAJ,UAAM,YAAN,EAAoBe,OAApB;;AAEA,QAAIA,OAAJ,EAAa;AACX,UAAIC,cAAJ;;AAEA,aAAO,CAACA,iBAAiBf,SAASG,IAAT,CAAlB,EAAkCG,MAAlC,CAAyCU,KAAzC,CAA+CD,cAA/C,EAA+DF,IAA/D,CAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,C,CAAC;;;AAEK,SAASI,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmC;AACxC,MAAIC,QAAQD,SAASE,WAAT,EAAZ;AACA,SAAO,wBAAKH,KAAL,EAAY,UAAUI,CAAV,EAAa;AAC9B,WAAOA,EAAEH,QAAF,CAAWE,WAAX,OAA6BD,KAApC;AACD,GAFM,CAAP;AAGD,C,CACD","file":"ChatCommands.js","sourcesContent":["import find from 'array-find';\nimport createDebug from 'debug';\n\nconst debug = createDebug('uwave:chat-commands');\n\nconst commands = {};\n\nexport function getCommands() {\n  return commands;\n}\n\nexport function register(name, description, { action, guard }) {\n  commands[name] = { description, action, guard };\n}\n\nexport function canExecute(state, { guard } = {}) {\n  return guard ? guard(state) : true;\n}\n\nexport function execute(state, name, args = []) {\n  debug('execute', name, args);\n  if (commands[name]) {\n    const allowed = canExecute(state, commands[name]);\n    debug('canExecute', allowed);\n    if (allowed) {\n      return commands[name].action(...args);\n    }\n  }\n  return null;\n}\n\n// Helper to consistently find online users in command handlers.\nexport function findUser(users, username) {\n  const lname = username.toLowerCase();\n  return find(users, o => o.username.toLowerCase() === lname);\n}\n"]}