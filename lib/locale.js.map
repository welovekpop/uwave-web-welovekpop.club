{"version":3,"sources":["locale.js"],"names":["createLocale","en","_class","_temp","resources","cs","System","import","cy","de","es","fr","ko","nl","pt","zh","UwaveBackend","type","cache","Promise","resolve","prototype","getResource","language","reject","Error","read","namespace","callback","then","resource","result","catch","i18next","use","init","fallbackLng","defaultNS","interpolation","escapeValue","availableLanguages","concat","Object","keys","locale","cloneInstance","changeLanguage"],"mappings":"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","file":"locale.js","sourcesContent":["import i18next from 'i18next';\nimport * as en from '../locale/en.yaml';\n\nconst resources = {\n  cs: () => import('../locale/cs.yaml'),\n  cy: () => import('../locale/cy.yaml'),\n  de: () => import('../locale/de.yaml'),\n  es: () => import('../locale/es.yaml'),\n  fr: () => import('../locale/fr.yaml'),\n  ko: () => import('../locale/ko.yaml'),\n  nl: () => import('../locale/nl.yaml'),\n  pt: () => import('../locale/pt.yaml'),\n  zh: () => import('../locale/zh.yaml')\n};\n\nclass UwaveBackend {\n  static type = 'backend';\n  type = 'backend';\n  cache = { en: Promise.resolve(en) };\n\n  getResource(language) {\n    if (this.cache[language]) {\n      return this.cache[language];\n    }\n    if (!resources[language]) {\n      return Promise.reject(new Error(`The language \"${language}\" is not supported.`));\n    }\n\n    this.cache[language] = resources[language]();\n\n    return this.cache[language];\n  }\n\n  read(language, namespace, callback) {\n    this.getResource(language)\n      .then(resource => resource[namespace])\n      .then((result) => {\n        callback(null, result);\n      })\n      .catch(callback);\n  }\n}\n\ni18next.use(new UwaveBackend());\n\ni18next.init({\n  fallbackLng: 'en',\n  defaultNS: 'uwave',\n  interpolation: {\n    // Prevent double-escapes: React already escapes things for us\n    escapeValue: false\n  }\n});\n\nexport const availableLanguages = [ 'en', ...Object.keys(resources) ];\n\nexport default function createLocale(language) {\n  const locale = i18next.cloneInstance();\n  locale.availableLanguages = availableLanguages;\n\n  return new Promise((resolve) => {\n    locale.changeLanguage(language, () => {\n      resolve(locale);\n    });\n  });\n}\n"]}