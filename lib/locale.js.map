{"version":3,"sources":["locale.js"],"names":["createLocale","_class","_temp","resources","cs","System","import","cy","de","fr","ko","nl","pt","zh","UwaveBackend","type","cache","en","Promise","resolve","prototype","getResource","language","reject","Error","read","namespace","callback","then","resource","result","catch","i18next","use","init","fallbackLng","defaultNS","interpolation","escapeValue","availableLanguages","concat","Object","keys","locale","cloneInstance","changeLanguage"],"mappings":";;;;;;kBAuDwBA,Y;;AAvDxB;;;;AAAA;;;;AACA;;;;;;AACA,IAAIC,MAAJ,EAAYC,KAAZ;;AACA,IAAMC,YAAY;AAChBC,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAC,OAAAC,MAAA,CAAa,mBAAb,CAAA;AADY,GAAA;AAEhBC,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAF,OAAAC,MAAA,CAAa,mBAAb,CAAA;AAFY,GAAA;AAGhBE,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAH,OAAAC,MAAA,CAAa,mBAAb,CAAA;AAHY,GAAA;AAIhBG,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAJ,OAAAC,MAAA,CAAa,mBAAb,CAAA;AAJY,GAAA;AAKhBI,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAL,OAAAC,MAAA,CAAa,mBAAb,CAAA;AALY,GAAA;AAMhBK,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAN,OAAAC,MAAA,CAAa,mBAAb,CAAA;AANY,GAAA;AAOhBM,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAP,OAAAC,MAAA,CAAa,mBAAb,CAAA;AAPY,GAAA;AAQhBO,MAAI,SAAAA,EAAA,GAAA;AAAA,WAAAR,OAAAC,MAAA,CAAa,mBAAb,CAAA;AAAA;AARY,CAAlB;;AA+BA,IApBMQ,gBAoBcZ,QAAQD,SAAS,YAAY;AAC/C,WAASa,YAAT,GAAwB;AACtB,kCAAgB,IAAhB,EAAsBA,YAAtB;;AAEA,SAtBFC,IAsBE,GAtBK,SAsBL;AACA,SAtBFC,KAsBE,GAtBM,EAAEC,IAAIC,QAAQC,OAARD,cAAN,EAsBN;AACD;;AAEDJ,eAAaM,SAAb,CAvBAC,WAuBA,GAAqC,SAASA,WAAT,CAvBzBC,QAuByB,EAvBf;AACpB,QAAI,KAAKN,KAAL,CAAWM,QAAX,CAAJ,EAA0B;AACxB,aAAO,KAAKN,KAAL,CAAWM,QAAX,CAAP;AACD;AACD,QAAI,CAACnB,UAAUmB,QAAVnB,CAAL,EAA0B;AACxB,aAAOe,QAAQK,MAARL,CAAe,IAAIM,KAAJ,CAAA,mBAA2BF,QAA3B,GAAA,qBAAA,CAAfJ,CAAP;AACD;;AAED,SAAKF,KAAL,CAAWM,QAAX,IAAuBnB,UAAUmB,QAAVnB,GAAvB;;AAEA,WAAO,KAAKa,KAAL,CAAWM,QAAX,CAAP;AAwBD,GAXD;;AAaAR,eAAaM,SAAb,CAvBAK,IAuBA,GAA8B,SAASA,IAAT,CAvBzBH,QAuByB,EAvBfI,SAuBe,EAvBJC,QAuBI,EAvBM;AAClC,SAAKN,WAAL,CAAiBC,QAAjB,EACGM,IADH,CACQ,UAAAC,QAAA,EAAA;AAAA,aAAYA,SAASH,SAATG,CAAZ;AADR,KAAA,EAEGD,IAFH,CAEQ,UAACE,MAAD,EAAY;AAChBH,eAAS,IAATA,EAAeG,MAAfH;AAHJ,KAAA,EAKGI,KALH,CAKSJ,QALT;AA4BD,GAND;;AAQA,SAAOb,YAAP;AACD,CA9BoC,EAAjB,EA8Bfb,OAjDIc,IAiDJ,GAjDW,SAmBI,EA8BUb,KAlDxBY,CAoBN;;AAQAkB,kBAAQC,GAARD,CAAY,IAAIlB,YAAJ,EAAZkB;;AAEAA,kBAAQE,IAARF,CAAa;AACXG,eAAa,IADF;AAEXC,aAAW,OAFA;AAGXC,iBAAe;AACb;AACAC,iBAAa;AAFA;AAHJ,CAAbN;;AASO,IAAMO,kDAAAA,CAAuB,IAAvBA,EAAAC,MAAAD,CAAgCE,OAAOC,IAAPD,CAAYtC,SAAZsC,CAAhCF,CAAN;;AAEQ,SAASvC,YAAT,CAAsBsB,QAAtB,EAAgC;AAC7C,MAAMqB,SAASX,kBAAQY,aAARZ,EAAf;AACAW,SAAOE,cAAPF,CAAsBrB,QAAtBqB;;AAEAA,SAAOJ,kBAAPI,GAA4BJ,kBAA5BI;;AAEA,SAAOA,MAAP;AACD;AA0BD","file":"locale.js","sourcesContent":["import i18next from 'i18next';\nimport en from '../locale/en.yaml';\n\nconst resources = {\n  cs: () => import('../locale/cs.yaml'),\n  cy: () => import('../locale/cy.yaml'),\n  de: () => import('../locale/de.yaml'),\n  fr: () => import('../locale/fr.yaml'),\n  ko: () => import('../locale/ko.yaml'),\n  nl: () => import('../locale/nl.yaml'),\n  pt: () => import('../locale/pt.yaml'),\n  zh: () => import('../locale/zh.yaml')\n};\n\nclass UwaveBackend {\n  static type = 'backend';\n  type = 'backend';\n  cache = { en: Promise.resolve(en) };\n\n  getResource(language) {\n    if (this.cache[language]) {\n      return this.cache[language];\n    }\n    if (!resources[language]) {\n      return Promise.reject(new Error(`The language \"${language}\" is not supported.`));\n    }\n\n    this.cache[language] = resources[language]();\n\n    return this.cache[language];\n  }\n\n  read(language, namespace, callback) {\n    this.getResource(language)\n      .then(resource => resource[namespace])\n      .then((result) => {\n        callback(null, result);\n      })\n      .catch(callback);\n  }\n}\n\ni18next.use(new UwaveBackend());\n\ni18next.init({\n  fallbackLng: 'en',\n  defaultNS: 'uwave',\n  interpolation: {\n    // Prevent double-escapes: React already escapes things for us\n    escapeValue: false\n  }\n});\n\nexport const availableLanguages = [ 'en', ...Object.keys(resources) ];\n\nexport default function createLocale(language) {\n  const locale = i18next.cloneInstance();\n  locale.changeLanguage(language);\n\n  locale.availableLanguages = availableLanguages;\n\n  return locale;\n}\n"]}