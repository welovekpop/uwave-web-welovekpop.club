{"version":3,"sources":["locale.js"],"names":["createLocale","en","resources","cs","cy","de","es","fr","ko","nl","pt","zh","UwaveBackend","type","cache","prototype","getResource","language","Promise","reject","Error","read","namespace","callback","then","resource","result","catch","i18next","use","init","fallbackLng","defaultNS","interpolation","escapeValue","addResourceBundle","uwave","availableLanguages","concat","Object","keys","locale","cloneInstance","resolve","changeLanguage"],"mappings":"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","file":"locale.js","sourcesContent":["import i18next from 'i18next';\nimport * as en from '../locale/en.yaml';\n\nconst resources = {\n  cs: () => import('../locale/cs.yaml' /* webpackChunkName: \"lang_cs\" */),\n  cy: () => import('../locale/cy.yaml' /* webpackChunkName: \"lang_cy\" */),\n  de: () => import('../locale/de.yaml' /* webpackChunkName: \"lang_de\" */),\n  es: () => import('../locale/es.yaml' /* webpackChunkName: \"lang_es\" */),\n  fr: () => import('../locale/fr.yaml' /* webpackChunkName: \"lang_fr\" */),\n  ko: () => import('../locale/ko.yaml' /* webpackChunkName: \"lang_ko\" */),\n  nl: () => import('../locale/nl.yaml' /* webpackChunkName: \"lang_nl\" */),\n  pt: () => import('../locale/pt.yaml' /* webpackChunkName: \"lang_pt\" */),\n  zh: () => import('../locale/zh.yaml' /* webpackChunkName: \"lang_zh\" */),\n};\n\nclass UwaveBackend {\n  static type = 'backend';\n  type = 'backend';\n  cache = {};\n\n  getResource(language) {\n    if (this.cache[language]) {\n      return this.cache[language];\n    }\n    if (!resources[language]) {\n      return Promise.reject(new Error(`The language \"${language}\" is not supported.`));\n    }\n\n    this.cache[language] = resources[language]();\n\n    return this.cache[language];\n  }\n\n  read(language, namespace, callback) {\n    this.getResource(language)\n      .then(resource => resource[namespace])\n      .then((result) => {\n        callback(null, result);\n      })\n      .catch(callback);\n  }\n}\n\ni18next.use(new UwaveBackend());\n\ni18next.init({\n  fallbackLng: 'en',\n  defaultNS: 'uwave',\n  interpolation: {\n    // Prevent double-escapes: React already escapes things for us\n    escapeValue: false,\n  },\n});\n\n// Synchronously add the fallback language.\ni18next.addResourceBundle('en', 'uwave', en.uwave);\n\nexport const availableLanguages = ['en', ...Object.keys(resources)];\n\nexport default function createLocale(language) {\n  const locale = i18next.cloneInstance();\n  locale.availableLanguages = availableLanguages;\n\n  return new Promise((resolve) => {\n    locale.changeLanguage(language, () => {\n      resolve(locale);\n    });\n  });\n}\n"]}